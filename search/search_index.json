{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome to My Notebook","text":"<p>\u8fd9\u91cc\u662f GoPoux \u7684\u4e2a\u4eba\u7b14\u8bb0\u672c</p>"},{"location":"links/","title":"\u53cb\u94fe","text":"<p>45gfg9</p><p>kami</p> <p>shad0wash</p><p>\u7ebf\u4ee3\u306ekami</p>"},{"location":"cs/","title":"Computer Science","text":"<p>Abstract</p> <p>\u5f52\u6863\u5927\u5b66\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\u8bfe\u7a0b\u7684\u4e00\u4e9b\u5b66\u4e60\u7b14\u8bb0</p>"},{"location":"cs/ads/","title":"\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790","text":"<p>Info</p> <p>\u672c\u6587\u6863\u4e3a\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790\u7684\u5b66\u4e60\u7b14\u8bb0\uff0c\u6388\u8bfe\u6559\u5e08\u4e3a \u6768\u6d0b \u3002</p>"},{"location":"cs/ads/chapter1/","title":"AVL, Splay and Amortized Analysis","text":""},{"location":"cs/ads/chapter1/#avl-trees","title":"AVL Trees","text":"<p>\u7ef4\u6301\u5e73\u8861\u7684\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u9ad8\u5ea6\u5dee\u4e0d\u8d85\u8fc71\u3002</p> <p>\u9ad8\u5ea6\u5e73\u8861</p> <p>\u5b9a\u4e49\u7a7a\u6811\u7684\u9ad8\u5ea6\u4e3a -1</p> <ul> <li>\u7a7a\u6811\u662f\u9ad8\u5ea6\u5e73\u8861\u7684</li> <li> <p>\u4e00\u4e2a\u8282\u70b9\u662f\u9ad8\u5ea6\u5e73\u8861\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\uff1a</p> <ol> <li>\u5b83\u7684\u5de6\u53f3\u5b50\u6811\u90fd\u662f\u9ad8\u5ea6\u5e73\u8861\u7684</li> <li>\u5b83\u7684\u5de6\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\u4e0d\u8d85\u8fc7 1</li> </ol> </li> </ul> <p>\u5e73\u8861\u56e0\u5b50\uff08Balance Factor\uff09</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9\uff0c\u5b83\u7684\u5e73\u8861\u56e0\u5b50\u662f\u5b83\u7684\u5de6\u5b50\u6811\u7684\u9ad8\u5ea6\u51cf\u53bb\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6\u3002</p> <p>\u5373 \\( \\text{BF}(v) = \\text{height}(T_l) - \\text{height}(T_r) \\)</p>"},{"location":"cs/ads/chapter1/#operations","title":"Operations","text":""},{"location":"cs/ads/chapter1/#tree-rotation","title":"\u6811\u65cb\u8f6c\uff08Tree Rotation\uff09","text":"<p>\u6811\u65cb\u8f6c\u5206\u4e3a\u5de6\u65cb\u548c\u53f3\u65cb\u3002\u65cb\u8f6c\u64cd\u4f5c\u540e\uff0c\u88ab\u65cb\u8f6c\u7684\u8fb9\u7684\u4e24\u7aef\u4e00\u7aef\u7684\u5b50\u6811\u9ad8\u5ea6\u51cf\u5c0f 1\uff0c\u53e6\u4e00\u7aef\u7684\u5b50\u6811\u9ad8\u5ea6\u589e\u52a0 1\u3002</p> <p>\u53c2\u8003\u4ee3\u7801\uff08\u907f\u514d\u5206\u7c7b\u8ba8\u8bba\uff09\uff1a</p> <pre><code>/*\n * type = 0: right rotate\n * type = 1: left  rotate\n */\nNode *rotate(Node *p, int type) {\n    Node *q = p-&gt;child[type];\n    p-&gt;child[type] = q-&gt;child[type ^ 1];\n    q-&gt;child[type ^ 1] = p;\n    maintain_info(p);\n    maintain_info(q);\n    return q;\n}\n</code></pre>"},{"location":"cs/ads/chapter1/#rebalance","title":"Rebalance","text":"<p>\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u540e\uff0c\u53ef\u80fd\u4f1a\u7834\u574f AVL \u6811\u7684\u5e73\u8861\u6027\u3002\u6b64\u65f6\u9700\u8981\u8fdb\u884c\u6811\u7684\u65cb\u8f6c\u64cd\u4f5c\uff0c\u4f7f\u5f97\u6811\u91cd\u65b0\u5e73\u8861\u3002</p> <p>\u4ece\u63d2\u5165\u6216\u5220\u9664\u7684\u8282\u70b9\u5f00\u59cb\uff0c\u5411\u4e0a\u56de\u6eaf\u66f4\u65b0\u5e73\u8861\u56e0\u5b50\uff0c\u76f4\u5230\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0d\u5e73\u8861\u7684\u8282\u70b9 X\u3002\u8bbe X \u4e2d\u9ad8\u5ea6\u66f4\u9ad8\u7684\u513f\u5b50\u4e3a Z\uff0c\u5b58\u5728\u56db\u79cd\u60c5\u51b5\uff1a</p> <ul> <li>LL\uff1aZ \u662f X \u7684\u5de6\u513f\u5b50\uff0c\u4e14 \\( \\text{BF}(Z) &gt; 1 \\)</li> <li>LR\uff1aZ \u662f X \u7684\u5de6\u513f\u5b50\uff0c\u4e14 \\( \\text{BF}(Z) &lt; -1 \\)</li> <li>RR\uff1aZ \u662f X \u7684\u53f3\u513f\u5b50\uff0c\u4e14 \\( \\text{BF}(Z) &lt; -1 \\)</li> <li>RL\uff1aZ \u662f X \u7684\u53f3\u513f\u5b50\uff0c\u4e14 \\( \\text{BF}(Z) &gt; 1 \\)</li> </ul> <p>\u8fd9\u91cc\u7684\u547d\u540d\u6839\u636e\u7684\u662f\u5931\u8861\u7684\u6765\u6e90\uff0c\u800c\u4e0d\u662f\u65cb\u8f6c\u64cd\u4f5c\u7684\u987a\u5e8f</p> <p>\u5bf9\u5e94\u7684\u9009\u62e9\u64cd\u4f5c\uff1a</p> <ul> <li>LL\uff1a\u53f3\u65cb X</li> <li>LR\uff1a\u5de6\u65cb Z\uff0c\u53f3\u65cb X</li> <li>RR\uff1a\u5de6\u65cb X</li> <li>RL\uff1a\u53f3\u65cb Z\uff0c\u5de6\u65cb X</li> </ul> <p>\u53c2\u8003\u4ee3\u7801\uff1a</p> <pre><code>Node *maintain(Node *p) {\n    if (p == NULL) return p;\n    maintain_info(p);\n    if (p-&gt;bfactor &gt; 1) {\n        if (getHeight(p-&gt;child[0]-&gt;child[0]) &gt;= getHeight(p-&gt;child[0]-&gt;child[1])) {\n            // LL Rotate\n            return rotate(p, 0);\n        } else {\n            // LR Rotate\n            p-&gt;child[0] = rotate(p-&gt;child[0], 1);\n            return rotate(p, 0);\n        }\n    } else if (p-&gt;bfactor &lt; -1) {\n        if (getHeight(p-&gt;child[1]-&gt;child[1]) &gt;= getHeight(p-&gt;child[1]-&gt;child[0])) {\n            // RR Rotate\n            return rotate(p, 1);\n        } else {\n            // RL Rotate\n            p-&gt;child[1] = rotate(p-&gt;child[1], 0);\n            return rotate(p, 1);\n        }\n    }\n    return p;\n}\n</code></pre>"},{"location":"cs/ads/chapter1/#insertion","title":"Insertion","text":"<p>\u5148\u9012\u5f52\u627e\u5230\u63d2\u5165\u7684\u4f4d\u7f6e\uff0c\u65b0\u5efa\u8282\u70b9\uff0c\u7136\u540e\u56de\u6eaf\u66f4\u65b0\u5e73\u8861\u56e0\u5b50\uff0c\u76f4\u5230\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0d\u5e73\u8861\u7684\u8282\u70b9\uff0c\u7136\u540e\u8fdb\u884c rebalance\u3002</p>"},{"location":"cs/ads/chapter1/#deletion","title":"Deletion","text":"<p>\u5148\u9012\u5f52\u627e\u5230\u5220\u9664\u7684\u4f4d\u7f6e\uff0c\u5206\u7c7b\u8ba8\u8bba\uff1a</p> <ul> <li>\u5220\u9664\u7684\u8282\u70b9\u53ea\u6709\u5c0f\u4e8e\u4e24\u4e2a\u513f\u5b50\uff1a\u7528\u5b50\u8282\u70b9\u66ff\u6362\u8be5\u8282\u70b9\uff0c\u4ece\u6b64\u8282\u70b9\u5f00\u59cb\u56de\u6eaf\u66f4\u65b0\u5e73\u8861\u56e0\u5b50\u3002</li> <li>\u5220\u9664\u7684\u8282\u70b9\u6709\u4e24\u4e2a\u513f\u5b50\uff1a\u627e\u5230\u8be5\u8282\u70b9\u7684\u524d\u9a71\uff0c\u4ea4\u6362\u4e24\u8282\u70b9\uff0c\u968f\u540e\u5220\u9664\u524d\u9a71\u8282\u70b9\uff0c\u4ece\u524d\u9a71\u8282\u70b9\u5f00\u59cb\u56de\u6eaf\u66f4\u65b0\u5e73\u8861\u56e0\u5b50\u3002</li> </ul>"},{"location":"cs/ads/chapter1/#_1","title":"\u590d\u6742\u5ea6\u5206\u6790","text":"<p>\u8bbe \\( f(h) \\) \u4e3a\u9ad8\u5ea6\u4e3a \\( h \\) \u7684 AVL \u6811\u7684\u6700\u5c0f\u8282\u70b9\u6570\uff0c\u90a3\u4e48\u6709\uff1a</p> \\[ \\begin{aligned} f(-1) = 0, \\quad f(0) = 1 \\\\ f(h) = f(h-1) + f(h-2) + 1 \\end{aligned} \\] <p>Fibonacci \u6570\u5217</p> <p>Fibonacci \u6570\u5217\u7684\u5b9a\u4e49\u4e3a \\( F(0) = 0, F(1) = 1, F(n) = F(n-1) + F(n-2) \\)\u3002</p> <p>\u5176\u901a\u9879\u516c\u5f0f\u4e3a\uff1a</p> \\[ F(n) \\approx \\frac{1}{\\sqrt{5}} \\left( \\frac{1 + \\sqrt{5}}{2} \\right)^n \\] <p>\u6613\u5f97 \\( f(h) = F(h+3) - 1 \\approx \\frac{1}{\\sqrt{5}} \\left( \\frac{1 + \\sqrt{5}}{2} \\right)^{h+3} - 1\\)\u3002</p> <p>\u5219\u6709 \\( h = O(\\log n) \\)\uff0c\u5219 AVL \u5355\u6b21\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\( O(\\log n) \\)\u3002</p>"},{"location":"cs/ads/chapter1/#_2","title":"\u53c2\u8003\u4ee3\u7801","text":"luoguP3369 \u3010\u6a21\u677f\u3011\u666e\u901a\u5e73\u8861\u6811 <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;limits.h&gt;\n#define INF INT_MAX\n#define max(a, b) ((a) &gt; (b) ? (a) : (b))\n\ntypedef struct Node Node;\nstruct Node {\n    int key, height, size, bfactor;\n    Node *child[2]; // child[0]: left child, child[1]: right child\n};\n\ntypedef struct AVLTree AVLTree;\nstruct AVLTree {\n    Node *root;\n};\n\nNode *newNode(int key) {\n    Node *p = (Node *)malloc(sizeof(Node));\n    p-&gt;key = key;\n    p-&gt;child[0] = p-&gt;child[1] = NULL;\n    p-&gt;height = 0;\n    p-&gt;bfactor = 0;\n    p-&gt;size = 1;\n    return p;\n}\n\nint getHeight(Node *p) {\n    return p == NULL ? -1 : p-&gt;height;\n}\n\nint getSize(Node *p) {\n    return p == NULL ? 0 : p-&gt;size;\n}\n\nvoid maintain_info(Node *p) {\n    if (p == NULL) return;\n    p-&gt;height = max(getHeight(p-&gt;child[0]), getHeight(p-&gt;child[1])) + 1;\n    p-&gt;bfactor = getHeight(p-&gt;child[0]) - getHeight(p-&gt;child[1]);\n    p-&gt;size = 1 + getSize(p-&gt;child[0]) + getSize(p-&gt;child[1]);\n}\n\n/*\n* type = 0: right rotate\n* type = 1: left  rotate\n*/\nNode *rotate(Node *p, int type) {\n    Node *q = p-&gt;child[type];\n    p-&gt;child[type] = q-&gt;child[type ^ 1];\n    q-&gt;child[type ^ 1] = p;\n    maintain_info(p);\n    maintain_info(q);\n    return q;\n}\n\nNode *maintain(Node *p) {\n    if (p == NULL) return p;\n    maintain_info(p);\n    if (p-&gt;bfactor &gt; 1) {\n        if (getHeight(p-&gt;child[0]-&gt;child[0]) &gt;= getHeight(p-&gt;child[0]-&gt;child[1])) {\n            // LL Rotate\n            return rotate(p, 0);\n        } else {\n            // LR Rotate\n            p-&gt;child[0] = rotate(p-&gt;child[0], 1);\n            return rotate(p, 0);\n        }\n    } else if (p-&gt;bfactor &lt; -1) {\n        if (getHeight(p-&gt;child[1]-&gt;child[1]) &gt;= getHeight(p-&gt;child[1]-&gt;child[0])) {\n            // RR Rotate\n            return rotate(p, 1);\n        } else {\n            // RL Rotate\n            p-&gt;child[1] = rotate(p-&gt;child[1], 0);\n            return rotate(p, 1);\n        }\n    }\n    return p;\n}\n\nNode *insert(Node *p, int key) {\n    if (p == NULL) return newNode(key);\n    if (key &lt;= p-&gt;key) {\n        p-&gt;child[0] = insert(p-&gt;child[0], key);\n    } else {\n        p-&gt;child[1] = insert(p-&gt;child[1], key);\n    }\n    return maintain(p);\n}\n\nNode *erase_max(Node *p) {\n    if (p == NULL) return p;\n    if (p-&gt;child[1] == NULL) {\n        Node *q = p-&gt;child[0];\n        free(p);\n        return q;\n    } else {\n        p-&gt;child[1] = erase_max(p-&gt;child[1]);\n        return maintain(p);\n    }\n}\n\nNode *erase(Node *p, int key) {\n    if (p == NULL) return p;\n    if (key &lt; p-&gt;key) {\n        p-&gt;child[0] = erase(p-&gt;child[0], key);\n    } else if (key &gt; p-&gt;key) {\n        p-&gt;child[1] = erase(p-&gt;child[1], key);\n    } else {\n        if (p-&gt;child[0] == NULL || p-&gt;child[1] == NULL) {\n            Node *q = p-&gt;child[0] ? p-&gt;child[0] : p-&gt;child[1];\n            free(p);\n            return q;\n        } else {\n            Node *q = p-&gt;child[0];\n            while (q-&gt;child[1]) q = q-&gt;child[1];\n            p-&gt;key = q-&gt;key;\n            p-&gt;child[0] = erase_max(p-&gt;child[0]);\n        }\n    }\n    return maintain(p);\n}\n\nint query_rank(Node *p, int key) {\n    if (p == NULL) return 0;\n    if (key &lt;= p-&gt;key) {\n        return query_rank(p-&gt;child[0], key);\n    } else {\n        return getSize(p-&gt;child[0]) + 1 + query_rank(p-&gt;child[1], key);\n    }\n}\n\nint query_kth(Node *p, int k) {\n    if (p == NULL) return INF;\n    if (k &lt;= getSize(p-&gt;child[0])) {\n        return query_kth(p-&gt;child[0], k);\n    } else if (k == getSize(p-&gt;child[0]) + 1) {\n        return p-&gt;key;\n    } else {\n        return query_kth(p-&gt;child[1], k - getSize(p-&gt;child[0]) - 1);\n    }\n}\n\nint query_pre(Node *p, int key) {\n    if (p == NULL) return INF;\n    if (key &lt;= p-&gt;key) {\n        return query_pre(p-&gt;child[0], key);\n    } else {\n        int res = query_pre(p-&gt;child[1], key);\n        return res == INF ? p-&gt;key : res;\n    }\n}\n\nint query_suc(Node *p, int key) {\n    if (p == NULL) return INF;\n    if (key &gt;= p-&gt;key) {\n        return query_suc(p-&gt;child[1], key);\n    } else {\n        int res = query_suc(p-&gt;child[0], key);\n        return res == INF ? p-&gt;key : res;\n    }\n}\n\nvoid fprint_tree(Node *p) {\n    if (p == NULL) return;\n    fprint_tree(p-&gt;child[0]);\n    fprintf(stderr, \"%d \", p-&gt;key);\n    fprint_tree(p-&gt;child[1]);\n}\n\nvoid free_tree(Node *p) {\n    if (p == NULL) return;\n    free_tree(p-&gt;child[0]);\n    free_tree(p-&gt;child[1]);\n    free(p);\n}\n\nint main() {\n    int n;\n    scanf(\"%d\", &amp;n);\n    AVLTree *avl = (AVLTree *)malloc(sizeof(AVLTree));\n    avl-&gt;root = NULL;\n    while (n--) {\n        int opt, x;\n        scanf(\"%d%d\", &amp;opt, &amp;x);\n        switch (opt) {\n        case 1:\n            avl-&gt;root = insert(avl-&gt;root, x);\n            break;\n        case 2:\n            avl-&gt;root = erase(avl-&gt;root, x);\n            break;\n        case 3:\n            printf(\"%d\\n\", query_rank(avl-&gt;root, x) + 1);\n            break;\n        case 4:\n            printf(\"%d\\n\", query_kth(avl-&gt;root, x));\n            break;\n        case 5:\n            printf(\"%d\\n\", query_pre(avl-&gt;root, x));\n            break;\n        case 6:\n            printf(\"%d\\n\", query_suc(avl-&gt;root, x));\n            break;\n        }\n        // fprintf(stderr, \"[\");\n        // fprint_tree(avl-&gt;root);\n        // fprintf(stderr, \"]\\n\");\n    }\n    free_tree(avl-&gt;root);\n    return 0;\n}\n</code></pre>"},{"location":"cs/ads/chapter1/#splay-trees","title":"Splay Trees","text":"<p>\u81ea\u8c03\u6574\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u901a\u8fc7 splay \u64cd\u4f5c\u4fdd\u8bc1\u590d\u6742\u5ea6\u3002</p> <p>Splay \u6811\u4e0d\u4e00\u5b9a\u5e73\u8861</p>"},{"location":"cs/ads/chapter1/#operations_1","title":"Operations","text":""},{"location":"cs/ads/chapter1/#tree-rotation_1","title":"\u6811\u65cb\u8f6c\uff08Tree Rotation\uff09","text":"<p>Splay \u6811\u7684\u65cb\u8f6c\u64cd\u4f5c\u4e0e AVL \u6811\u7c7b\u4f3c\uff0c\u8fd8\u9700\u8981\u989d\u5916\u7ef4\u62a4 parent \u6307\u9488\u3002</p> <p>\u53c2\u8003\u4ee3\u7801\uff1a</p> <pre><code>// \u5c06 p \u5411\u4e0a\u65cb\u8f6c\nvoid rotate(Node *p) {\n    if (p-&gt;parent == NULL) return;\n    Node *p_parent = p-&gt;parent;\n    int type = getPosition(p); // 0: left rotate, 1: right rotate\n    p_parent-&gt;child[type] = p-&gt;child[type ^ 1];\n    p-&gt;child[type ^ 1] = p_parent;\n    if (p_parent-&gt;parent != NULL) {\n        p_parent-&gt;parent-&gt;child[getPosition(p_parent)] = p;\n    }\n    p-&gt;parent = p_parent-&gt;parent;\n    p_parent-&gt;parent = p;\n    if (p_parent-&gt;child[type]) {\n        p_parent-&gt;child[type]-&gt;parent = p_parent;\n    }\n    maintain(p_parent);\n    maintain(p);\n}\n</code></pre>"},{"location":"cs/ads/chapter1/#splay","title":"Splay","text":"<p>Splay \u64cd\u4f5c\u662f\u5c06\u8282\u70b9\u901a\u8fc7\u65cb\u8f6c\u64cd\u4f5c\u65cb\u8f6c\u5230\u6839\u8282\u70b9\u3002</p> <p>\u8bbe x \u4e3a\u8981\u8fdb\u884c splay \u64cd\u4f5c\u7684\u8282\u70b9\uff0cp \u4e3a x \u7684\u7236\u8282\u70b9\uff0cg \u4e3a x \u7684\u7956\u7236\u8282\u70b9\uff0c\u6709\u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5\uff1a</p> <ul> <li> <p>Zig\uff1ap \u662f\u6839\u8282\u70b9\uff0c\u76f4\u63a5\u65cb\u8f6c x\u3002</p> <p> </p> </li> <li> <p>Zig-Zig\uff1ap \u548c x \u5728\u540c\u4e00\u4fa7\uff0c\u5148\u65cb\u8f6c p\uff0c\u518d\u65cb\u8f6c x\u3002</p> <p> </p> </li> <li> <p>Zig-Zag\uff1ap \u548c x \u5728\u4e0d\u540c\u4fa7\uff0c\u65cb\u8f6c\u4e24\u6b21 x\u3002</p> <p> </p> </li> </ul> <p>\u53c2\u8003\u4ee3\u7801\uff1a</p> <pre><code>int getPosition(Node *p) {\n    if (p-&gt;parent == NULL) return -1;\n    return p == p-&gt;parent-&gt;child[1];\n}\n\nvoid splay(SplayTree *tree, Node *p) {\n    for (Node *par = p-&gt;parent; par != NULL; rotate(p), par = p-&gt;parent) {\n        if (par-&gt;parent != NULL) {\n            rotate(getPosition(p) == getPosition(par) ? par : p);\n        }\n    }\n    tree-&gt;root = p;\n}\n</code></pre>"},{"location":"cs/ads/chapter1/#insertion_1","title":"Insertion","text":"<p>\u5148\u9012\u5f52\u627e\u5230\u63d2\u5165\u7684\u4f4d\u7f6e\uff0c\u65b0\u5efa\u8282\u70b9\uff0c\u7136\u540e splay \u8be5\u8282\u70b9\u3002</p>"},{"location":"cs/ads/chapter1/#merge","title":"Merge","text":"<p>\u5408\u5e76\u4e24\u68f5 splay \u6811\uff0c\u4e14\u4fdd\u8bc1\u5de6\u6811\u7684\u6240\u6709\u8282\u70b9\u7684\u952e\u503c\u5c0f\u4e8e\u53f3\u6811\u7684\u6240\u6709\u8282\u70b9\u7684\u952e\u503c\u3002</p> <p>\u5148\u5bf9\u5de6\u6811\u4e2d\u6700\u5927\u7684\u8282\u70b9\u8fdb\u884c splay \u64cd\u4f5c\uff0c\u7136\u540e\u5c06\u53f3\u6811\u4f5c\u4e3a\u5de6\u6811\u6839\u8282\u70b9\u7684\u53f3\u5b50\u6811\u3002</p>"},{"location":"cs/ads/chapter1/#deletion_1","title":"Deletion","text":"<p>\u5148\u9012\u5f52\u627e\u5230\u5220\u9664\u7684\u4f4d\u7f6e\uff0c\u5c06\u5176 splay \u5230\u6839\u8282\u70b9\uff0c\u7136\u540e\u5220\u9664\u6839\u8282\u70b9\uff0c\u518d\u5c06\u5de6\u53f3\u5b50\u6811\u5408\u5e76\u3002</p>"},{"location":"cs/ads/chapter1/#_3","title":"\u53c2\u8003\u4ee3\u7801","text":"luoguP3369 \u3010\u6a21\u677f\u3011\u666e\u901a\u5e73\u8861\u6811 <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;limits.h&gt;\n#define INF INT_MAX\n#define max(a, b) ((a) &gt; (b) ? (a) : (b))\n\ntypedef struct Node Node;\nstruct Node {\n    int key, size, cnt;\n    Node *child[2]; // child[0]: left child, child[1]: right child\n    Node *parent;\n};\n\ntypedef struct SplayTree SplayTree;\nstruct SplayTree {\n    Node *root;\n};\n\n// void fprint_tree(Node *p) {\n//     if (p == NULL) return;\n//     fprint_tree(p-&gt;child[0]);\n//     fprintf(stderr, \"%d(%d, par:%d)[%d, %d] \", p-&gt;key, p-&gt;cnt, p-&gt;parent != NULL ? p-&gt;parent-&gt;key : -1,\n//                 p-&gt;child[0] != NULL ? p-&gt;child[0]-&gt;key : -1, p-&gt;child[1] != NULL ? p-&gt;child[1]-&gt;key : -1);\n//     fprint_tree(p-&gt;child[1]);\n// }\n\nNode *newNode(int key) {\n    Node *p = (Node *)malloc(sizeof(Node));\n    p-&gt;key = key;\n    p-&gt;size = 1;\n    p-&gt;cnt = 1;\n    p-&gt;child[0] = p-&gt;child[1] = NULL;\n    p-&gt;parent = NULL;\n    return p;\n}\n\nint getSize(Node *p) {\n    return p == NULL ? 0 : p-&gt;size;\n}\n\nint getPosition(Node *p) {\n    if (p-&gt;parent == NULL) return -1;\n    return p == p-&gt;parent-&gt;child[1];\n}\n\nvoid maintain(Node *p) {\n    if (p == NULL) return;\n    p-&gt;size = p-&gt;cnt + getSize(p-&gt;child[0]) + getSize(p-&gt;child[1]);\n}\n\nvoid rotate(Node *p) {\n    if (p-&gt;parent == NULL) return;\n    Node *p_parent = p-&gt;parent;\n    int type = getPosition(p); // 0: left rotate, 1: right rotate\n    p_parent-&gt;child[type] = p-&gt;child[type ^ 1];\n    p-&gt;child[type ^ 1] = p_parent;\n    if (p_parent-&gt;parent != NULL) {\n        p_parent-&gt;parent-&gt;child[getPosition(p_parent)] = p;\n    }\n    p-&gt;parent = p_parent-&gt;parent;\n    p_parent-&gt;parent = p;\n    if (p_parent-&gt;child[type]) {\n        p_parent-&gt;child[type]-&gt;parent = p_parent;\n    }\n    maintain(p_parent);\n    maintain(p);\n}\n\nvoid splay(SplayTree *tree, Node *p) {\n    for (Node *par = p-&gt;parent; par != NULL; rotate(p), par = p-&gt;parent) {\n        if (par-&gt;parent != NULL) {\n            rotate(getPosition(p) == getPosition(par) ? par : p);\n        }\n    }\n    tree-&gt;root = p;\n}\n\nvoid insert(SplayTree *tree, int key) {\n    if (tree-&gt;root == NULL) {\n        tree-&gt;root = newNode(key);\n        return;\n    }\n    Node *p = tree-&gt;root, *par = NULL;\n    while (p != NULL) {\n        par = p;\n        if (key &lt; p-&gt;key) {\n            p = p-&gt;child[0];\n        } else if (key &gt; p-&gt;key) {\n            p = p-&gt;child[1];\n        } else {\n            p-&gt;cnt++;\n            maintain(p);\n            splay(tree, p);\n            return;\n        }\n    }\n    p = newNode(key);\n    p-&gt;parent = par;\n    if (key &lt;= par-&gt;key) {\n        par-&gt;child[0] = p;\n    } else {\n        par-&gt;child[1] = p;\n    }\n    splay(tree, p);\n}\n\nint query_kth(SplayTree *tree, int k) {\n    Node *p = tree-&gt;root;\n    while (p != NULL) {\n        if (k &lt;= getSize(p-&gt;child[0])) {\n            p = p-&gt;child[0];\n        } else if (k &gt; getSize(p-&gt;child[0]) + p-&gt;cnt) {\n            k -= getSize(p-&gt;child[0]) + p-&gt;cnt;\n            p = p-&gt;child[1];\n        } else {\n            break;\n        }\n    }\n    if (p == NULL) return INF;\n    splay(tree, p);\n    return p-&gt;key;\n}\n\nvoid erase(SplayTree *tree, int key) {\n    Node *p = tree-&gt;root;\n    while (p != NULL) {\n        if (key == p-&gt;key) {\n            break;\n        } else if (key &lt; p-&gt;key) {\n            p = p-&gt;child[0];\n        } else {\n            p = p-&gt;child[1];\n        }\n    }\n    if (p == NULL) return;\n    splay(tree, p);\n    if (p-&gt;cnt &gt; 1) {\n        p-&gt;cnt--;\n        maintain(p);\n        return;\n    } else if (p-&gt;child[0] == NULL || p-&gt;child[1] == NULL) {\n        Node *q = p-&gt;child[0] ? p-&gt;child[0] : p-&gt;child[1];\n        if (q != NULL) {\n            q-&gt;parent = NULL;\n        }\n        free(p);\n        tree-&gt;root = q;\n        return;\n    } else {\n        p-&gt;child[0]-&gt;parent = p-&gt;child[1]-&gt;parent = NULL;\n        tree-&gt;root = p-&gt;child[0];\n        query_kth(tree, getSize(p-&gt;child[0]));\n        tree-&gt;root-&gt;child[1] = p-&gt;child[1];\n        p-&gt;child[1]-&gt;parent = tree-&gt;root;\n        maintain(tree-&gt;root);\n    }\n}\n\nint query_rank(SplayTree *tree, int key) {\n    insert(tree, key);\n    int res = getSize(tree-&gt;root-&gt;child[0]) + 1;\n    erase(tree, key);\n    return res;\n}\n\nint query_pre(SplayTree *tree, int key) {\n    insert(tree, key);\n    int res = query_kth(tree, getSize(tree-&gt;root-&gt;child[0]));\n    erase(tree, key);\n    return res;\n}\n\nint query_suc(SplayTree *tree, int key) {\n    insert(tree, key);\n    int res = query_kth(tree, getSize(tree-&gt;root-&gt;child[0]) + tree-&gt;root-&gt;cnt + 1);\n    erase(tree, key);\n    return res;\n}\n\nvoid free_tree(Node *p) {\n    if (p == NULL) return;\n    free_tree(p-&gt;child[0]);\n    free_tree(p-&gt;child[1]);\n    free(p);\n}\n\nint main() {\n    int n;\n    scanf(\"%d\", &amp;n);\n    SplayTree *tree = (SplayTree *)malloc(sizeof(SplayTree));\n    tree-&gt;root = NULL;\n    while (n--) {\n        int opt, x;\n        scanf(\"%d%d\", &amp;opt, &amp;x);\n        switch (opt) {\n        case 1:\n            insert(tree, x);\n            break;\n        case 2:\n            erase(tree, x);\n            break;\n        case 3:\n            printf(\"%d\\n\", query_rank(tree, x));\n            break;\n        case 4:\n            printf(\"%d\\n\", query_kth(tree, x));\n            break;\n        case 5:\n            printf(\"%d\\n\", query_pre(tree, x));\n            break;\n        case 6:\n            printf(\"%d\\n\", query_suc(tree, x));\n            break;\n        }\n        // fprintf(stderr, \"[\");\n        // fprint_tree(tree-&gt;root);\n        // fprintf(stderr, \"]\\n\");\n    }\n    free_tree(tree-&gt;root);\n    return 0;\n}\n</code></pre>"},{"location":"cs/ads/chapter1/#amortized-analysis","title":"Amortized Analysis \u644a\u8fd8\u5206\u6790","text":"<p>\u7531\u4e8e\u7a0b\u5e8f\u4e0d\u4e00\u5b9a\u6bcf\u6b21\u64cd\u4f5c\u90fd\u8fbe\u5230\u6700\u574f\u7684\u590d\u6742\u5ea6\uff0c\u56e0\u6b64\u4f7f\u7528\u6700\u574f\u590d\u6742\u5ea6\u4f30\u8ba1\u590d\u6742\u5ea6\u4e0a\u754c\u53ef\u80fd\u4f1a\u8fdc\u8fdc\u9ad8\u4e8e\u5b9e\u9645\u7684\u590d\u6742\u5ea6\uff0c\u6240\u4ee5\u9700\u8981\u4e00\u79cd\u65b9\u6cd5\u6765\u66f4\u52a0\u7cbe\u786e\u5730\u4f30\u8ba1\u590d\u6742\u5ea6\u4e0a\u754c\u3002</p> \\[ \\text{worst-case bound} \\geq \\text{amortized bound} \\geq \\text{average-case bound} \\]"},{"location":"cs/ads/chapter1/#aggregate-analysis","title":"Aggregate Analysis \u805a\u5408\u5206\u6790","text":"<p>\u8003\u8651\u64cd\u4f5c\u7684\u6574\u4f53\uff0c\u8bbe \\(n\\) \u4e2a\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u4e4b\u548c\u4e3a \\(T(n)\\)\uff0c\u5219\u5355\u4e2a\u64cd\u4f5c\u7684\u5747\u644a\u590d\u6742\u5ea6\u4e3a \\(T(n)/n\\)\u3002</p>"},{"location":"cs/ads/chapter1/#accounting-method","title":"Accounting Method \u6838\u7b97\u6cd5","text":"<p>\u82e5\u67d0\u6b21\u64cd\u4f5c\u7684\u644a\u8fd8\u4ee3\u4ef7 \\(\\hat{c}_i\\) \u8d85\u8fc7\u4e86\u5b9e\u9645\u4ee3\u4ef7 \\(c_i\\)\uff0c\u5219\u8bb0\u591a\u51fa\u6765\u7684\u90e8\u5206\u4e3a\u201c\u4fe1\u7528\u5206\u201d\uff08credit\uff09\u3002\u82e5\u4e4b\u540e\u7684\u64cd\u4f5c\u7684\u644a\u8fd8\u4ee3\u4ef7\u4e0d\u8db3\u4ee5\u652f\u4ed8\u5b9e\u9645\u4ee3\u4ef7\uff0c\u5219\u4f7f\u7528\u4fe1\u7528\u5206\u6765\u652f\u4ed8\u3002\u5219\u5355\u6b21\u64cd\u4f5c\u7684\u5747\u644a\u590d\u6742\u5ea6\u4e3a\uff1a</p> \\[ T_{\\text{amortized}} = \\frac{\\sum \\hat{c}_i}{n} \\geq \\frac{\\sum c_i}{n} \\]"},{"location":"cs/ads/chapter1/#potential-method","title":"Potential Method \u52bf\u80fd\u6cd5","text":"<p>\u8bbe \\(D_i\\) \u4e3a\u7b2c \\(i\\) \u6b21\u64cd\u4f5c\u4e4b\u540e\u6570\u636e\u6574\u4f53\u7684\u72b6\u6001\uff0c\u6784\u9020\u51fd\u6570 \\(\\Phi(D_i)\\) \u4f5c\u4e3a\u6570\u636e\u72b6\u6001\u7684\u201c\u52bf\u80fd\u201d\uff0c\u4e14\u6ee1\u8db3\uff1a</p> <ul> <li>\\(\\Phi(D_0) = 0\\)</li> <li>\\(\\Phi(D_i) \\geq 0\\)</li> </ul> <p>\u7531\u6b64\uff0c\u644a\u8fd8\u4ee3\u4ef7\u4e3a\uff1a</p> \\[ \\hat{c}_i = c_i + \\Phi(D_i) - \\Phi(D_{i-1}) \\] <p>\\(n\\) \u6b21\u64cd\u4f5c\u603b\u4ee3\u4ef7\u4e3a\uff1a</p> \\[ \\begin{aligned} \\sum_{i=1}^n \\hat{c}_i &amp;= \\sum_{i=1}^n (c_i + \\Phi(D_i) - \\Phi(D_{i-1})) \\\\                        &amp;= \\sum_{i=1}^n c_i + \\Phi(D_n) - \\Phi(D_0) \\\\ \\end{aligned} \\] <p>\u5f97\u5230 \\(n\\) \u6b21\u64cd\u4f5c\u7684\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(T(n) = \\sum_{i=1}^n c_i + \\Phi(D_n) - \\Phi(D_0)\\)\u3002\u5355\u6b21\u64cd\u4f5c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(T(n)/n\\)\u3002</p> <p>Warning</p> <p>\u52bf\u80fd\u51fd\u6570\u5fc5\u987b\u6ee1\u8db3 \\( \\Phi(D_n) \\geq \\Phi(D_0) \\)\uff0c\u5373\u521d\u59cb\u72b6\u6001\u7684\u52bf\u80fd\u6700\u5c0f\uff0c\u4e00\u822c\u5c06\u5176\u53d6\u4e3a 0\u3002</p> <p>\u6ce8\u610f \\( \\Phi(D_n) \\) \u662f\u5b8c\u6574\u64cd\u4f5c\u4e4b\u540e\u7684\u52bf\u80fd\uff0c\u6700\u540e\u5f97\u51fa\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f\u5b8c\u6574\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\uff0c\u800c\u5176\u5b50\u64cd\u4f5c\u5e26\u6765\u7684\u52bf\u80fd\u53d8\u5316\u4e0d\u7528\u8003\u8651\u3002\u5373\u53ef\u80fd\u5b58\u5728 \\( \\Phi(D_i) &lt; \\Phi(D_0) \\)\uff0c\u4f46\u53ea\u8981\u6ee1\u8db3 \\( \\Phi(D_n) \\geq \\Phi(D_0) \\) \u5373\u53ef\u3002</p>"},{"location":"cs/ads/chapter1/#splay_1","title":"Splay \u590d\u6742\u5ea6\u8bc1\u660e","text":"<p>\u8bbe \\(D_i\\) \u4e3a\u7b2c \\(i\\) \u6b21\u64cd\u4f5c\u4e4b\u540e\u7684 Splay \u6811\uff0c\\(S(x)\\) \u4e3a\u4ee5\u8282\u70b9 \\(x\\) \u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f\uff0c\u5b9a\u4e49\u52bf\u80fd\u51fd\u6570\u4e3a\uff1a</p> \\[ \\Phi(T) = \\sum_{x \\in T} \\log S(x) \\] <p>\u4e0b\u9762\u5bf9\u4e09\u79cd\u64cd\u4f5c\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\uff0c\u8bbe \\(R_1(x)\\) \u4e3a\u64cd\u4f5c\u524d\u4ee5 \\(x\\) \u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f\u7684\u5bf9\u6570\uff0c\\(R_2(x)\\) \u4e3a\u64cd\u4f5c\u540e\u4ee5 \\(x\\) \u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f\u7684\u5bf9\u6570\u3002</p> <p>\u7528\u5230\u7684\u4e0d\u7b49\u5f0f</p> <p>\u82e5 \\( a+b \\leq c \\)\uff0c\u5219\u6709\uff1a</p> \\[ \\log a + \\log b \\leq 2\\log c - 2 \\] \u8bc1\u660e <p>\u7531 \\( ab \\leq \\frac{1}{4} (a + b)^2 \\)\uff0c\u5f97</p> \\[ \\begin{aligned} \\log a + \\log b &amp;= \\log(ab) \\\\                 &amp;\\leq \\log \\frac{1}{4} + 2\\log(a+b) \\\\                 &amp;\\leq 2\\log c - 2 \\end{aligned} \\] ZigZig-ZagZig-Zig <p> </p> \\[ \\begin{aligned} \\hat{c}_i &amp;= 1 + R_2(x) - R_1(x) + R_2(p) - R_1(p) \\\\           &amp;\\leq 1 + R_2(x) - R_1(x) \\end{aligned} \\] <p> </p> \\[ \\begin{aligned} \\hat{c}_i &amp;=    2 + R_2(x) - R_1(x) + R_2(p) - R_1(p) + R_2(g) - R_1(g) \\\\           &amp;\\leq 2 - R_1(x) + R_2(p) - R_1(p) + R_2(g) \\\\           &amp;=    2 - R_1(x) - R_1(p) + (R_2(p) + R_2(g)) \\\\           &amp;\\leq - 2R_1(x) + 2R_2(x) \\\\           &amp;=    2(R_2(x) - R_1(x)) \\\\           &amp;\\leq 3(R_2(x) - R_1(x)) \\end{aligned} \\] <p> </p> \\[ \\begin{aligned} \\hat{c}_i &amp;=    2 + R_2(x) - R_1(x) + R_2(p) - R_1(p) + R_2(g) - R_1(g) \\\\           &amp;\\leq 2 - 2R_1(x) + R_2(p) - R_1(p) + (R_1(x) + R_2(g)) \\\\           &amp;\\leq - 2R_1(x) + R_2(x) - R_1(x) + 2R_2(x) \\\\           &amp;=    3(R_2(x) - R_1(x)) \\end{aligned} \\] <p>\u7531\u6b64\u53ef\u5f97\uff0c\u5355\u6b21 AVL \u64cd\u4f5c\uff08insert\uff0cdelete\uff0ce.t.c\uff09\u7684\u5747\u644a\u590d\u6742\u5ea6\u4e3a</p> \\[ T \\leq 1 + 3(R_m(root) - R_0(x)) = O(\\log n) \\]"},{"location":"cs/ads/chapter10/","title":"NP Completeness","text":""},{"location":"cs/ads/chapter10/#halting-problem","title":"Halting Problem","text":"<p>\u505c\u673a\u95ee\u9898\uff0c\u7a0b\u5e8f\u5224\u65ad\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u662f\u5426\u4f1a\u505c\u673a\u3002</p>"},{"location":"cs/ads/chapter10/#the-class-np","title":"The Class NP","text":"<p>Turing Machine</p> <p>\u5047\u8bbe\u6709\u65e0\u9650\u7684 memory\uff0c\u548c\u4e00\u4e2a\u53ef\u4ee5\u5de6\u53f3\u79fb\u52a8\u7684 scanner\uff0c\u53ef\u4ee5\u8bfb\u5199 memory\u3002</p> <ul> <li>Deterministic Turing Machine \u786e\u5b9a\u6027\u56fe\u7075\u673a\uff1a\u6bcf\u6b21\u53ea\u6709\u4e00\u4e2a\u72b6\u6001\u8f6c\u79fb\u3002</li> <li>Non-deterministic Turing Machine \u975e\u786e\u5b9a\u6027\u56fe\u7075\u673a\uff1a\u6bcf\u6b21\u6709\u591a\u4e2a\u53ef\u80fd\u7684\u72b6\u6001\u8f6c\u79fb\uff0c\u6bcf\u6b21\u90fd\u80fd\u9009\u62e9\u4e00\u4e2a\u6b63\u786e\u7684\u8f6c\u79fb\u3002</li> </ul> <ul> <li>NP: Non-deterministic Polynomial-time     \u4e00\u4e2a\u95ee\u9898\u662f NP \u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u53ef\u4ee5\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u9a8c\u8bc1\u4e00\u4e2a\u89e3\u662f\u5426\u6b63\u786e\u3002\u53ef\u4ee5\u7531\u4e00\u4e2a\u975e\u786e\u5b9a\u6027\u56fe\u7075\u673a\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u89e3\u51b3\u3002</li> <li>P: Polynomial-time     \u4e00\u4e2a\u95ee\u9898\u662f P \u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u53ef\u4ee5\u7531\u4e00\u4e2a\u786e\u5b9a\u6027\u56fe\u7075\u673a\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u89e3\u51b3\u3002</li> </ul> <p>P \u662f NP \u7684\u5b50\u96c6\u3002</p>"},{"location":"cs/ads/chapter10/#np-completenessnpc-problem","title":"NP-Completeness(NPC) Problem","text":"<p>\u4efb\u4f55 NP \u95ee\u9898\u90fd\u53ef\u4ee5\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u7ea6\u5316\u4e3a NPC \u95ee\u9898\u3002</p>"},{"location":"cs/ads/chapter10/#a-formal-language-framework","title":"A Formal-language Framework","text":"<p>Abstract problem \\(Q\\) \u5305\u542b\u591a\u4e2a instance \\(I\\)\uff0c\u6bcf\u4e2a instance \u5bf9\u5e94\u4e00\u4e2a solution \\(S\\)</p> <p>Shortest Path Problem</p> <ul> <li>\\(I = (G, s, t), G = (V, E), s, t \\in V\\)</li> <li>\\(S = \\langle s, v_1, v_2, \\cdots, t \\rangle, \\langle v_i, v_{i+1} \\rangle \\in E\\)</li> </ul> <p>\u8f6c\u6362\u4e3a decision problem\uff1a</p> <ul> <li>\\(I = (G, s, t, k)\\) \u662f\u5426\u5b58\u5728\u4e00\u6761\u957f\u5ea6\u5c0f\u4e8e \\(k\\) \u7684\u8def\u5f84\u3002 </li> <li>\\(S = \\{\\text{yes}, \\text{no}\\}\\)</li> </ul>"},{"location":"cs/ads/chapter10/#formal-language-theory","title":"Formal Language Theory","text":""},{"location":"cs/ads/chapter11/","title":"Approximation","text":""},{"location":"cs/ads/chapter11/#approximation-ratio","title":"Approximation Ratio","text":"<p>\u5047\u8bbe\u8fd1\u4f3c\u7b97\u6cd5\u7684\u89e3\u4e3a \\(C\\)\uff0c\u6700\u4f18\u89e3\u4e3a \\(C^*\\)\u3002\u90a3\u4e48\u8fd1\u4f3c\u7b97\u6cd5\u7684\u8fd1\u4f3c\u6bd4\u4f8b\u4e3a\uff1a</p> \\[ \\max\\left(\\frac{C}{C^*}, \\frac{C^*}{C}\\right) \\leq \\rho(n) \\] <ul> <li>PTAS: \u5173\u4e8e \\(n\\) \u90fd\u662f\u591a\u9879\u5f0f\u65f6\u95f4\u7684\u8fd1\u4f3c\u7b97\u6cd5\u3002</li> <li>FPTAS: \u5173\u4e8e \\(1/\\epsilon\\) \u548c \\(n\\) \u662f\u591a\u9879\u5f0f\u65f6\u95f4\u7684\u8fd1\u4f3c\u7b97\u6cd5\u3002</li> </ul>"},{"location":"cs/ads/chapter11/#approximate-bin-packing","title":"Approximate Bin Packing","text":"<p>NP-hard \u95ee\u9898</p> <p>\u5047\u8bbe\u7bb1\u5b50\u5927\u5c0f\u4e3a 1\u3002</p>"},{"location":"cs/ads/chapter11/#next-fit","title":"Next Fit","text":"<p>\u6bcf\u6b21\u5c1d\u8bd5\u653e\u5165\u6700\u540e\u4e00\u4e2a\u7bb1\u5b50\uff0c\u5982\u679c\u653e\u4e0d\u4e0b\u5c31\u65b0\u5f00\u4e00\u4e2a\u7bb1\u5b50\u3002</p> <p>\u5047\u8bbe\u4f7f\u7528\u4e86 \\(2M\\) \u4e2a\u7bb1\u5b50\uff0c\u8bbe \\(S_i\\) \u4e3a\u7b2c \\(i\\) \u4e2a\u7bb1\u5b50\u88c5\u5165\u7684\u7269\u54c1\u7684\u5927\u5c0f\u4e4b\u548c\u3002\u90a3\u4e48\uff1a</p> \\[ \\begin{aligned} S_1 + S_2 &gt; 1 \\\\ S_2 + S_3 &gt; 1 \\\\ \\cdots \\\\ S_{2M-1} + S_{2M} &gt; 1 \\end{aligned} \\] <p>\u5c06\u6240\u6709\u4e0d\u7b49\u5f0f\u76f8\u52a0\uff0c\u5f97\u5230\uff1a</p> \\[ 2(S_1 + S_2 + \\cdots + S_{2M}) &gt; 2M \\Rightarrow \\sum_{i=1}^{2M} S_i &gt; M \\] <p>\u5219\u6700\u4f18\u89e3\u81f3\u5c11\u9700\u8981</p> \\[ \\lceil \\frac{\\sum_{i=1}^n s_i}{\\text{size of bin}} \\rceil = \\lceil \\sum_{i=1}^n s_i \\rceil \\geq M + 1 \\] <p>\u6240\u4ee5 Next Fit \u7684\u8fd1\u4f3c\u6bd4\u4f8b\u4e3a \\(2\\)\u3002</p>"},{"location":"cs/ads/chapter11/#first-fit","title":"First Fit","text":"<p>\u6bcf\u6b21\u627e\u5230\u7b2c\u4e00\u4e2a\u80fd\u653e\u4e0b\u7684\u7bb1\u5b50\u653e\u5165\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u65b0\u5f00\u4e00\u4e2a\u7bb1\u5b50\u3002</p>"},{"location":"cs/ads/chapter11/#best-fit","title":"Best Fit","text":"<p>\u6bcf\u6b21\u627e\u5230\u5269\u4f59\u7a7a\u95f4\u6700\u5c0f\u7684\u7bb1\u5b50\u653e\u5165\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u65b0\u5f00\u4e00\u4e2a\u7bb1\u5b50\u3002</p>"},{"location":"cs/ads/chapter11/#worst-fit","title":"Worst Fit","text":"<p>\u6bcf\u6b21\u627e\u5230\u5269\u4f59\u7a7a\u95f4\u6700\u5927\u7684\u7bb1\u5b50\u653e\u5165\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u65b0\u5f00\u4e00\u4e2a\u7bb1\u5b50\u3002</p>"},{"location":"cs/ads/chapter11/#knapsack-problem","title":"Knapsack Problem","text":"<p>0-1 \u80cc\u5305\u95ee\u9898\u3002\u8fd1\u4f3c\u6bd4\u4e3a \\(2\\)\u3002</p>"},{"location":"cs/ads/chapter11/#k-center-problem","title":"K-Center Problem","text":""},{"location":"cs/ads/chapter11/#greedy-algorithm","title":"Greedy Algorithm","text":"<p>\u5e73\u9762\u4e0a \\(n\\) \u4e2a\u70b9\uff0c\u627e\u5230 \\(k\\) \u4e2a\u5706\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u70b9\u5230 \\(k\\) \u4e2a\u70b9\u4e2d\u6700\u8fd1\u7684\u5706\u5fc3\u7684\u8ddd\u79bb\u7684\u6700\u5927\u503c\u6700\u5c0f\u3002</p> <p>\u82e5\u5706\u534a\u5f84\u4e3a \\(r\\)\uff0c\u90a3\u4e48\u82e5\u5c06\u5706\u5fc3\u653e\u5728\u70b9\u4e0a\uff0c\u5219\u9700\u8981 \\(2r\\) \u7684\u534a\u5f84\u624d\u80fd\u8986\u76d6\u539f\u672c\u5706\u7684\u8303\u56f4\u3002</p> <p>\u4e8c\u5206\u7b54\u6848\uff0c\u9a8c\u8bc1\uff1a</p> <ol> <li>\u968f\u673a\u627e\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u5706\u5fc3\uff0c\u6392\u9664\u6240\u6709\u8ddd\u79bb\u5c0f\u4e8e \\(2r\\) \u7684\u70b9\u3002</li> <li>\u91cd\u590d 1 \u76f4\u5230\u6240\u6709\u70b9\u90fd\u88ab\u8986\u76d6\u3002</li> <li>\u5982\u679c\u5706\u5fc3\u6570\u91cf\u5927\u4e8e \\(k\\)\uff0c\u8bf4\u660e\u6700\u4f18\u89e3\u5927\u4e8e \\(r\\)\uff0c\u5426\u5219\u5c0f\u4e8e\u7b49\u4e8e \\(r\\)\u3002</li> </ol>"},{"location":"cs/ads/chapter11/#approximation-algorithm","title":"Approximation Algorithm","text":"<ol> <li>\u4efb\u610f\u627e\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u5706\u5fc3\u3002</li> <li>\u627e\u5230\u79bb\u8fd9\u4e2a\u70b9\u6700\u8fdc\u7684\u70b9\uff0c\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u5706\u5fc3\u3002</li> <li>\u91cd\u590d 2 \u76f4\u5230\u627e\u5230 \\(k\\) \u4e2a\u5706\u5fc3\u3002</li> <li>\u627e\u5230\u80fd\u8986\u76d6\u6240\u6709\u70b9\u7684\u6700\u5c0f\u534a\u5f84\u3002</li> </ol> <p>\u8fd1\u4f3c\u6bd4\u4e3a \\(2\\)\u3002</p> <p>\u9664\u975e P=NP\uff0c\u5426\u5219\u4e0d\u5b58\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u7684\u8fd1\u4f3c\u6bd4\u4f8b\u5c0f\u4e8e \\(2\\) \u7684\u7b97\u6cd5\u3002</p>"},{"location":"cs/ads/chapter12/","title":"Local Search","text":"<ul> <li>Local\uff1a\u5b9a\u4e49\u90bb\u5c45\u89e3</li> <li>Search\uff1a\u5728\u90bb\u5c45\u89e3\u4e2d\u641c\u7d22\u6700\u4f18\u89e3</li> </ul>"},{"location":"cs/ads/chapter12/#neighbor-relation","title":"Neighbor Relation","text":"<ul> <li>\\(S \\sim S'\\)\uff1a\\(S'\\) \u662f \\(S\\) \u7684\u76f8\u90bb\u89e3\uff0c\u901a\u8fc7 \\(S\\) \u8f6c\u5316\u5f97\u5230</li> <li>\\(N(S) = \\{S' \\mid S \\sim S'\\}\\)\uff1a\\(S\\) \u7684\u90bb\u5c45\u89e3\u96c6\u5408</li> </ul>"},{"location":"cs/ads/chapter12/#vertex-cover","title":"Vertex Cover","text":"<p>\u7ed9\u5b9a\u56fe \\(G = (V, E)\\)\uff0c\u627e\u5230\u6700\u5c0f\u7684\u9876\u70b9\u96c6\u5408 \\(S \\subseteq V\\)\uff0c\u4f7f\u5f97\u6bcf\u6761\u8fb9\u81f3\u5c11\u6709\u4e00\u4e2a\u7aef\u70b9\u5728 \\(S\\) \u4e2d\u3002</p> <p>\u521d\u59cb\u4ece \\(S\\) \u5f00\u59cb\uff0c\u6bcf\u6b21\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u9876\u70b9 \\(v \\in S\\)\uff0c\u5c06\u5176\u4ece \\(S\\) \u4e2d\u79fb\u9664\uff0c\u76f4\u5230 \\(S\\) \u4e0d\u518d\u662f\u9876\u70b9\u8986\u76d6\u3002</p>"},{"location":"cs/ads/chapter12/#the-metropolis-algorithm","title":"The Metropolis Algorithm","text":"<p>\u6bcf\u6b21\u82e5 \\(S'\\) \u66f4\u4f18\uff0c\u5219\u63a5\u53d7 \\(S'\\) \u4f5c\u4e3a\u65b0\u7684\u89e3\uff0c\u5426\u5219\u4ee5\u4e00\u5b9a\u6982\u7387 \\(e^{-\\Delta \\text{cost} / (kT)}\\) \u63a5\u53d7 \\(S'\\)\u3002</p> <p>\u5176\u4e2d \\(\\Delta \\text{cost} = \\left| \\text{cost}(S) - \\text{cost}(S') \\right|\\)\uff0c\\(k, T\\) \u4e3a\u8d85\u53c2\u6570\u3002</p>"},{"location":"cs/ads/chapter12/#hopfield-neural-network","title":"Hopfield Neural Network","text":"<p>\u56fe \\(G = (V, E)\\) \u6bcf\u6761\u8fb9\u6709\u8fb9\u6743\uff0c\u7ed9\u6bcf\u4e2a\u70b9\u8bbe\u7f6e\u72b6\u6001 \\(s_i \\in \\{-1, 1\\}\\)\u3002</p> <ul> <li>\u5982\u679c \\(w_i &lt; 0\\)\uff0c\u5219\u5e0c\u671b\u4e24\u7aef\u70b9\u72b6\u6001\u76f8\u540c</li> <li>\u5982\u679c \\(w_i &gt; 0\\)\uff0c\u5219\u5e0c\u671b\u4e24\u7aef\u70b9\u72b6\u6001\u4e0d\u540c</li> <li>\\(|w_i|\\) \u8d8a\u5927\uff0c\u7ea6\u5f3a\u8c03\u8fd9\u4e2a\u7ea6\u675f</li> </ul> <p>\u5b9a\u4e49\uff1a</p> <ul> <li>\u8fb9 \\(e = (u, v)\\) \u662f good \u7684\uff0c\u5982\u679c \\(w_e s_u s_v &lt; 0\\)\uff0c\u5426\u5219\u662f bad \u7684\u3002\uff08\u5373\u6ee1\u8db3\u7ea6\u675f\u65f6\u4e3a good\uff09</li> <li> <p>\u70b9 \\(v\\) \u88ab\u6ee1\u8db3\uff0c\u5982\u679c\uff1a</p> \\[     \\sum_{v: e = (u, v) \\in E} w_e s_u s_v \\geq 0 \\] </li> <li> <p>\u5982\u679c\u6240\u6709\u70b9\u90fd\u88ab\u6ee1\u8db3\u4e86\uff0c\u90a3\u4e48\u5b9a\u4e49\u8fd9\u4e2a\u5206\u914d\u662f stable \u7684\u3002</p> </li> </ul>"},{"location":"cs/ads/chapter12/#state-flipping-algorithm","title":"State-flipping Algorithm","text":"<p>\u521d\u59cb\u7ed9\u6bcf\u4e2a\u70b9\u968f\u673a\u72b6\u6001\uff0c\u5982\u679c\u5f53\u524d\u5206\u914d\u4e0d\u662f stable \u7684\uff0c\u5219\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u6ca1\u6709\u88ab\u6ee1\u8db3\u7684\u70b9\uff0c\u5c06\u5176\u72b6\u6001\u7ffb\u8f6c\u3002</p> <p>Proof</p> <p>\u8bc4\u4f30\u89e3 \\(S\\) \u7684\u597d\u574f\uff1a\\(\\Phi(S) = \\sum_{e \\text{ is good}} |w_e|\\)\uff0c\\(\\Phi(S)\\) \u8d8a\u5927\u8d8a\u597d\u3002</p> <p>\u7ffb\u8f6c\u4e86\u4e00\u4e2a\u70b9 \\(u\\) \u540e\uff0c\u539f\u672c\u7684\u597d\u8fb9\u53d8\u4e3a\u574f\u8fb9\uff0c\u574f\u8fb9\u53d8\u4e3a\u597d\u8fb9\uff0c\u6240\u4ee5\uff1a</p> \\[     \\Phi(S') = \\Phi(S) - \\sum_{e: u \\in e, e \\text{ is good in } S} |w_e| + \\sum_{e: u \\in e, e \\text{ is bad in } S} |w_e| \\] <p>\u7531\u4e8e \\(u\\) \u662f\u6ca1\u6709\u88ab\u6ee1\u8db3\u7684\u70b9\uff0c\u6240\u4ee5\uff1a</p> \\[     \\sum_{e: u \\in e, e \\text{ is bad}} |w_e| \\geq \\sum_{e: u \\in e, e \\text{ is good}} |w_e| \\] <p>\u6240\u4ee5 \\(\\Phi(S') \\geq \\Phi(S)\\)\uff0c\u5373\u6bcf\u6b21\u7ffb\u8f6c\u90fd\u80fd\u4f7f\u5f97\u89e3\u66f4\u4f18\u3002</p> <p>\u8fd1\u4f3c\u6bd4\u4e3a \\(2\\)\uff0c\\(w(A, B) \\geq \\frac{1}{2} w(A^*, B^*)\\)\u3002</p>"},{"location":"cs/ads/chapter13/","title":"Randomized Algorithm","text":""},{"location":"cs/ads/chapter13/#_1","title":"\u6982\u7387\u8bba","text":"<ul> <li>\\(\\mathrm{Pr}(A)\\) \u8868\u793a\u4e8b\u4ef6 \\(A\\) \u53d1\u751f\u7684\u6982\u7387</li> <li>\\(\\bar{A}\\) \u8868\u793a\u4e8b\u4ef6 \\(A\\) \u4e0d\u53d1\u751f</li> <li>\\(\\mathrm{E}(X)\\) \u8868\u793a\u968f\u673a\u53d8\u91cf \\(X\\) \u7684\u671f\u671b</li> </ul>"},{"location":"cs/ads/chapter13/#the-hiring-problem","title":"The Hiring Problem","text":"<p>\u9762\u8bd5\u4e00\u4e2a\u4eba\u540e\u7acb\u5373\u51b3\u5b9a\u662f\u5426\u5f55\u7528\u3002</p> <p>\u9762\u8bd5\u8d39\u7528 \\(C_i\\)\uff0c\u96c7\u4f63\u8d39\u7528 \\(C_h\\)\u3002\\(N\\) \u4e2a\u4eba\uff0c\u96c7\u4f63 \\(M\\) \u4e2a\u4eba\u3002</p>"},{"location":"cs/ads/chapter13/#naive-algorithm","title":"Naive Algorithm","text":"<p>\u6bcf\u6b21\u5982\u679c\u5f53\u524d\u9762\u8bd5\u7684\u4eba\u6bd4\u4e4b\u524d\u6240\u6709\u7684\u4eba\u90fd\u597d\uff0c\u5219\u96c7\u4f63\u3002</p> <p>\u8bbe \\(X\\) \u4e3a\u96c7\u4f63\u7684\u4eba\u6570\uff0c\\(X_i\\) \u4e3a\u7b2c \\(i\\) \u4e2a\u4eba\u662f\u5426\u88ab\u96c7\u4f63\u3002</p> \\[ X_i = \\begin{cases} 1, &amp; \\text{candidate is hired} \\\\ 0, &amp; \\text{candidate is not hired} \\end{cases} \\] <p>\u6bcf\u4e2a\u4eba\u88ab\u96c7\u4f63\u72ec\u7acb\uff0c\u6240\u4ee5</p> \\[ \\mathrm{E}(X) = \\mathrm{E}(\\sum_{i=1}^N X_i) = \\sum_{i=1}^N \\mathrm{E}(X_i) = \\sum_{i=1}^N \\mathrm{Pr}(X_i = 1) = \\sum_{i=1}^N \\frac{1}{i} = \\ln N + O(1) \\]"},{"location":"cs/ads/chapter13/#online-version","title":"Online Version","text":"<p>\u9762\u8bd5\u7684\u65f6\u5019\u9700\u8981\u7acb\u5373\u51b3\u5b9a\u662f\u5426\u96c7\u4f63\uff0c\u4e14\u53ea\u80fd\u96c7\u4f63\u4e00\u6b21\u3002</p> <p>\u5148\u9762\u8bd5 \\(K\\) \u4e2a\u4eba\uff0c\u627e\u5230\u6700\u597d\u7684\uff0c\u4f46\u662f\u4e0d\u8fdb\u884c\u96c7\u4f63\u3002\u7136\u540e\u9762\u8bd5\u540e\u9762\u7684\u4eba\uff0c\u5982\u679c\u6bd4\u4e4b\u524d\u7684\u4eba\u597d\uff0c\u5219\u96c7\u4f63\uff0c\u7ed3\u675f\u9762\u8bd5\u3002</p> <p>Decide \\(K\\)</p> <p>\\(S_i\\) \u8868\u793a\u7b2c \\(i\\) \u4e2a\u4eba\u662f\u6700\u597d\u7684\u3002\\(S_i\\) \u4e3a\u771f\uff0c\u5982\u679c\u4e8b\u4ef6 \\(A\\)\uff08\u7b2c \\(i\\) \u4e2a\u4eba\u662f\u6700\u597d\u7684\uff09\u53d1\u751f\uff0c\u4e14\u4e8b\u4ef6 \\(B\\)\uff08\u7b2c \\(K+1\\) \u5230\u7b2c \\(i-1\\) \u4e2a\u4eba\u90fd\u4e0d\u88ab\u96c7\u4f63\uff09\u53d1\u751f\u3002</p> \\[ \\mathrm{Pr}(S_i) = \\mathrm{Pr}(A \\cap B) = \\mathrm{Pr}(A) \\cdot \\mathrm{Pr}(B) = \\frac{1}{N} \\cdot \\frac{K}{i-1} = \\frac{K}{N(i-1)} \\] <p>\u5f97\u5230\u96c7\u4f63\u5230\u6700\u597d\u7684\u4eba\u7684\u6982\u7387\u4e3a</p> \\[ \\mathrm{Pr}(S) = \\sum_{i=K+1}^N \\mathrm{Pr}(S_i) = \\sum_{i=K+1}^N \\frac{K}{N(i-1)} = \\frac{K}{N} \\sum_{i=K}^{N-1} \\frac{1}{i} \\] <p>\u4ee4 \\(K = \\lceil N/e \\rceil\\)\uff0c\\(\\mathrm{Pr}(S) = 1/e\\)\u3002</p>"},{"location":"cs/ads/chapter13/#quicksort","title":"QuickSort","text":"<p>\u5982\u679c\u968f\u673a\u9009\u53d6\u7684 pivot \u5bfc\u81f4\u4e00\u4fa7\u5143\u7d20\u4e2a\u6570\u5c0f\u4e8e \\(n/4\\) \uff0c\u90a3\u4e48\u91cd\u65b0\u9009\u53d6 pivot\u3002\u9009\u51fa\u5408\u9002 pivot \u7684\u671f\u671b\u6b21\u6570\u662f\u4e24\u6b21\u3002</p> <p>\u5c06\u5b50\u95ee\u9898\u5206\u4e3a\u51e0\u7c7b\uff1a</p> <p>Type \\(j\\)\uff1a\u5b50\u95ee\u9898 \\(S\\) \u6ee1\u8db3 \\(N\\left(\\frac{3}{4}\\right)^{j+1} \\leq |S| &lt; N\\left(\\frac{3}{4}\\right)^{j}\\)</p> <p>\u6700\u591a\u6709 \\(\\left(\\frac{4}{3}\\right)^{j+1}\\) \u4e2a Type \\(j\\) \u7684\u5b50\u95ee\u9898\u3002</p> <p>\u65f6\u95f4\u5f00\u9500 \\(\\mathrm{E}(T_{\\text{Type }j}) = \\mathrm{O}(N \\cdot \\left(\\frac{4}{3}\\right)^{j+1}) \\times \\left(\\frac{3}{4}\\right)^{j+1} = \\mathrm{O}(N)\\)\u3002</p> <p>\u4e0d\u540c type \u4e2a\u6570 \\(\\log_{4/3} N = \\mathrm{O}(\\log N)\\)\u3002</p> <p>\u6240\u4ee5\u671f\u671b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(\\mathrm{O}(N \\log N)\\)\u3002</p>"},{"location":"cs/ads/chapter14/","title":"Parallel Algorithms","text":"<p>\u63cf\u8ff0\u5e76\u884c\u7b97\u6cd5\uff1a</p> <ul> <li>PRAM \u6a21\u578b\uff1aParallel Random Access Machine\uff0c\u5171\u4eab\u5185\u5b58\u6a21\u578b</li> <li>WD\uff1aWork Depth</li> </ul>"},{"location":"cs/ads/chapter14/#pram","title":"PRAM \u6a21\u578b","text":"<p>PRAM \u6a21\u578b\u662f\u4e00\u79cd\u5171\u4eab\u5185\u5b58\u6a21\u578b\uff0c\u6709\u4e09\u79cd\u7c7b\u578b\uff1a</p> <ul> <li>EREW\uff1aExclusive Read Exclusive Write \u6392\u4ed6\u8bfb\u6392\u4ed6\u5199</li> <li>CREW\uff1aConcurrent Read Exclusive Write \u5e76\u53d1\u8bfb\u6392\u4ed6\u5199</li> <li> <p>CRCW\uff1aConcurrent Read Concurrent Write \u5e76\u53d1\u8bfb\u5e76\u53d1\u5199</p> <p>\u5982\u679c\u53d1\u751f\u5199\u51b2\u7a81\uff0c\u6709\u4e24\u79cd\u7b56\u7565\uff1a</p> <ul> <li>Arbitrary rule\uff1a\u4efb\u610f\u89c4\u5219\uff0c\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u5199\u5165</li> <li>Priority rule\uff1a\u4f18\u5148\u89c4\u5219\uff0c\u8bbe\u5b9a\u4f18\u5148\u7ea7\uff0c\u4f18\u5148\u7ea7\u9ad8\u7684\u5199\u5165</li> <li>Common rule\uff1a\u516c\u5171\u89c4\u5219\uff0c\u6240\u6709\u5199\u5165\u7684\u503c\u5fc5\u987b\u76f8\u540c</li> </ul> </li> </ul> <p><code>pardo</code> \u8868\u793a\u5faa\u73af\u5e76\u884c\u3002</p>"},{"location":"cs/ads/chapter14/#wd","title":"WD \u6a21\u578b","text":"<p>\u95f2\u7f6e\u5904\u7406\u5668\u4e0d\u7528\u8bbe\u7f6e\u4e3a idle\uff0c\u800c\u662f\u53ef\u4ee5\u8ba9\u5176\u6267\u884c\u5176\u4ed6\u4efb\u52a1\u3002</p>"},{"location":"cs/ads/chapter14/#measuring-the-performance","title":"Measuring the Performance","text":"<ul> <li>Work load\uff1a\u64cd\u4f5c\u7684\u603b\u6570 \\(W(N)\\)</li> <li>Worst case running time\uff1a\u6700\u574f\u60c5\u51b5\u8fd0\u884c\u65f6\u95f4 \\(T(N)\\)</li> </ul> <p>\u6e10\u8fdb\u7b49\u4ef7\uff1a</p> <ul> <li>\\(W(N)\\) \u6b21\u64cd\u4f5c\uff0c\u8fd0\u884c\u65f6\u95f4\u4e3a \\(T(N)\\)</li> <li>\u9700\u8981\u7684\u5904\u7406\u5668\u6570 \\(P(N) = W(N) / T(N)\\)\uff0c\u53ea\u80fd\u7528\u4e8e PRAM \u6a21\u578b</li> <li>\u8bbe\u5904\u7406\u5668\u6570\u4e3a \\(p \\leq P(N)\\)\uff0c\u5219\u8fd0\u884c\u65f6\u95f4\u4e3a \\(W(N) / p\\)</li> <li>\u5982\u679c\u5904\u7406\u5668\u6570 \\(p &gt; P(N)\\)\uff0c\u5219\u8fd0\u884c\u65f6\u95f4\u4e3a \\(W(N) / p + T(N)\\)</li> </ul>"},{"location":"cs/ads/chapter14/#prefix-sum","title":"Prefix Sum","text":"<p>\u524d\u7f00\u548c\u95ee\u9898\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u8ba1\u7b97\u524d\u7f00\u548c\u3002</p>"},{"location":"cs/ads/chapter14/#merging","title":"Merging","text":"<p>merge \u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u3002</p> <p>\\(\\mathrm{RANK}(j, A)\\) \u4ee3\u8868\u6570\u7ec4 \\(A\\) \u4e2d\u5c0f\u4e8e\u7b49\u4e8e \\(B_j\\) \u7684\u5143\u7d20\u4e2a\u6570\uff0c\u5373\u4e3a \\(B_j\\) \u5e94\u8be5\u653e\u5728\u6570\u7ec4 \\(A\\) \u4e2d\u7684\u4f4d\u7f6e\u3002</p>"},{"location":"cs/ads/chapter14/#doubly-logarithmic-paradigm","title":"Doubly-Logarithmic Paradigm","text":""},{"location":"cs/ads/chapter15/","title":"External Sorting","text":""},{"location":"cs/ads/chapter2/","title":"Red-Black Trees and B+ Trees","text":""},{"location":"cs/ads/chapter2/#red-black-trees","title":"Red-Black Trees","text":"<p>\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a</p> <ol> <li>\u6bcf\u4e2a\u8282\u70b9\u662f\u7ea2\u8272\u6216\u9ed1\u8272</li> <li>\u6839\u8282\u70b9\u662f\u9ed1\u8272</li> <li>\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\uff08NIL\uff09\u662f\u9ed1\u8272</li> <li>\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u7ea2\u8272\uff0c\u90a3\u4e48\u5b83\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u90fd\u662f\u9ed1\u8272</li> <li>\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u4ece\u8be5\u8282\u70b9\u5230\u5176\u6240\u6709\u540e\u4ee3\u53f6\u5b50\u8282\u70b9\u7684\u7b80\u5355\u8def\u5f84\u4e0a\uff0c\u5747\u5305\u542b\u76f8\u540c\u6570\u76ee\u7684\u9ed1\u8272\u8282\u70b9</li> </ol> <p>Black Height</p> <p>\u4ece\u4e00\u4e2a\u8282\u70b9\u5230\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u4efb\u4f55\u7b80\u5355\u8def\u5f84\u4e0a\u7684\u9ed1\u8272\u8282\u70b9\u6570\u76ee\u79f0\u4e3a\u8be5\u8282\u70b9\u7684\u9ed1\u9ad8\u5ea6\uff08black-height\uff09\uff0c\u8bb0\u4f5c \\(\\mathrm{bh}(x)\\)\u3002</p> <p>\u5f15\u7406</p> <p>\u4e00\u68f5\u6709 \\(n\\) \u4e2a\u5185\u90e8\u8282\u70b9\u7684\u7ea2\u9ed1\u6811\u7684\u9ad8\u5ea6\u81f3\u591a\u4e3a\\(2\\log(n+1)\\)\u3002</p>"},{"location":"cs/ads/chapter2/#operations","title":"Operations","text":""},{"location":"cs/ads/chapter2/#tree-rotation","title":"\u6811\u65cb\u8f6c\uff08Tree Rotation\uff09","text":"<p>\u548c AVL \u6811\u3001Splay \u6811\u4e00\u6837\u3002</p>"},{"location":"cs/ads/chapter2/#insertion","title":"Insertion","text":"<p>\u627e\u5230\u63d2\u5165\u4f4d\u7f6e\uff0c\u63d2\u5165\u65b0\u8282\u70b9\uff0c\u521d\u59cb\u989c\u8272\u4e3a\u7ea2\u8272\u3002</p> <p>\u53ef\u80fd\u7834\u574f\u7684\u6027\u8d28\u4e3a 2 \u548c 4\u3002</p> <p>\u5bf9\u4e8e\u6027\u8d28 2\uff0c\u4e3a\u63d2\u5165\u7b2c\u4e00\u4e2a\u8282\u70b9\u7684\u60c5\u51b5\uff0c\u76f4\u63a5\u5c06\u6839\u8282\u70b9\u6d82\u9ed1\u5373\u53ef\u3002</p> <p>\u5bf9\u4e8e\u6027\u8d28 4\uff0c\u5206\u4e3a\u4ee5\u4e0b\u60c5\u51b5\uff1a</p> <ol> <li> <p>\u51fa\u73b0\u4e24\u4e2a\u8fde\u7eed\u7684\u7ea2\u8272\u8282\u70b9\uff0c\u4e14\u4e0a\u5c42\u7684\u9ed1\u8272\u8282\u70b9\u7684\u5de6\u53f3\u513f\u5b50\u90fd\u662f\u7ea2\u8272\uff1a</p> <p></p> <p>\u8c03\u6574\u540e\u5411\u4e0a\u9012\u5f52\u68c0\u67e5\u3002</p> </li> <li> <p>\u51fa\u73b0\u4e24\u4e2a\u8fde\u7eed\u7684\u7ea2\u8272\u8282\u70b9\uff0c\u4e0a\u5c42\u7684\u9ed1\u8272\u8282\u70b9\u7684\u53e6\u5916\u4e00\u4e2a\u513f\u5b50\u662f\u9ed1\u8272\uff0c\u4e14\u4e24\u4e2a\u7ea2\u8272\u8282\u70b9\u4e0d\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a\uff1a</p> <p></p> <p>\u8fdb\u884c\u4e00\u6b21\u65cb\u8f6c\uff0c\u4f7f\u5f97\u4e24\u4e2a\u7ea2\u8272\u8282\u70b9\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a\u3002</p> </li> <li> <p>\u51fa\u73b0\u4e24\u4e2a\u8fde\u7eed\u7684\u7ea2\u8272\u8282\u70b9\uff0c\u4e0a\u5c42\u7684\u9ed1\u8272\u8282\u70b9\u7684\u53e6\u5916\u4e00\u4e2a\u513f\u5b50\u662f\u9ed1\u8272\uff0c\u4e14\u4e24\u4e2a\u7ea2\u8272\u8282\u70b9\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a\uff1a</p> <p></p> <p>\u5c06\u4e0a\u5c42\u7ea2\u8272\u8282\u70b9\u67d3\u9ed1\uff0c\u4e0a\u5c42\u9ed1\u8272\u8282\u70b9\u67d3\u7ea2\uff0c\u6b64\u65f6\u5b50\u6811\u5de6\u8fb9\u7684\u9ed1\u9ad8\u5ea6\u6bd4\u53f3\u8fb9\u591a 1\uff0c\u8fdb\u884c\u4e00\u6b21\u65cb\u8f6c\u3002</p> </li> </ol> <p>\u6574\u4e2a\u63d2\u5165\u64cd\u4f5c\u6700\u591a\u8fdb\u884c\u4e24\u6b21\u65cb\u8f6c\uff1acase 2 -&gt; case 3\u3002</p>"},{"location":"cs/ads/chapter2/#deletion","title":"Deletion","text":"<p>\u5982\u679c\u5220\u9664\u7684\u8282\u70b9\u6709\u4e24\u4e2a\u513f\u5b50\uff0c\u5219\u5c06\u5176\u952e\u503c\u548c\u5176\u524d\u9a71\u6216\u540e\u7ee7\u8282\u70b9\u7684\u952e\u503c\u4e92\u6362\uff0c\u5220\u9664\u5176\u524d\u9a71\u6216\u540e\u7ee7\u8282\u70b9\u3002</p> <p>\u5982\u679c\u5220\u9664\u7684\u8282\u70b9\u53ea\u6709\u4e00\u4e2a\u513f\u5b50\uff0c\u7531\u4e8e\u6027\u8d28 5\uff0c\u5176\u513f\u5b50\u8282\u70b9\u5fc5\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u8f6c\u6362\u4e3a\u5220\u9664\u53f6\u5b50\u8282\u70b9\u7684\u60c5\u51b5\u3002</p> <p>\u5982\u679c\u5220\u9664\u7684\u8282\u70b9\u662f\u7ea2\u8272\u8282\u70b9\uff0c\u76f4\u63a5\u5220\u9664\u3002</p> <p>\u5982\u679c\u5220\u9664\u7684\u8282\u70b9\u662f\u9ed1\u8272\u8282\u70b9\uff0c\u53ef\u80fd\u7834\u574f\u6027\u8d28 5\uff0c\u5206\u4e3a\u4ee5\u4e0b\u60c5\u51b5\uff1a</p> <ol> <li> <p>\u5982\u679c\u662f\u6839\u8282\u70b9\uff0c\u76f4\u63a5\u5220\u9664\u3002</p> </li> <li> <p>\u5982\u679c\u5176\u7236\u8282\u70b9\u4e3a\u9ed1\u8272\uff0c\u5144\u5f1f\u8282\u70b9\u4e3a\u7ea2\u8272\uff0c\u5219\u5c06\u5144\u5f1f\u8282\u70b9\u67d3\u9ed1\uff0c\u7236\u8282\u70b9\u67d3\u7ea2\uff0c\u8fdb\u884c\u4e00\u6b21\u65cb\u8f6c\uff1a</p> <p></p> <p>\u4f7f\u5f97\u5144\u5f1f\u8282\u70b9\u4e3a\u9ed1\u8272\u3002</p> </li> <li> <p>\u5982\u679c\u5176\u5144\u5f1f\u8282\u70b9\u4e3a\u9ed1\u8272\uff0c\u4e14\u5176\u5144\u5f1f\u8282\u70b9\u7684\u4e24\u4e2a\u513f\u5b50\u90fd\u4e3a\u9ed1\u8272\uff0c\u5219\u5c06\u5144\u5f1f\u8282\u70b9\u67d3\u7ea2\uff0c\u7236\u8282\u70b9\u4f5c\u4e3a\u65b0\u7684\u5f53\u524d\u8282\u70b9\uff1a</p> <p></p> <p>\u82e5\u7236\u8282\u70b9\u4e3a\u7ea2\u8272\uff0c\u5219\u5c06\u5176\u67d3\u9ed1\uff0c\u5426\u5219\u9012\u5f52\u68c0\u67e5\u3002</p> </li> <li> <p>\u5982\u679c\u5176\u5144\u5f1f\u8282\u70b9\u4e3a\u9ed1\u8272\uff0c\u4e14\u5176\u5144\u5f1f\u79bb\u5f53\u524d\u8282\u70b9\u8fdc\u7684\u513f\u5b50\u4e3a\u9ed1\u8272\uff0c\u8fd1\u7684\u513f\u5b50\u4e3a\u7ea2\u8272\uff0c\u5219\u5c06\u5144\u5f1f\u8282\u70b9\u67d3\u7ea2\uff0c\u8fd1\u7684\u513f\u5b50\u67d3\u9ed1\uff0c\u8fdb\u884c\u4e00\u6b21\u65cb\u8f6c\uff1a</p> <p></p> <p>\u4f7f\u5f97\u8fdc\u7684\u513f\u5b50\u4e3a\u7ea2\u8272\u3002</p> </li> <li> <p>\u5982\u679c\u5176\u5144\u5f1f\u8282\u70b9\u4e3a\u9ed1\u8272\uff0c\u4e14\u5176\u5144\u5f1f\u79bb\u5f53\u524d\u8282\u70b9\u8fdc\u7684\u513f\u5b50\u4e3a\u7ea2\u8272\uff0c\u5219\u5c06\u5144\u5f1f\u8282\u70b9\u548c\u7236\u8282\u70b9\u7684\u989c\u8272\u4e92\u6362\uff0c\u5144\u5f1f\u8282\u70b9\u7684\u8fdc\u7684\u513f\u5b50\u67d3\u9ed1\uff0c\u8fdb\u884c\u4e00\u6b21\u65cb\u8f6c\uff1a</p> <p></p> <p>\u4f7f\u5f97\u8fdc\u7684\u513f\u5b50\u4e3a\u9ed1\u8272\u3002\u6b64\u65f6\u5c06\u5f53\u524d\u8282\u70b9\u7684\u9ed1\u9ad8\u5ea6\u51cf 1\uff08\u5373\u5220\u9664\u6700\u5f00\u59cb\u7684\u9ed1\u8272\u8282\u70b9\uff09\uff0c\u6574\u68f5\u6811\u7684\u6027\u8d28 5 \u4ecd\u7136\u4fdd\u6301\u3002</p> </li> </ol> <p>\u6574\u4e2a\u5220\u9664\u64cd\u4f5c\u6700\u591a\u8fdb\u884c\u4e09\u6b21\u65cb\u8f6c\uff1acase 1 -&gt; case 2 -&gt; case 4 \u6216 case 3 -&gt; case 4\u3002</p> <p>Note</p> <p>\u4e0d\u4f1a\u51fa\u73b0 case 1 -&gt; case 2 -&gt; case 1 \u7684\u60c5\u51b5\uff0c\u56e0\u4e3a case 1 \u7ed3\u675f\u65f6\u7236\u8282\u70b9\u4e3a\u7ea2\u8272\uff0c\u4e0d\u4f1a\u8fdb\u5165\u5230 case 2 \u5411\u4e0a\u4f20\u9012\u7684\u60c5\u51b5\u3002</p>"},{"location":"cs/ads/chapter2/#complexity-analysis","title":"Complexity Analysis","text":"<p>\u6709 \\(n\\) \u4e2a\u8282\u70b9\u7684\u7ea2\u9ed1\u6811\u7684\u9ad8\u5ea6\u4e3a \\(O(2\\ln(n+1))\\)\u3002</p> <p>\u6839\u4e3a \\(x\\) \u7684\u5b50\u6811\u6ee1\u8db3 \\(\\mathrm{size}(x) \\geq 2^{\\mathrm{bh}(x)} - 1\\)\u3002</p>"},{"location":"cs/ads/chapter2/#b-trees","title":"B+ Trees","text":"<p>\u5ea6\uff08degree\uff09\u4e3a \\(m\\) \u7684 B+ \u6811\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a</p> <ol> <li>\u6839\u8282\u70b9\u8981\u4e48\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u8981\u4e48\u513f\u5b50\u6570\u76ee\u5728 2 \u548c \\(m\\) \u4e4b\u95f4</li> <li>\u5176\u4ed6\u975e\u53f6\u5b50\u8282\u70b9\u7684\u513f\u5b50\u6570\u76ee\u5728 \\(\\lceil m/2 \\rceil\\) \u548c \\(m\\) \u4e4b\u95f4</li> <li>\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u5177\u6709\u76f8\u540c\u7684\u6df1\u5ea6</li> </ol> <p>\u5ea6\u4e3a 4 \u7684 B+ \u6811\uff082-3-4 \u6811\uff09\uff1a</p>"},{"location":"cs/ads/chapter2/#operations_1","title":"Operations","text":""},{"location":"cs/ads/chapter2/#split","title":"Split","text":"<p>\u5f53\u4e00\u4e2a\u8282\u70b9\u7684\u513f\u5b50\u6570\u76ee\u8d85\u8fc7 \\(m\\) \u65f6\uff0c\u5c06\u5176\u5206\u88c2\u4e3a\u4e24\u4e2a\u8282\u70b9\u63a5\u5728\u7236\u8282\u70b9\uff0c\u4e2d\u95f4\u7684\u952e\u4e0a\u5347\u5230\u7236\u8282\u70b9\uff0c\u518d\u9012\u5f52\u68c0\u67e5\u7236\u8282\u70b9\u3002</p> <p>\u5728\u6839\u8282\u70b9\u5206\u88c2\u65f6\uff0c\u65b0\u5efa\u4e00\u4e2a\u6839\u8282\u70b9\u3002</p>"},{"location":"cs/ads/chapter2/#merge","title":"Merge","text":"<p>\u5f53\u4e00\u4e2a\u8282\u70b9\u7684\u513f\u5b50\u6570\u76ee\u5c0f\u4e8e \\(\\lceil m/2 \\rceil\\) \u65f6\uff0c\u5206\u7c7b\u8ba8\u8bba\uff1a</p> <ul> <li>\u82e5\u5176\u67d0\u4e2a\u76f8\u90bb\u8282\u70b9\u7684\u513f\u5b50\u6570\u76ee\u5927\u4e8e \\(\\lceil m/2 \\rceil\\)\uff0c\u5219\u5c06\u5176\u76f8\u90bb\u8282\u70b9\u7684\u76f8\u90bb\u513f\u5b50\u79fb\u52a8\u5230\u8be5\u8282\u70b9</li> <li>\u82e5\u5176\u76f8\u90bb\u8282\u70b9\u7684\u513f\u5b50\u6570\u76ee\u90fd\u7b49\u4e8e \\(\\lceil m/2 \\rceil\\)\uff0c\u5219\u5c06\u5176\u4e0e\u76f8\u90bb\u8282\u70b9\u5408\u5e76</li> </ul> <p>\u5408\u5e76\u64cd\u4f5c\u5b8c\u6210\u540e\uff0c\u66f4\u65b0\u7236\u8282\u70b9\u7684\u4fe1\u606f\u3002</p> <p>\u5728\u6839\u8282\u70b9\u7684\u513f\u5b50\u6570\u76ee\u51cf\u5c11\u5230 1 \u65f6\uff0c\u5c06\u5176\u5220\u9664\u3002</p>"},{"location":"cs/ads/chapter2/#insertion_1","title":"Insertion","text":"<p>\u627e\u5230\u63d2\u5165\u4f4d\u7f6e\uff0c\u63d2\u5165\u65b0\u8282\u70b9\uff0c\u56de\u6eaf\u68c0\u67e5\u8fdb\u884c Split \u64cd\u4f5c\u3002</p>"},{"location":"cs/ads/chapter2/#deletion_1","title":"Deletion","text":"<p>\u627e\u5230\u5220\u9664\u4f4d\u7f6e\uff0c\u5220\u9664\u8282\u70b9\uff0c\u56de\u6eaf\u68c0\u67e5\u8fdb\u884c Merge \u64cd\u4f5c\u3002</p>"},{"location":"cs/ads/chapter2/#complexity-analysis_1","title":"Complexity Analysis","text":"<p>\u5ea6\u4e3a \\(m\\) \u4e14\u6709 \\(n\\) \u4e2a\u8282\u70b9\u7684 B+ \u6811\u7684\u9ad8\u5ea6\u4e3a \\(O(\\log_{\\lceil m/2 \\rceil} n)\\)\uff08\u6bcf\u4e2a\u8282\u70b9\u7684\u513f\u5b50\u6570\u76ee\u53d6 \\(\\lceil m/2 \\rceil\\) \u65f6\u9ad8\u5ea6\u6700\u5927\uff09\u3002</p> <p>\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(\\log_{\\lceil m/2 \\rceil} n)\\)\u3002</p>"},{"location":"cs/ads/chapter3/","title":"Inverted File Index","text":""},{"location":"cs/ads/chapter3/#definition","title":"Definition","text":"<p>\u5012\u6392\u7d22\u5f15\u4e2d\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5355\u8bcd\uff0c\u90fd\u8bb0\u5f55\u4e86\u5305\u542b\u8fd9\u4e2a\u5355\u8bcd\u7684\u6587\u6863\u6570\u548c\u6307\u5411\u8fd9\u4e9b\u6587\u6863\u7684\u6307\u9488\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u5355\u8bcd\u51fa\u73b0\u7684\u6bcf\u4e2a\u6587\u6863\uff0c\u53ef\u4ee5\u8bb0\u5f55\u51fa\u73b0\u7684\u6b21\u6570\u548c\u4f4d\u7f6e\uff1a</p>"},{"location":"cs/ads/chapter3/#optimization","title":"Optimization","text":""},{"location":"cs/ads/chapter3/#word-stemming","title":"Word Stemming","text":"<p>\u8bcd\u5e72\u63d0\u53d6\uff0c\u5c06\u5355\u8bcd\u8f6c\u6362\u4e3a\u5176\u8bcd\u5e72\u5f62\u5f0f\uff0c\u5982\u5c06 \"running\" \u8f6c\u6362\u4e3a \"run\"\u3002</p>"},{"location":"cs/ads/chapter3/#stop-words","title":"Stop Words","text":"<p>\u505c\u7528\u8bcd\uff0c\u5982 \"a\", \"the\", \"is\" \u7b49\uff0c\u4e0d\u8bb0\u5f55\u8fd9\u4e9b\u5355\u8bcd\u3002</p>"},{"location":"cs/ads/chapter3/#access-documents","title":"Access Documents","text":"<p>\u5b58\u50a8\u5012\u6392\u7d22\u5f15\u7684\u6570\u636e\u7ed3\u6784\uff1a</p> <ol> <li>\u641c\u7d22\u6811\uff1aB+\u3001B-\u3001Trie \u7b49</li> <li>\u54c8\u5e0c\u8868</li> </ol>"},{"location":"cs/ads/chapter3/#not-enough-memory","title":"Not Enough Memory","text":"<p>\u5f53\u5185\u5b58\u4e0d\u8db3\u65f6\uff0c\u5c06\u5f53\u524d\u5185\u5b58\u4e2d\u7684\u5012\u6392\u7d22\u5f15\u5199\u5165\u78c1\u76d8\uff0c\u518d\u8bfb\u53d6\u4e0b\u4e00\u90e8\u5206\u3002</p> <p>\u5f53\u78c1\u76d8\u7a7a\u95f4\u4e0d\u8db3\u65f6\uff0c\u53ef\u4ee5\u5c06\u5012\u6392\u7d22\u5f15\u5206\u4e3a\u591a\u4e2a\u90e8\u5206\uff0c\u5206\u522b\u5b58\u50a8\u5728\u4e0d\u540c\u7684\u78c1\u76d8\u4e0a\u3002\u4e00\u822c\u91c7\u7528\u5206\u5e03\u5f0f\u5b58\u50a8\uff0c\u67e5\u8be2\u65f6\u8c03\u5ea6\u591a\u4e2a\u78c1\u76d8\u5e76\u884c\u8bfb\u53d6\u3002</p>"},{"location":"cs/ads/chapter3/#dynamic-index","title":"Dynamic Index","text":"<p>\u5efa\u7acb\u4e3b\u8868\u548c\u8f85\u52a9\u8868\uff0c\u8f85\u52a9\u8868\u52a8\u6001\u66f4\u65b0\uff0c\u5b58\u50a8\u65b0\u63d2\u5165\u7684\u6587\u6863\u3002\u67e5\u8be2\u65f6\u5728\u4e3b\u8868\u548c\u8f85\u52a9\u8868\u4e2d\u67e5\u627e\u3002</p> <p>\u5220\u9664\u65f6\uff0c\u5bf9\u5220\u9664\u7684\u6587\u6863\u8fdb\u884c\u6807\u8bb0\uff0c\u4e0d\u7528\u7acb\u5373\u4fee\u6539\u5012\u6392\u7d22\u5f15\u3002</p>"},{"location":"cs/ads/chapter3/#compression","title":"Compression","text":"<p>\u5bf9\u5012\u6392\u7d22\u5f15\u8fdb\u884c\u538b\u7f29\uff0c\u53ea\u5b58\u50a8 index \u7684\u5dee\u503c\u3002</p>"},{"location":"cs/ads/chapter3/#thresholding","title":"Thresholding","text":"<p>\u68c0\u7d22\u65f6\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u6587\u6863\u7684\u6743\u91cd\uff0c\u53ea\u68c0\u7d22\u6743\u91cd\u5728\u524d \\(x\\) \u7684\u6587\u6863\u3002</p> <p>\u67e5\u8be2\u65f6\uff0c\u5c06\u67e5\u8be2\u8bcd\u51fa\u73b0\u7684\u6b21\u6570\u89c6\u4e3a\u6743\u91cd\uff0c\u6839\u636e\u6743\u91cd\u9ad8\u7684\u67e5\u8be2\u8bcd\u4f18\u5148\u68c0\u7d22\u3002</p>"},{"location":"cs/ads/chapter3/#measures-of-the-search-engine","title":"Measures of the Search Engine","text":"<p>\u5206\u4e3a\u4ee5\u4e0b\u6307\u6807\uff1a</p> <ul> <li>\u68c0\u7d22\u901f\u5ea6\uff08index\uff09\uff1a\u68c0\u7d22\u5230\u6587\u6863\u7684\u6570\u91cf/\u65f6\u95f4</li> <li>\u641c\u7d22\u901f\u5ea6\uff08search\uff09\uff1a\u4ee5\u68c0\u7d22\u5927\u5c0f\u4e3a\u81ea\u53d8\u91cf\u7684\u5ef6\u8fdf</li> <li> <p>Expressiveness of query language\uff1a\u67e5\u8be2\u8bed\u8a00\u7684\u8868\u8fbe\u80fd\u529b</p> <ul> <li>\u590d\u6742\u67e5\u8be2\u9700\u6c42</li> <li>\u590d\u6742\u67e5\u8be2\u7684\u901f\u5ea6</li> </ul> </li> </ul> <p>\u4e0d\u540c\u7684\u8bc4\u5224\u7c7b\u522b\uff1a</p> <ul> <li>Data retrieval \u6570\u636e\u68c0\u7d22\uff1a\u4e3b\u8981\u770b\u54cd\u5e94\u65f6\u95f4\u548c\u68c0\u7d22\u5927\u5c0f</li> <li>Information retrieval \u4fe1\u606f\u68c0\u7d22\uff1a\u4e3b\u8981\u770b\u68c0\u7d22\u7ed3\u679c\u7684\u51c6\u786e\u6027</li> </ul>"},{"location":"cs/ads/chapter3/#relevence-measurement","title":"Relevence Measurement","text":"<p>\u8ba1\u7b97\u67e5\u8be2\u8bcd\u4e0e\u6587\u6863\u7684\u76f8\u5173\u6027\uff0c</p> Relevent Irrelevent Retrieved RR IR Not Retrieved RI II <ul> <li> <p>\u51c6\u786e\u7387\uff08Precision\uff09\uff1a\\(P = \\frac{R_R}{R_R + I_R}\\)</p> <p>\u8861\u91cf\u68c0\u7d22\u7ed3\u679c\u4e2d\u76f8\u5173\u6587\u6863\u7684\u6bd4\u4f8b\u3002</p> </li> <li> <p>\u53ec\u56de\u7387\uff08Recall\uff09\uff1a\\(R = \\frac{R_R}{R_R + R_I}\\)</p> <p>\u8861\u91cf\u76f8\u5173\u6587\u6863\u4e2d\u88ab\u68c0\u7d22\u5230\u7684\u6bd4\u4f8b\u3002</p> </li> </ul>"},{"location":"cs/ads/chapter4/","title":"Leftist Heaps and Skew Heaps","text":""},{"location":"cs/ads/chapter4/#leftist-heaps","title":"Leftist Heaps","text":"<p>Null Path Length</p> <p>\u8282\u70b9\u7684 null path length \u662f\u4ece\u8be5\u8282\u70b9\u5230\u6700\u8fd1\u7684\u6ca1\u6709\u4e24\u4e2a\u513f\u5b50\u7684\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u7684\u957f\u5ea6\u3002\u6709</p> \\[     \\mathrm{NPL}(x) = \\min(\\mathrm{NPL}(\\mathrm{left}(x)), \\mathrm{NPL}(\\mathrm{right}(x))) + 1 \\] <p>\u5b9a\u4e49 \\(\\mathrm{NPL}(\\text{null}) = 0\\)\u3002</p> <p>\u5de6\u504f\u6811\uff08Leftist Heap\uff09\u662f\u4e00\u79cd\u4e8c\u53c9\u5806\uff0c\u5b83\u6ee1\u8db3\u5de6\u504f\u6027\u8d28\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9 \\(x\\)\uff0c\u5176\u5de6\u5b50\u6811\u7684 npl \u4e0d\u5c0f\u4e8e\u53f3\u5b50\u6811\u7684 npl\u3002</p>"},{"location":"cs/ads/chapter4/#operations","title":"Operations","text":""},{"location":"cs/ads/chapter4/#merge","title":"Merge","text":"<p>\u9009\u53d6\u4e24\u4e2a\u5de6\u504f\u6811\u7684\u6839\u8282\u70b9\u4e2d\u8f83\u5c0f\u7684\u4e00\u4e2a\u4f5c\u4e3a\u65b0\u6839\u8282\u70b9\uff0c\u7136\u540e\u9012\u5f52\u5730\u5c06\u8f83\u5927\u6839\u8282\u70b9\u7684\u53f3\u5b50\u6811\u4e0e\u8f83\u5c0f\u6839\u8282\u70b9\u5408\u5e76\u3002</p> <p>\u5408\u5e76\u540e\uff0c\u5982\u679c\u5de6\u5b50\u6811\u7684 npl \u5c0f\u4e8e\u53f3\u5b50\u6811\u7684 npl\uff0c\u5219\u4ea4\u6362\u5de6\u53f3\u5b50\u6811\uff0c\u7136\u540e\u66f4\u65b0 npl\u3002</p> <p>\u53c2\u8003\u4ee3\u7801\uff1a</p> <pre><code>Node *merge(Node *T1, Node *T2) {\n    if (T1 == NULL || T2 == NULL) {\n        return T1 == NULL ? T2 : T1;\n    }\n    if (T1-&gt;key &gt; T2-&gt;key) {\n        swap(T1, T2);\n    }\n    T1-&gt;right = merge(T1-&gt;right, T2);\n    if (T1-&gt;left == NULL || T1-&gt;left-&gt;npl &lt; T1-&gt;right-&gt;npl) {\n        swap(T1-&gt;left, T1-&gt;right);\n    }\n    T1-&gt;npl = T1-&gt;right == NULL ? 0 : T1-&gt;right-&gt;npl + 1;\n    return T1;\n}\n</code></pre>"},{"location":"cs/ads/chapter4/#insertion","title":"Insertion","text":"<p>\u5c06\u65b0\u8282\u70b9\u4f5c\u4e3a\u4e00\u4e2a\u5de6\u504f\u6811\uff0c\u7136\u540e\u4e0e\u539f\u5de6\u504f\u6811\u5408\u5e76\u3002</p>"},{"location":"cs/ads/chapter4/#deletion","title":"Deletion","text":"<p>\u5c06\u6839\u8282\u70b9\u5220\u9664\uff0c\u7136\u540e\u5c06\u5de6\u53f3\u5b50\u6811\u5408\u5e76\u3002</p>"},{"location":"cs/ads/chapter4/#complexity-analysis","title":"Complexity Analysis","text":"<p>\u5de6\u504f\u6811\u7684\u53f3\u8def\u5f84\u957f\u5ea6\u4e0d\u8d85\u8fc7 \\(\\log n\\)\u3002</p> <p>\u8bc1\u660e</p> <p>\u53f3\u8def\u5f84\u957f\u5ea6\u4e3a \\(k\\) \u7684\u5de6\u504f\u6811\u81f3\u5c11\u5305\u542b \\(2^k - 1\\) \u4e2a\u8282\u70b9\uff08\u5f52\u7eb3\u8bc1\u660e\uff09\u3002\u56e0\u6b64\uff0c\u8282\u70b9\u6570\u4e3a \\(n\\) \u7684\u5de6\u504f\u6811\u7684\u53f3\u8def\u5f84\u957f\u5ea6\u4e0d\u8d85\u8fc7 \\(\\log n\\)\u3002</p> <p>\u5408\u5e76\u64cd\u4f5c\u4e3a\u904d\u5386\u53f3\u8def\u5f84\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(\\log n)\\)\u3002</p>"},{"location":"cs/ads/chapter4/#skew-heaps","title":"Skew Heaps","text":"<p>\u659c\u5806\uff08Skew Heap\uff09\u662f\u4e00\u79cd\u4e8c\u53c9\u5806\uff0c\u5b83\u4e0d\u6ee1\u8db3\u5de6\u504f\u6027\u8d28\u3002</p> <p>\u7c7b\u4f3c\u4e8e\u5de6\u504f\u6811\uff0c\u4f46\u659c\u5806\u6bcf\u6b21\u5408\u5e76\u90fd\u4ea4\u6362\u5de6\u53f3\u5b50\u6811\u3002</p>"},{"location":"cs/ads/chapter4/#operations_1","title":"Operations","text":""},{"location":"cs/ads/chapter4/#merge_1","title":"Merge","text":"<p>\u5408\u5e76\u4e4b\u540e\uff0c\u4ea4\u6362\u5de6\u53f3\u5b50\u6811\u3002</p> <p>\u53c2\u8003\u4ee3\u7801\uff1a</p> <pre><code>Node *merge(Node *T1, Node *T2) {\n    if (T1 == NULL || T2 == NULL) {\n        return T1 == NULL ? T2 : T1;\n    }\n    if (T1-&gt;key &gt; T2-&gt;key) {\n        swap(T1, T2);\n    }\n    T1-&gt;right = merge(T1-&gt;right, T2);\n    swap(T1-&gt;left, T1-&gt;right);\n    return T1;\n}\n</code></pre>"},{"location":"cs/ads/chapter4/#complexity-analysis_1","title":"Complexity Analysis","text":"<p>\u5747\u644a\u5206\u6790</p> <p>\u8bbe \\(D_i\\) \u4e3a\u7b2c \\(i\\) \u6b21\u64cd\u4f5c\u540e\u7684\u6839\uff0c\u52bf\u80fd\u51fd\u6570 \\(\\Phi(D_i) = \\texttt{\u91cd\u8282\u70b9\u4e2a\u6570}\\)</p> <p>\u91cd\u8282\u70b9</p> <p>\u5b9a\u4e49\u91cd\u8282\u70b9\u4e3a\u53f3\u5b50\u6811\u5927\u5c0f\u5927\u4e8e\u7b49\u4e8e\u5de6\u5b50\u6811\u5927\u5c0f\u7684\u8282\u70b9\u3002</p> <p>\u5b9a\u4e49 \\(H_i = l_i + h_i\\) \u4e3a\u53f3\u8def\u5f84\u4e0a\u8f7b\u8282\u70b9\u4e2a\u6570\u548c\u91cd\u8282\u70b9\u4e2a\u6570\u4e4b\u548c\uff0c\u5373\u53f3\u8def\u5f84\u7684\u957f\u5ea6\u3002</p> <p>\u5c06\u5408\u5e76\u524d\u7684\u4e24\u68f5\u6811\u5206\u522b\u8868\u793a\u4e3a \\(*_1\\) \u548c \\(*_2\\)\u3002</p> <p>\u5408\u5e76\u524d\u7684\u52bf\u80fd\u4e3a \\(\\Phi(D_i) = h_1 + h_2 + h\\)\uff0c\u5176\u4e2d \\(h\\) \u975e\u53f3\u8def\u5f84\u4e0a\u7684\u91cd\u8282\u70b9\u4e2a\u6570\u3002</p> <p>\u5408\u5e76\u540e\uff0c\u7531\u4e8e\u4ea4\u6362\u5de6\u53f3\u5b50\u6811\uff0c\u53f3\u8def\u5f84\u4e0a\u7684\u91cd\u8282\u70b9\u4e00\u5b9a\u4f1a\u53d8\u6210\u8f7b\u8282\u70b9\uff0c\u8f7b\u8282\u70b9\u53ef\u80fd\u53d8\u6210\u91cd\u8282\u70b9\uff0c\u53d6\u4e0a\u754c\u5219\u6709</p> \\[     \\Phi(D_{i+1}) \\leq l_1 + l_2 + h \\] <p>\u5355\u6b21\u5408\u5e76\u7684\u5b9e\u9645\u4ee3\u4ef7 \\(c_i = l_1 + l_2 + h_1 + h_2\\)\uff0c\u5747\u644a\u4ee3\u4ef7\u4e3a</p> \\[     c'_i = c_i + \\Phi(D_{i+1}) - \\Phi(D_i) \\leq 2(l_1 + l_2) \\] <p>\u7531\u4e8e\u8f7b\u8282\u70b9\u4e2a\u6570\u4e3a \\(O(\\log n)\\)\uff0c\u56e0\u6b64\u5747\u644a\u4ee3\u4ef7\u4e3a \\(O(\\log n)\\)\u3002</p>"},{"location":"cs/ads/chapter5/","title":"Binomial Queue","text":""},{"location":"cs/ads/chapter5/#definition","title":"Definition","text":"<p>\u4e8c\u9879\u961f\u5217\u7531\u4e00\u7ec4\u4e8c\u9879\u6811\u7ec4\u6210\u3002\u5ea6\u4e3a \\(k\\) \u7684\u4e8c\u9879\u6811\u6ee1\u8db3\uff1a</p> <ul> <li>\u6ee1\u8db3\u5806\u5e8f\u6027\u8d28\u3002</li> <li>\u6709 \\(2^k\\) \u4e2a\u8282\u70b9\u3002</li> <li>\u6839\u8282\u70b9\u6709 \\(k\\) \u68f5\u5b50\u6811\uff0c\u5206\u522b\u662f\u5ea6\u4e3a \\(0, 1, \\ldots, k-1\\) \u7684\u4e8c\u9879\u6811\u3002</li> </ul>"},{"location":"cs/ads/chapter5/#operations","title":"Operations","text":""},{"location":"cs/ads/chapter5/#merge","title":"Merge","text":""},{"location":"cs/ads/chapter5/#merge-trees","title":"Merge Trees","text":"<p>\u5408\u5e76\u4e24\u68f5\u4e8c\u9879\u6811\uff0c\u8981\u6c42\u5ea6\u5fc5\u987b\u76f8\u7b49\u3002</p> <p>\u9009\u62e9\u952e\u503c\u8f83\u5c0f\u7684\u6839\u8282\u70b9\u4f5c\u4e3a\u65b0\u6839\u8282\u70b9\uff0c\u7136\u540e\u5c06\u53e6\u4e00\u4e8c\u9879\u6811\u4f5c\u4e3a\u65b0\u6839\u8282\u70b9\u7684\u5b50\u6811\u3002</p>"},{"location":"cs/ads/chapter5/#merge-queues","title":"Merge Queues","text":"<p>\u4e8c\u9879\u6811\u7684\u5ea6\u548c\u4e8c\u9879\u961f\u5217\u8282\u70b9\u6570\u7684\u5173\u7cfb</p> <p>\u5047\u8bbe \\(n\\) \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a \\(b_k b_{k-1} \\ldots b_0\\)\uff0c\u5219\u8282\u70b9\u6570\u4e3a \\(n\\) \u7684\u4e8c\u9879\u961f\u5217\uff0c\u82e5 \\(b_i = 1\\)\uff0c\u5219\u5305\u542b\u5ea6\u4e3a \\(i\\) \u7684\u4e8c\u9879\u6811\u3002</p> <p>\u7c7b\u4f3c\u4e8c\u8fdb\u5236\u52a0\u6cd5\uff0c\u540c\u5ea6\u7684\u4e8c\u9879\u6811\u5408\u5e76\uff0c\u82e5\u4ea7\u751f\u8fdb\u4f4d\uff0c\u5219\u5408\u5e76\u5230\u5ea6\u66f4\u9ad8\u7684\u4e8c\u9879\u6811\u3002</p>"},{"location":"cs/ads/chapter5/#insertion","title":"Insertion","text":"<p>\u5c06\u65b0\u8282\u70b9\u4f5c\u4e3a\u5ea6\u4e3a \\(0\\) \u7684\u4e8c\u9879\u6811\uff0c\u7136\u540e\u4e0e\u539f\u4e8c\u9879\u961f\u5217\u5408\u5e76\u3002</p>"},{"location":"cs/ads/chapter5/#deletion","title":"Deletion","text":"<p>\u627e\u5230\u6839\u8282\u70b9\u952e\u503c\u6700\u5c0f\u7684\u4e8c\u9879\u6811\uff0c\u5220\u9664\u6839\u8282\u70b9\uff0c\u7136\u540e\u5c06\u5176\u5b50\u6811\u4f5c\u4e3a\u4e00\u4e2a\u65b0\u7684\u4e8c\u9879\u961f\u5217\uff0c\u4e0e\u539f\u4e8c\u9879\u961f\u5217\u5408\u5e76\u3002</p>"},{"location":"cs/ads/chapter5/#complexity-analysis","title":"Complexity Analysis","text":"<p>\u4e8c\u9879\u6811\u5408\u5e76\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(1)\\)\uff0c\u5355\u6b21\u4e8c\u9879\u961f\u5217\u5408\u5e76\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(\\log n)\\)\u3002</p>"},{"location":"cs/ads/chapter5/#amortized-analysis","title":"Amortized Analysis","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u7a7a\u7684\u4e8c\u9879\u961f\u5217\uff0c\u63d2\u5165 \\(n\\) \u4e2a\u8282\u70b9\u3002</p> <p>\u8bbe \\(c_i, c'_i\\) \u5206\u522b\u8868\u793a\u63d2\u5165 \\(i\\) \u4e2a\u8282\u70b9\u7684\u5b9e\u9645\u4ee3\u4ef7\u548c\u5747\u644a\u4ee3\u4ef7\uff0c\u52bf\u80fd\u51fd\u6570 \\(\\Phi_i\\) \u5b9a\u4e49\u4e3a\u7b2c \\(i\\) \u6b21\u63d2\u5165\u540e\u4e8c\u9879\u961f\u5217\u4e2d\u4e8c\u9879\u6811\u7684\u4e2a\u6570\u3002</p> <p>Note</p> <p>\u5b9e\u9645\u4ee3\u4ef7\u4e3a \\(c\\) \u7684\u4e00\u6b21\u63d2\u5165\u4f1a\u5bfc\u81f4\u52bf\u80fd\u589e\u52a0 \\(2-c\\)\u3002\u5206\u7c7b\u8ba8\u8bba\uff1a</p> <ul> <li>\u82e5\u63d2\u5165\u4e0d\u4ea7\u751f\u8fdb\u4f4d\uff0c\u5b9e\u9645\u4ee3\u4ef7\u4e3a \\(1\\)\uff0c\u52bf\u80fd\u589e\u52a0 \\(1\\)\u3002</li> <li>\u82e5\u63d2\u5165\u4ea7\u751f\u8fdb\u4f4d\uff0c\u8fdb\u4f4d\u6b21\u6570\u4e3a \\(k\\)\uff0c\u5b9e\u9645\u4ee3\u4ef7\u4e3a \\(k+1\\)\uff0c\u52bf\u80fd\u589e\u52a0 \\(1-k\\)\u3002</li> </ul> <p>\u6709 \\(c'_i = c_i + \\Phi_{i+1} - \\Phi_i = 2\\)\uff0c\u5373\u603b\u4ee3\u4ef7\u4e3a \\(T(n) = 2n\\)\uff0c\u5747\u644a\u4ee3\u4ef7\u4e3a \\(O(1)\\)\u3002</p>"},{"location":"cs/ads/chapter6/","title":"Backtracking","text":""},{"location":"cs/ads/chapter6/#turnpike-problem","title":"Turnpike Problem","text":"<p>\u7ed9\u5b9a\u4e00\u7ec4\u70b9\u7684\u4e24\u4e24\u95f4\u7684\u8ddd\u79bb \\(\\{d_i\\}\\)\uff0c\u6c42\u8fd9\u4e9b\u70b9\u7684\u4f4d\u7f6e\u3002</p> <ol> <li>\u5c06\u8ddd\u79bb \\(\\{d_i\\}\\) \u6392\u5e8f\uff0c\u6700\u5927\u7684\u8ddd\u79bb\u4e3a \\(d_n\\)\u3002</li> <li>\u786e\u5b9a\u7b2c\u4e00\u4e2a\u70b9\u7684\u4f4d\u7f6e\u4e3a 0\uff0c\u5219\u6700\u8fdc\u7684\u70b9\u7684\u4f4d\u7f6e\u4e3a \\(d_n\\)\u3002</li> <li>\u4ece\u5927\u5230\u5c0f\u9009\u53d6\u8ddd\u79bb \\(d_i\\)\uff0c\u53ea\u80fd\u653e\u5728 \\(d_i\\) \u548c \\(d_n - d_i\\) \u5904\uff0c\u8fdb\u884c\u641c\u7d22\u3002\u82e5\u65b0\u7684\u70b9\u548c\u5df2\u7ecf\u786e\u5b9a\u7684\u70b9\u7684\u8ddd\u79bb\u4e0d\u5728\u8ddd\u79bb\u96c6\u5408\u5185\uff0c\u5219\u526a\u679d\u3002</li> </ol>"},{"location":"cs/ads/chapter6/#minimax-strategy","title":"Minimax Strategy","text":"<p>\u5728\u7c7b\u4f3c\u4e0b\u68cb\u7684\u641c\u7d22\u4e2d\uff0c\u4f7f\u7528 Minimax \u7b56\u7565\uff0c\u6700\u5927\u5316\u81ea\u5df1\u7684\u5229\u76ca\uff0c\u540c\u65f6\u6700\u5c0f\u5316\u5bf9\u624b\u7684\u5229\u76ca\u3002</p>"},{"location":"cs/ads/chapter6/#-pruning","title":"\u03b1-\u03b2 Pruning","text":"<p>\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4 \\( \\alpha \\) \u548c \\( \\beta \\) \u4e24\u4e2a\u503c\uff0c\u5206\u522b\u8868\u793a\u5f53\u524d\u5b50\u6811\u6536\u76ca\u7684\u4e0a\u754c\u548c\u4e0b\u754c\u3002</p> <p>\u5728\u641c\u7d22\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u7ee7\u7eed\u641c\u7d22\u5bf9\u5f53\u524d\u8282\u70b9\u6ca1\u6709\u610f\u4e49\uff0c\u53ef\u4ee5\u8fdb\u884c\u526a\u679d\u3002</p>"},{"location":"cs/ads/chapter7/","title":"Divide and Conquer","text":"<p>General recurrence: \\(T(n) = aT(n/b) + f(n)\\)</p>"},{"location":"cs/ads/chapter7/#closest-points-problem","title":"Closest Points Problem","text":"<p>\u5e73\u9762\u4e0a N \u4e2a\u70b9\uff0c\u627e\u5230\u6700\u8fd1\u7684\u70b9\u5bf9\u3002</p> <p>\u6309\u7167 x \u5750\u6807\u6392\u5e8f\uff0c\u5206\u6cbb\u5730\u627e\u5230\u5de6\u53f3\u4e24\u8fb9\u7684\u6700\u8fd1\u70b9\u5bf9\uff0c\u7136\u540e\u627e\u5230\u8de8\u8d8a\u4e2d\u7ebf\u7684\u6700\u8fd1\u70b9\u5bf9\u3002</p> <p>\u8bbe\u5de6\u53f3\u4e24\u8fb9\u7684\u6700\u8fd1\u70b9\u5bf9\u8ddd\u79bb\u4e3a \\(d\\)\uff0c\u8bbe\u4e2d\u7ebf\u4e3a \\(c\\)\uff0c\u8bbe \\(T_l\\) \u4e3a\u5de6\u8fb9\u8ddd\u79bb\u4e2d\u7ebf\u5c0f\u4e8e \\(d\\) \u7684\u70b9\u96c6\uff0c\\(T_r\\) \u4e3a\u53f3\u8fb9\u8ddd\u79bb\u4e2d\u7ebf\u5c0f\u4e8e \\(d\\) \u7684\u70b9\u96c6\u3002</p> <p>\u8bbe \\(p_l \\in S_l, p_r \\in S_r\\) \u6ee1\u8db3 \\(\\mathrm{dist}(p_l, p_r) &lt; d\\)\uff0c\u5219</p> <ul> <li>\\(p_l \\in T_l, p_r \\in T_r\\)</li> <li>\\(p_l, p_r\\) \u4e00\u5b9a\u5728\u4ee5\u4e2d\u7ebf\u4e3a\u5bf9\u79f0\u8f74\uff0c\u5bbd\u5ea6\u4e3a \\(2d\\) \uff0c\u9ad8\u5ea6\u4e3a \\(d\\) \u7684\u77e9\u5f62 \\(R\\) \u5185</li> <li>\\(R\\) \u5185\u6700\u591a\u6709 8 \u4e2a\u70b9\uff0c\u5206\u522b\u5728\u4e24\u8fb9 \\(d\\times d\\) \u7684\u77e9\u5f62\u7684\u56db\u4e2a\u89d2\u4e0a</li> </ul> <p>\u5219\u5c06 \\(T_l, T_r\\) \u4e2d\u7684\u70b9\u6309\u7167 y \u5750\u6807\u6392\u5e8f\u4e3a \\((p_n)\\)\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9 \\(p_i\\)\uff0c\u53ea\u9700\u8981\u679a\u4e3e \\(p_{i+1}, \\cdots, p_{i+7}\\) \u5373\u53ef\u3002</p>"},{"location":"cs/ads/chapter7/#time-complexity","title":"Time Complexity","text":"<p>\\(T(n) = aT(n/b) + f(n)\\)</p>"},{"location":"cs/ads/chapter7/#substitution-method","title":"Substitution Method","text":"<p>\u731c\u6d4b\uff0c\u7136\u540e\u4ee3\u5165\u8bc1\u660e\u3002</p> <p>Example</p> \\[ T(n) = 2T(\\lfloor n/2 \\rfloor) + n \\] <p>\u731c\u6d4b \\(T(n) = O(n\\log n)\\)\u3002</p> <p>\u5047\u8bbe\u5bf9\u4e8e \\(m &lt; n\\)\uff0c\u6709 \\(T(m) \\leq cm\\log m\\)\uff0c\u5219 \\(T(\\lfloor n/2 \\rfloor) \\leq c\\lfloor n/2 \\rfloor \\log \\lfloor n/2 \\rfloor\\)\u3002</p> <p>\u4ee3\u5165\u5f97\u5230</p> \\[ \\begin{aligned} T(n) &amp;\\leq 2c\\lfloor n/2 \\rfloor \\log \\lfloor n/2 \\rfloor + n \\\\ &amp;\\leq cn(\\log n - \\log 2) + n \\\\ &amp;\\leq cn\\log n, \\quad c \\geq 1 \\end{aligned} \\] <p>\u6240\u4ee5 \\(T(n) = O(n\\log n)\\)\u3002</p>"},{"location":"cs/ads/chapter7/#recursion-tree","title":"Recursion Tree","text":"<p>\u753b\u51fa\u9012\u5f52\u6811\uff0c\u7136\u540e\u6c42\u548c\uff0c\u7136\u540e\u8bc1\u660e\u3002</p> <p>Example</p> \\[ T(n) = 3T(n/4) + \\Theta(n^2) \\] <p>\u9012\u5f52\u6811\u5982\u4e0b\uff1a</p> <p></p> \\[ T(n) = \\sum_{i=0}^{\\log_4 n - 1} (3/16)^i cn^2 + \\Theta(n^{\\log_4 3}) = O(n^2) \\] <p>\u518d\u4ee3\u5165\u8bc1\u660e</p> <p>Example</p> \\[ T(n) = T(n/3) + T(2n/3) + \\Theta(n) \\]"},{"location":"cs/ads/chapter7/#master-theorem","title":"Master Theorem","text":"<p>\u8bbe \\(a \\geq 1, b &gt; 1\\)\uff0c\\(T(n) = aT(n/b) + f(n)\\)\u3002</p> <ol> <li>\u5982\u679c \\(f(n) = O(n^{\\log_b a - \\epsilon})\\)\uff0c\u5219 \\(T(n) = \\Theta(n^{\\log_b a})\\)\u3002</li> <li>\u5982\u679c \\(f(n) = \\Theta(n^{\\log_b a})\\)\uff0c\u5219 \\(T(n) = \\Theta(n^{\\log_b a}\\log n)\\)\u3002</li> <li> <p>\u5982\u679c \\(f(n) = \\Omega(n^{\\log_b a + \\epsilon})\\)\uff0c\u4e14\u5bf9\u4e8e\u67d0\u4e2a\u5e38\u6570 \\(c &lt; 1\\) \u548c\u6240\u6709\u8db3\u591f\u5927\u7684 \\(n\\) \u6709 \\(af(n/b) \\leq cf(n)\\)\uff0c\u5219 \\(T(n) = \\Theta(f(n))\\)\u3002</p> </li> <li> <p>\u60c5\u51b5 1 \u8868\u793a\u9012\u5f52\u6811\u4e2d\u53f6\u5b50\u8282\u70b9\u7684\u5f00\u9500\u5360\u636e\u4e3b\u5bfc\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u53f6\u5b50\u4e2a\u6570 \\(n^{\\log_b a}\\) \u76f8\u5173\uff0c\u4e3a \\(O(n^{\\log_b a})\\)\u3002</p> </li> <li>\u60c5\u51b5 3 \u8868\u793a\u9012\u5f52\u6811\u4e2d\u6839\u8282\u70b9\u7684\u5f00\u9500\u5360\u636e\u4e3b\u5bfc\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u6839\u8282\u70b9\u7684\u5f00\u9500 \\(f(n)\\) \u76f8\u5173\uff0c\u4e3a \\(O(f(n))\\)\u3002</li> <li>\u60c5\u51b5 2 \u8868\u793a\u9012\u5f52\u6811\u4e2d\u6839\u8282\u70b9\u548c\u53f6\u5b50\u8282\u70b9\u7684\u5f00\u9500\u76f8\u5f53\uff0c\u603b\u590d\u6742\u5ea6\u4e3a \\(O(n^{\\log_b a}\\log n)\\)\u3002</li> </ol> <p>\\(\\log n\\) \u6e10\u8fdb\u5c0f\u4e8e \\(n^{\\epsilon}\\)</p>"},{"location":"cs/ads/chapter7/#another-form","title":"Another Form","text":"<p>Form 1</p> <ol> <li>\u5982\u679c \\(af(n/b) = \\kappa f(n)\\)\uff0c\u5176\u4e2d \\(\\kappa &lt; 1\\)\uff0c\u5219 \\(T(n) = \\Theta(f(n))\\)\u3002\uff08\u5206\u89e3\u4efb\u52a1\u7684\u5f00\u9500\u5c0f\u4e8e\u5408\u5e76\u4efb\u52a1\u7684\u5f00\u9500\uff09</li> <li>\u5982\u679c \\(af(n/b) = K f(n)\\)\uff0c\u5176\u4e2d \\(K &gt; 1\\)\uff0c\u5219 \\(T(n) = \\Theta(n^{\\log_b a})\\)\u3002\uff08\u5206\u89e3\u4efb\u52a1\u7684\u5f00\u9500\u5927\u4e8e\u5408\u5e76\u4efb\u52a1\u7684\u5f00\u9500\uff09</li> <li>\u5982\u679c \\(af(n/b) = f(n)\\)\uff0c\u5219 \\(T(n) = \\Theta(f(n)\\log_b n)\\)\u3002\uff08\u5206\u89e3\u4efb\u52a1\u548c\u5408\u5e76\u4efb\u52a1\u7684\u5f00\u9500\u76f8\u5f53\uff09</li> </ol> <p>Form 2</p> <p>\\(T(n) = aT(n/b) + \\Theta(n^k\\log^p n)\\)\u3002</p> <ol> <li>\u5982\u679c \\(a &gt; b^k\\)\uff0c\u5219 \\(T(n) = \\Theta(n^{\\log_b a})\\)\u3002</li> <li>\u5982\u679c \\(a = b^k\\)\uff0c\u5219 \\(T(n) = \\Theta(n^k\\log^{p+1} n)\\)\u3002</li> <li>\u5982\u679c \\(a &lt; b^k\\)\uff0c\u5219 \\(T(n) = \\Theta(n^k\\log^p n)\\)\u3002</li> </ol>"},{"location":"cs/ads/chapter8/","title":"Dynamic Programming","text":""},{"location":"cs/ads/chapter8/#optimal-binary-search-tree","title":"Optimal Binary Search Tree","text":"<p>N \u4e2a\u8bcd\uff0c\u6309\u7167\u5b57\u5178\u5e8f\u6392\u5217 \\(w_1, w_2, \\cdots, w_N\\)\uff0c\u6bcf\u4e2a\u8bcd \\(w_i\\) \u7684\u88ab\u68c0\u7d22\u5230\u7684\u6982\u7387\u4e3a \\(p_i\\)\uff0c\u6c42\u4e00\u68f5\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u4f7f\u5f97\u68c0\u7d22\u7684\u671f\u671b\u4ee3\u4ef7\u6700\u5c0f\u3002</p> <p>\u5373\u6700\u5c0f\u5316 \\(\\sum_{i=1}^N p_i (d_i + 1)\\)\uff0c\u5176\u4e2d \\(d_i\\) \u4e3a \\(w_i\\) \u5728\u6811\u4e2d\u7684\u6df1\u5ea6\u3002</p> <p>\u8bbe</p> <ul> <li>\\(T_{ij}\\) \u4e3a \\(w_i, w_{i+1}, \\cdots, w_j\\) \u7684\u6700\u4f18\u4e8c\u53c9\u641c\u7d22\u6811</li> <li>\\(c_{ij}\\) \u4e3a \\(T_{ij}\\) \u7684\u4ee3\u4ef7</li> </ul> <p>\u5219\u6709</p> \\[ c_{ij} = \\min_{i \\leq r \\leq j} \\left\\{ c_{i,r-1} + c_{r+1,j} + \\sum_{k=i}^j p_k \\right\\} \\] <p>\u4e14 \\(c_{ii} = p_i\\)\u3002</p>"},{"location":"cs/ads/chapter9/","title":"Greedy Problem","text":""},{"location":"cs/ads/chapter9/#activity-selection-problem","title":"Activity Selection Problem","text":"<p>\u6709\u4e00\u4e9b\u6d3b\u52a8\uff0c\u6bcf\u4e2a\u6d3b\u52a8\u6709\u4e00\u4e2a\u5f00\u59cb\u65f6\u95f4 \\(s_i\\) \u548c\u7ed3\u675f\u65f6\u95f4 \\(f_i\\)\uff0c\u53ea\u6709\u4e00\u4e2a\u8d44\u6e90\uff0c\u6bcf\u4e2a\u6d3b\u52a8\u5360\u7528\u8d44\u6e90\uff0c\u95ee\u6700\u591a\u80fd\u5b89\u6392\u591a\u5c11\u4e2a\u6d3b\u52a8\u3002</p> <p>\u6309\u7167 \\(s_i\\) \u6392\u5e8f\u3002</p>"},{"location":"cs/ads/chapter9/#dynamic-programming","title":"Dynamic Programming","text":"<p>\u8bbe \\(c_{i}\\) \u4e3a\u6d3b\u52a8\u96c6\u5408 \\(\\{a_1, a_2, \\cdots, a_i\\}\\) \u7684\u4e2d\u6700\u591a\u80fd\u5b89\u6392\u7684\u6d3b\u52a8\u6570\u3002\u5219\u6709</p> \\[ c_i = \\max \\left\\{ c_{i-1}, 1 + c_{j} \\right\\} \\] <p>\u5176\u4e2d \\(j\\) \u4e3a\u6700\u540e\u4e00\u4e2a \\(f_j \\leq s_i\\) \u7684\u6d3b\u52a8\u3002</p>"},{"location":"cs/ads/chapter9/#greedy-algorithm","title":"Greedy Algorithm","text":"<p>\u4ece\u524d\u5f80\u540e\u626b\u63cf\uff0c\u6bcf\u6b21\u9009\u62e9\u4e0d\u51b2\u7a81\u7684\u6700\u65e9\u7ed3\u675f\u7684\u6d3b\u52a8\u3002</p> <p>\u52a0\u6743\u6d3b\u52a8\u9009\u62e9\u95ee\u9898</p> <p>\u6bcf\u4e2a\u6d3b\u52a8\u6709\u6743\u91cd\uff0c\u8981\u6c42\u6700\u5927\u5316\u6743\u91cd\u3002</p> <p>\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u6c42\u89e3\u3002</p> <p>\u533a\u95f4\u8c03\u5ea6\u95ee\u9898</p> <p>\u6240\u6709\u6d3b\u52a8\u5fc5\u987b\u4e3e\u529e\uff0c\u6c42\u6700\u5c11\u9700\u8981\u591a\u5c11\u8d44\u6e90\u3002</p> <p>\u5148\u6309\u7167\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f\uff0c\u521d\u59cb\u8d44\u6e90\u6570\u91cf\u4e3a 1\uff0c\u6bcf\u6b21\u5982\u679c\u6240\u6709\u6d3b\u52a8\u90fd\u51b2\u7a81\uff0c\u5219\u8d44\u6e90\u6570\u91cf\u52a0 1\uff0c\u5426\u5219\u52a0\u5165\u5230\u4e0d\u51b2\u7a81\u7684\u6d3b\u52a8\u4e2d\u3002</p>"},{"location":"cs/ads/chapter9/#huffman-coding","title":"Huffman Coding","text":"<p>\u7ed9\u5b9a\u4e00\u7ec4\u5b57\u7b26 \\(C\\) \u53ca\u5176\u9891\u7387\uff0c\u6784\u9020\u4e00\u4e2a\u4e8c\u53c9 Trie\uff0c\u4f7f\u5f97\u671f\u671b\u7f16\u7801\u957f\u5ea6\u6700\u77ed\u3002</p> <p>\u6bcf\u6b21\u9009\u62e9\u9891\u7387\u6700\u5c0f\u7684\u4e24\u4e2a\u5b57\u7b26\u6784\u9020\u4e00\u4e2a\u65b0\u5b57\u7b26\uff0c\u9891\u7387\u4e3a\u4e24\u8005\u4e4b\u548c\uff0c\u76f4\u5230\u53ea\u5269\u4e00\u4e2a\u5b57\u7b26\u3002</p> <p>Proof</p> <p>Lemma</p> <p>\u82e5 \\(x, y\\) \u662f \\(C\\) \u4e2d\u9891\u7387\u6700\u5c0f\u7684\u4e24\u4e2a\u5b57\u7b26\uff0c\u5219\u5b58\u5728\u4e00\u4e2a\u6700\u4f18\u524d\u7f00\u7f16\u7801\uff0c\u4f7f\u5f97 \\(x, y\\) \u7684\u7f16\u7801\u957f\u5ea6\u76f8\u540c\uff0c\u4e14\u53ea\u6709\u6700\u540e\u4e00\u4f4d\u4e0d\u540c\u3002</p> <p>\u5c06 \\(x, y\\) \u548c\u6700\u6df1\u7684\u4e24\u4e2a\u53f6\u5b50\u8282\u70b9\u4ea4\u6362\uff0c\u5f97\u5230\u7684\u671f\u671b\u7f16\u7801\u957f\u5ea6\u4e0d\u4f1a\u589e\u52a0\u3002</p> <p>Lemma</p> <p>\u5c06 \\(x, y\\) \u66ff\u6362\u4e3a\u4e00\u4e2a\u65b0\u5b57\u7b26 \\(z\\)\uff0c\u9891\u7387\u4e3a \\(x, y\\) \u4e4b\u548c\uff0c\u5176\u4e0a\u7684 Trie \u6811\u4e3a \\(T'\\)\uff0c\u90a3\u4e48\u5c06 \\(T'\\) \u4e2d \\(z\\) \u66ff\u6362\u4e3a \\(x, y\\)\uff0c\u5f97\u5230\u7684\u662f\u539f\u5b57\u7b26\u96c6\u7684\u4e00\u4e2a\u6700\u4f18\u524d\u7f00\u7f16\u7801\u6811 \\(T\\)\u3002</p> <p>\u8bbe \\(E(T)\\) \u4e3a \\(T\\) \u7684\u671f\u671b\u7f16\u7801\u957f\u5ea6\uff0c\u5219 \\(E(T) = E(T') + f_x + f_y\\)\u3002</p> <p>\u5047\u8bbe\u5b58\u5728 \\(T''\\) \u4e3a\u539f\u5b57\u7b26\u96c6\u4e0a\u7684\u524d\u7f00\u7f16\u7801\u6811\uff0c\u4f7f\u5f97 \\(E(T'') &lt; E(T)\\)\uff0c\u90a3\u4e48\u5c06 \\(T''\\) \u4e2d \\(x, y\\) \u5408\u5e76\u4e3a \\(z\\)\uff0c\u5f97\u5230 \\(T'''\\)\uff0c\u6709</p> \\[ E(T''') = E(T'') - f_x - f_y &lt; E(T) - f_x - f_y = E(T') \\] <p>\u4e0e \\(T'\\) \u4e3a\u6700\u4f18\u89e3\u77db\u76fe\u3002</p> <p>\u7efc\u4e0a\u4e24\u4e2a Lemma \u5f97\u5230 Huffman \u7f16\u7801\u7684\u6b63\u786e\u6027\u3002</p>"},{"location":"cs/co/","title":"\u8ba1\u7b97\u673a\u7ec4\u6210\u4e0e\u8bbe\u8ba1","text":"<p>Info</p> <p>\u672c\u6587\u6863\u4e3a\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u5b66\u4e60\u7b14\u8bb0\uff0c\u6388\u8bfe\u6559\u5e08\u4e3a \u5218\u6d77\u98ce \u3002</p>"},{"location":"cs/co/review/","title":"\u590d\u4e60","text":""},{"location":"cs/co/review/#_2","title":"\u5185\u5b58\u5c42\u6b21\u67b6\u6784","text":""},{"location":"cs/co/review/#memory-technology","title":"Memory Technology","text":"<ul> <li>SRAM\uff1a\u9759\u6001\u968f\u673a\u5b58\u53d6\u5b58\u50a8\u5668\uff0c\u6570\u636e\u5b58\u50a8\u5728\u89e6\u53d1\u5668\u4e2d\uff0c\u901f\u5ea6\u5feb\u4f46\u662f\u9700\u8981\u66f4\u5927\u7684\u9762\u79ef</li> <li>DRAM\uff1a\u52a8\u6001\u968f\u673a\u5b58\u53d6\u5b58\u50a8\u5668\uff0c\u6570\u636e\u5b58\u50a8\u5728\u7535\u5bb9\u4e2d\uff0c\u901f\u5ea6\u6162\u4f46\u662f\u9762\u79ef\u5c0f</li> </ul>"},{"location":"cs/co/review/#memory-hierarchy","title":"Memory Hierarchy","text":"<ul> <li>block\uff1a\u8f6c\u79fb\u6570\u636e\u7684\u6700\u5c0f\u5355\u4f4d</li> <li>hit\uff1a\u4e0a\u5c42\u5b58\u50a8\u5668\u627e\u5230\u76ee\u6807\u6570\u636e\uff0c\u4e0d\u7528\u8bbf\u95ee\u4e0b\u5c42\u5b58\u50a8\u5668<ul> <li>hit rate\uff1a\u547d\u4e2d\u7387 = hit / access</li> <li>hit time\uff1a\u8bbf\u95ee\u65f6\u95f4 + \u5224\u65ad\u662f\u5426\u547d\u4e2d\u7684\u65f6\u95f4</li> </ul> </li> <li>miss\uff1a\u4e0a\u5c42\u5b58\u50a8\u5668\u672a\u627e\u5230\u76ee\u6807\u6570\u636e\uff0c\u9700\u8981\u8bbf\u95ee\u4e0b\u5c42\u5b58\u50a8\u5668<ul> <li>miss rate\uff1a\u5931\u6548\u7387 = 1 - \u547d\u4e2d\u7387</li> <li>miss penalty\uff1a\u66ff\u6362\u6570\u636e\u7684\u65f6\u95f4 + \u5c06\u6570\u636e\u8fd4\u56de\u7ed9\u5904\u7406\u5668\u7684\u65f6\u95f4</li> </ul> </li> </ul> <p>\u4e24\u4e2a\u95ee\u9898\uff1a</p> <ol> <li>\u901f\u5ea6\u95ee\u9898\uff1a\u4f7f\u7528 cache</li> <li>\u5bb9\u91cf\u95ee\u9898\uff1a\u4f7f\u7528\u865a\u62df\u5185\u5b58 Virtual Memory</li> </ol>"},{"location":"cs/co/review/#cache","title":"Cache","text":"<p>\u5730\u5740\u90fd\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d</p> <ul> <li>cache line\uff1a\u7f13\u5b58\u884c\uff0ccache \u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u6700\u5c11\u5305\u62ec valid bit\u3001tag\u3001data</li> <li> <p>\u5730\u5740\u5212\u5206\uff1atag + index + offset</p> <ul> <li>offset\uff1a\u53d6\u51b3\u4e8e cache line \u4e2d data \u6bb5\u7684\u5927\u5c0f\uff0c\u5982 data \u4e3a 64 \u5b57\u8282\uff0c\u5219 offset \u4e3a 6 \u4f4d</li> <li>index\uff1a\u53d6\u51b3\u4e8e cache \u7684\u5927\u5c0f\u548c\u7ec4\u6570</li> <li>tag\uff1a\u5269\u4e0b\u7684\u90e8\u5206\uff0c\u7528\u4e8e\u6bd4\u8f83\u662f\u5426\u547d\u4e2d</li> </ul> </li> <li> <p>Direct-Mapped Cache\uff1a\u76f4\u63a5\u6620\u5c04\u7f13\u5b58\uff0c\u6bcf\u4e2a block \u53ea\u80fd\u6620\u5c04\u5230\u4e00\u4e2a cache line</p> </li> <li>Fully Associative Cache\uff1a\u5168\u76f8\u8054\u7f13\u5b58\uff0c\u6bcf\u4e2a block \u53ef\u4ee5\u6620\u5c04\u5230\u4efb\u610f\u4e00\u4e2a cache line</li> <li>Set Associative Cache\uff1a\u7ec4\u76f8\u8054\u7f13\u5b58\uff0ccache \u88ab\u5212\u5206\u4e3a\u591a\u4e2a\u7ec4\uff0c\u6bcf\u4e2a block \u53ef\u4ee5\u6620\u5c04\u5230\u67d0\u4e2a\u7ec4\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a cache line\uff0c\u7ec4\u5185\u91c7\u7528\u76f4\u63a5\u6620\u5c04\uff0c\u7ec4\u7684\u5927\u5c0f\u79f0\u4e3a ways\u3002\u5730\u5740\u4e2d index \u4e3a\u7ec4\u53f7</li> </ul>"},{"location":"cs/co/review/#block-replacement","title":"Block Replacement","text":"<ul> <li>Random Replacement\uff1a\u968f\u673a\u66ff\u6362</li> <li>LRU Replacement\uff1a\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\u66ff\u6362\uff0c\u9700\u8981\u5728\u6bcf\u4e2a cache line \u4e2d\u7ef4\u62a4 lru bits</li> <li>FIFO Replacement\uff1a\u5148\u8fdb\u5148\u51fa\u66ff\u6362</li> </ul>"},{"location":"cs/co/review/#write-policy","title":"Write Policy","text":"<ul> <li>Write-Through\uff1a\u5199\u76f4\u8fbe\uff0c\u5199\u5165 cache \u540c\u65f6\u5199\u5165\u4e3b\u5b58\uff0ccache \u4e2d\u7684\u6570\u636e\u6c38\u8fdc\u662f\u6700\u65b0\u7684</li> <li>Write-Back\uff1a\u5199\u56de\uff0c\u5199\u5165 cache \u540e\u4e0d\u5199\u5165\u4e3b\u5b58\uff0c\u53ea\u6709\u5f53 cache line \u88ab\u66ff\u6362\u65f6\u624d\u5199\u5165\u4e3b\u5b58\uff0c\u9700\u8981\u989d\u5916\u7684 dirty bit</li> </ul> <p>\u5199\u56de\u9700\u8981\u65f6\u95f4\uff0cCPU \u4f1a\u8fdb\u884c write stall \u7b49\u5f85\u5199\u76f4\u8fbe\u5b8c\u6210\uff0c\u53ef\u4ee5\u4f7f\u7528 write buffer \u7f13\u89e3\u3002\u526f\u4f5c\u7528\uff1a\u8bfb\u7684\u65f6\u5019\u9700\u8981\u5728 buffer \u4e2d\u4e5f\u67e5\u627e\u3002</p> <p>\u5f53\u53d1\u751f write miss \u65f6\uff0c\u6709\u4e24\u79cd\u7b56\u7565\uff1a</p> <ul> <li>Write Allocate\uff1a\u5199\u5206\u914d\uff0c\u5c06 block \u8bfb\u5165 cache \u540e\u518d\u5199\u5165\uff0c\u5e38\u4e0e write-back \u7ed3\u5408</li> <li>Write Around\uff1a\u5199\u7ed5\u8fc7\uff0c\u76f4\u63a5\u5199\u5165\u4e3b\u5b58\uff0c\u4e0d\u8bfb\u5165 cache</li> </ul>"},{"location":"cs/co/review/#memory-system-to-support-cache","title":"Memory System to Support Cache","text":"<p>\u4e0d\u540c memory \u67b6\u6784</p> <ol> <li> <p>Performance basic memory organization</p> <p>CPU - cache - memory</p> <ul> <li>\u5047\u8bbe<ul> <li>1 cycle send address to cache</li> <li>15 cycles for each DRAM access initiated by cache</li> <li>1 cycle to send data</li> <li>block size 4 words</li> </ul> </li> <li>\u90a3\u4e48<ul> <li>transfer \u4e00\u4e2a block \u7684\u9700\u8981 \\(1 + 15 + 1 = 17\\) cycles</li> <li>miss penalty \u4e3a \\(1 + 4 \\times (15 + 1) = 65\\) cycles</li> <li>\u5e26\u5bbd bandwidth \u4e3a \\(\\frac{4 \\times 4}{65} \\approx 0.25\\) words/cycle</li> </ul> </li> <li>Performance in Wider Main Memory</li> </ul> <p>CPU - cache - multiple caches - memory</p> <ul> <li>\u4e00\u6b21\u53ef\u4ee5\u8bfb\u51fa\u4e24\u4e2a word<ul> <li>miss penalty \u4e3a \\(1 + 2 \\times (15 + 1) = 33\\) cycles</li> <li>\u5e26\u5bbd bandwidth \u4e3a \\(\\frac{4 \\times 4}{33} \\approx 0.48\\) words/cycle</li> </ul> </li> <li>\u4e00\u6b21\u6027\u8bfb\u51fa 4 \u4e2a word<ul> <li>miss penalty \u4e3a \\(1 + 15 + 1 = 17\\) cycles</li> <li>\u5e26\u5bbd bandwidth \u4e3a \\(\\frac{4 \\times 4}{17} \\approx 0.98\\) words/cycle</li> </ul> </li> <li>Performance in Four-way interleaved memory</li> </ul> <p>CPU - cache - 4 memory banks</p> <p>4 \u4e2a memory bank\uff0c\u4f9d\u6b21\u8fdb\u884c\u8bfb\u53d6\uff0c\u5e76\u884c\u8bbf\u95ee</p> <ul> <li>miss penalty \u4e3a \\(1 + 15 + 4 \\times 1 = 20\\) cycles</li> <li>\u5e26\u5bbd bandwidth \u4e3a \\(\\frac{4 \\times 4}{20} = 0.8\\) words/cycle</li> </ul> </li> </ol>"},{"location":"cs/co/review/#measuring-and-improving-cache-performance","title":"Measuring and improving cache performance","text":""},{"location":"cs/co/review/#measuring-cache-performance","title":"Measuring cache performance","text":"<ul> <li> <p>Average memory access time</p> \\[ \\begin{aligned} \\mathrm{AMAT} &amp;= \\mathrm{hitTime} + \\mathrm{missTime} \\\\ &amp;= \\mathrm{hitRate} \\times \\mathrm{cacheTime} + \\mathrm{missRate} \\times \\mathrm{memoryTime} \\end{aligned} \\] </li> <li> <p>CPU Time = (CPU execution clock cycles + Memory stall clock cycles) \\(\\times\\) clock cycle time</p> </li> <li>Memory stall clock cycles = Number of instructions \\(\\times\\) miss rate \\(\\times\\) miss penalty = read stall cycles + write stall cycles<ul> <li>Read stall cycles = \\(\\displaystyle\\frac{\\text{Reads}}{\\text{Program}} \\times\\) read miss rate \\(\\times\\) read miss penalty</li> <li>Write stall cycles = \\(\\displaystyle\\frac{\\text{Writes}}{\\text{Program}} \\times\\) write miss rate \\(\\times\\) write miss penalty + write buffer stall cycles<ul> <li>\u5982\u679c cache block size \u4e3a\u4e00\u4e2a word\uff0c\u90a3\u4e48 write miss penalty \u4e3a 0</li> </ul> </li> <li> <p>\u5ffd\u7565 write buffer stall cycles \u6709</p> \\[ \\begin{aligned} \\text{Memory stall clock cycles} &amp;= \\frac{\\text{Memory accesses}}{\\text{Program}} \\times \\text{miss rate} \\times \\text{miss penalty} \\\\ &amp;= \\frac{\\text{Instructions}}{\\text{Program}} \\times \\frac{\\text{Misses}}{\\text{Instruction}} \\times \\text{miss penalty} \\end{aligned} \\] </li> </ul> </li> </ul>"},{"location":"cs/co/review/#improving-cache-performance","title":"Improving Cache Performance","text":"<p>\u63d0\u9ad8 cache \u547d\u4e2d\u7387\uff0c\u51cf\u5c0f penalty.</p> <ul> <li>Reducing cache misses by more flexible placement of blocks \u7075\u6d3b\u7684 block \u653e\u7f6e<ul> <li>\u4f7f\u7528 set-associative cache \u66ff\u4ee3 direct-mapped cache</li> </ul> </li> <li>Reducing the miss penalty using multilevel caches \u591a\u7ea7\u7f13\u5b58<ul> <li>\u589e\u52a0 L2 cache</li> </ul> </li> </ul>"},{"location":"cs/co/review/#virtual-memory","title":"Virtual Memory","text":"<p>\u628a\u4e3b\u5b58\u5f53\u4f5c\u78c1\u76d8\u7f13\u5b58\u3002\u91c7\u7528\u5168\u76f8\u8054 LRU \u66ff\u6362\u3002</p> <p>Page Table\uff1a\u5c06\u865a\u62df\u5730\u5740\u6620\u5c04\u5230\u7269\u7406\u5730\u5740</p> <p>\u6bcf\u4e00\u4e2a process \u90fd\u6709\u81ea\u5df1\u7684 page table\uff0c\u548c\u4e00\u4e2a page table base register \u6307\u5411 page table\u3002</p> <p>\u8ba1\u7b97\u9875\u8868\u5927\u5c0f</p> <ul> <li>\u865a\u62df\u5730\u5740 32 \u4f4d</li> <li>\u9875\u5927\u5c0f 4 KB</li> <li>\u9875\u8868\u4e2d\u6bcf\u6761 entry size 4 bytes</li> </ul> <p>\u9875\u8868\u4e2d entry \u4e2a\u6570\u4e3a \\(2^{32} / 2^{12} = 2^{20}\\)\uff0c\u9875\u8868\u5927\u5c0f\u4e3a \\(2^{20} \\times 4 = 4 MB\\)</p>"},{"location":"cs/co/review/#tlb","title":"TLB","text":"<p>Translation Lookaside Buffer\uff0c\u7f13\u5b58 page table entry\u3002\u770b\u4f5c Page table \u7684 cache\uff0c\u4e00\u822c 16-512 entries.</p>"},{"location":"cs/co/review/#io","title":"\u5b58\u50a8\u548c I/O","text":""},{"location":"cs/co/review/#amdahls-law","title":"Amdahl's Law","text":"<p>\u4e32\u884c\u90e8\u5206\u7684\u6bd4\u4f8b\u51b3\u5b9a\u4e86\u52a0\u901f\u7684\u4e0a\u9650\u3002</p> <p>\u591a\u6838\u52a0\u901f</p> <p>100 \u4e2a CPU\uff0c\u8981\u52a0\u901f 90 \u500d\uff0c\u6c42\u4e32\u884c\u90e8\u5206\u6bd4\u4f8b\u3002</p> <p>\\(T_{\\text{new}} = \\frac{T_{\\text{parallelizable}}}{100} + T_{\\text{serial}}\\)</p> \\[ \\begin{aligned} \\text{Speedup} &amp;= \\frac{T_{\\text{parallelizable}} + T_{\\text{serial}}}{\\frac{T_{\\text{parallelizable}}}{100} + T_{\\text{serial}}} \\\\ &amp;= \\frac{1}{\\frac{f_{\\text{parallelizable}}}{100} + (1 - f_{\\text{parallelizable}})} = 90 \\end{aligned} \\] <p>\u89e3\u5f97 \\(f_{\\text{parallelizable}} = 0.999\\)\uff0c\u4e32\u884c\u90e8\u5206\u6bd4\u4f8b\u4e3a 0.1%</p>"},{"location":"cs/co/review/#accesse-time","title":"Accesse Time","text":"<ul> <li>Seek Time\uff1a\u5bfb\u9053\u65f6\u95f4\uff0c\u78c1\u5934\u79fb\u52a8\u5230\u76ee\u6807\u78c1\u9053\u7684\u65f6\u95f4</li> <li>Rotational Latency\uff1a\u65cb\u8f6c\u5ef6\u8fdf\uff0c\u7b49\u5f85\u76ee\u6807\u6570\u636e\u65cb\u8f6c\u5230\u78c1\u5934\u4e0b\u7684\u65f6\u95f4</li> <li>Transfer Time\uff1a\u4f20\u8f93\u65f6\u95f4\uff0c\u8bfb\u53d6\u6570\u636e\u7684\u65f6\u95f4</li> <li>Controller Time\uff1a\u63a7\u5236\u5668\u65f6\u95f4\uff0c\u5904\u7406\u6570\u636e\u7684\u65f6\u95f4</li> </ul> <p>\u603b\u7684\u8bbf\u95ee\u65f6\u95f4\u4e3a\u4e0a\u8ff0\u56db\u8005\u4e4b\u548c\u3002</p>"},{"location":"cs/co/review/#flash-memory","title":"Flash Memory","text":"<p>\u4e0d\u6613\u5931\u6027\u5b58\u50a8\u5668\uff0c\u8bfb\u53d6\u901f\u5ea6\u5feb</p> <ul> <li>NOR Flash\uff1a\u968f\u673a\u8bfb\u53d6\uff0c\u4f5c\u4e3a\u6307\u4ee4\u5b58\u50a8</li> <li>NAND Flash\uff1a\u4ee5\u5757\u4e3a\u5355\u4f4d\u8bfb\u53d6\uff0c\u4f5c\u4e3a\u6570\u636e\u5b58\u50a8</li> </ul>"},{"location":"cs/co/review/#dependablity","title":"Dependablity","text":"<p>\u53ef\u9760\u6027</p> <ul> <li>MTTF\uff1aMean Time To Failure\uff0c\u5e73\u5747\u65e0\u6545\u969c\u65f6\u95f4</li> <li>MTTR\uff1aMean Time To Repair\uff0c\u5e73\u5747\u4fee\u590d\u65f6\u95f4</li> <li>MTBF\uff1aMean Time Between Failure\uff0c\u5e73\u5747\u6545\u969c\u95f4\u9694 = MTTF + MTTR</li> </ul> <p>\u53ef\u7528\u65f6\u95f4\u4e3a \\(\\frac{MTTF}{MTTF + MTTR}\\)</p>"},{"location":"cs/co/review/#redundant-arrays-of-inexpensive-disks","title":"Redundant Arrays of Inexpensive Disks","text":"<p>\u78c1\u76d8\u9635\u5217\uff0c\u80fd\u591f\u540c\u65f6\u8bbf\u95ee</p> <ul> <li>RAID 0\uff1a\u6570\u636e\u5206\u5757\u5b58\u50a8\uff0c\u63d0\u9ad8\u8bfb\u5199\u901f\u5ea6</li> <li>RAID 1\uff1a\u6bcf\u4e00\u4e2a\u76d8\u7684\u6570\u636e\u90fd\u6709\u5907\u4efd\uff0c\u5199\u7684\u65f6\u5019\u540c\u65f6\u5199\u5165\u4e24\u4e2a\u76d8</li> <li>RAID 3\uff1a\u5bf9\u6570\u636e\u76d8\u4e0a\u7684\u6570\u636e\u4f4d\u8fdb\u884c\u5947\u5076\u6821\u9a8c\uff0c\u5b58\u50a8\u5728\u53e6\u4e00\u4e2a\u76d8\u4e0a\uff0c\u4f46\u6545\u969c\u65f6\u4e0d\u77e5\u9053\u5177\u4f53\u662f\u54ea\u4e00\u4e2a\u76d8\u51fa\u4e86\u95ee\u9898</li> <li>RAID 4\uff1a\u6bcf\u4e2a\u76d8\u7684\u6821\u9a8c\u4f4d\u6ca1\u6709\u4f9d\u8d56\u5173\u7cfb\uff0c\u51fa\u9519\u65f6\u53ef\u4ee5\u77e5\u9053\u5177\u4f53\u662f\u54ea\u4e00\u4e2a\u76d8\u51fa\u4e86\u95ee\u9898</li> <li>RAID 5\uff1a\u5c06\u6821\u9a8c\u4f4d\u5206\u6563\u5b58\u50a8\u5728\u6240\u6709\u76d8\u4e0a\uff0c\u63d0\u9ad8\u8bfb\u5199\u901f\u5ea6</li> <li>RAID 6\uff1a\u4e24\u4e2a\u6821\u9a8c\u4f4d\uff0c\u63d0\u9ad8\u5bb9\u9519\u80fd\u529b\uff0c\u4f46\u662f\u5199\u5165\u901f\u5ea6\u6162</li> </ul>"},{"location":"cs/co/review/#bus","title":"Bus","text":"<p>Synchronous vs. Asynchronous</p> <ul> <li>Synchronous \u540c\u6b65\u603b\u7ebf\uff1a\u6240\u6709\u8bbe\u5907\u9891\u7387\u4e00\u81f4</li> <li> <p>Asynchronous \u5f02\u6b65\u603b\u7ebf\uff1a\u4f7f\u7528 handshake \u534f\u8bae</p> <p>\u8bfb\u6570\u636e\u65f6\uff1a</p> <ol> <li>CPU \u62c9\u8d77 read request\uff0c\u5e76\u5c06\u5730\u5740\u653e\u5728 data bus \u4e0a</li> <li>\u8bbe\u5907\u63a5\u6536\u5230 read request\uff0c\u8bfb\u53d6 data bus \u4e0a\u7684\u5730\u5740\uff0c\u62c9\u8d77 ack \u4fe1\u53f7\u8868\u793a\u6536\u5230 read request</li> <li>CPU \u6536\u5230 ack \u4fe1\u53f7\uff0c\u590d\u4f4d read request\uff0c\u7b49\u5f85\u6570\u636e\uff1b\u5185\u5b58\u770b\u5230 read request \u590d\u4f4d\uff0c\u5c06 ack \u4fe1\u53f7\u62c9\u4f4e</li> <li>\u8bbe\u5907\u8bfb\u51fa\u6570\u636e\uff0c\u653e\u5728 data bus \u4e0a\uff0c\u62c9\u8d77 data ready \u4fe1\u53f7</li> <li>CPU \u770b\u5230 data ready \u4fe1\u53f7\uff0c\u8bfb\u53d6 data bus \u4e0a\u7684\u6570\u636e\uff0c\u62c9\u8d77 ack \u4fe1\u53f7\u8868\u793a\u6536\u5230\u6570\u636e</li> <li>\u8bbe\u5907\u6536\u5230 ack \u4fe1\u53f7\uff0c\u590d\u4f4d data ready \u4fe1\u53f7\uff1bCPU \u770b\u5230 data ready \u4fe1\u53f7\u590d\u4f4d\uff0c\u5c06 ack \u4fe1\u53f7\u62c9\u4f4e</li> </ol> </li> </ul>"},{"location":"cs/co/review/#performance","title":"Performance","text":"<p>\u5e26\u5bbd bandwidth = \u6570\u636e\u4f20\u8f93\u91cf / \u4f20\u8f93\u65f6\u95f4</p> <ul> <li>Increasing data bus width</li> <li>Use separate address and data lines</li> <li>transfer multiple words</li> </ul>"},{"location":"cs/co/review/#io_1","title":"I/O","text":"<p>CPU \u901a\u8fc7 I/O \u5730\u5740\u8bbf\u95ee\u8bbe\u5907\uff08\u8fd9\u4e2a\u5730\u5740\u4e0d\u80fd\u8fdb\u5165 cache\uff0c\u8981\u4fdd\u6301\u6700\u65b0\uff09</p> <p>\u4ea4\u4e92\u65b9\u5f0f\uff1a</p> <ul> <li>Polling\uff1aCPU \u4e0d\u65ad\u67e5\u8be2\u8bbe\u5907\u72b6\u6001</li> <li>Interrupts\uff1a\u8bbe\u5907\u5b8c\u6210\u540e\u53d1\u9001\u4e2d\u65ad\u4fe1\u53f7\u7ed9 CPU</li> <li>DMA\uff1a\u76f4\u63a5\u5185\u5b58\u8bbf\u95ee\uff0c\u8bbe\u5907\u76f4\u63a5\u8bbf\u95ee\u5185\u5b58\uff0c\u4e0d\u9700\u8981 CPU \u53c2\u4e0e</li> </ul>"},{"location":"cs/computer_logic/","title":"\u8ba1\u7b97\u673a\u903b\u8f91\u8bbe\u8ba1\u57fa\u7840","text":"<p>Info</p> <p>\u672c\u6587\u6863\u4e3a\u8ba1\u7b97\u673a\u903b\u8f91\u8bbe\u8ba1\u57fa\u7840\u7684\u5b66\u4e60\u7b14\u8bb0\uff0c\u6388\u8bfe\u6559\u5e08\u4e3a \u8463\u4e9a\u6ce2 \u3002</p> <p>\u5b9e\u9a8c\u62a5\u544a</p> <ul> <li>\u6570\u5b66\u57fa\u7840<ul> <li>\u5e03\u5c14\u4ee3\u6570</li> <li>\u903b\u8f91\u4ee3\u6570\u57fa\u7840</li> </ul> </li> <li>\u5355\u5143\u7535\u8def<ul> <li>\u903b\u8f91\u95e8\u7535\u8def\u3001\u89e6\u53d1\u5668</li> <li>\u6027\u80fd\u5206\u6790\u548c\u5e94\u7528</li> </ul> </li> <li>\u7ec4\u5408\u903b\u8f91\u7535\u8def\u7684\u5206\u6790\u3001\u8bbe\u8ba1\u4e0e\u5e94\u7528</li> <li>\u65f6\u5e8f\u903b\u8f91\u7535\u8def\u7684\u5206\u6790\u3001\u8bbe\u8ba1\u4e0e\u5e94\u7528</li> <li>\u6570\u5b57\u786c\u4ef6\u5b9e\u73b0</li> <li>\u5bc4\u5b58\u5668\u548c\u5bc4\u5b58\u5668\u4f20\u8f93</li> <li>\u5185\u5b58\u57fa\u7840</li> </ul> Quiz 1 <p></p> Quiz 2 <p></p> Quiz 3 <p></p> Quiz 4 <p></p> <p></p>"},{"location":"cs/computer_logic/chapter1/","title":"Digital Systems and Information","text":""},{"location":"cs/computer_logic/chapter1/#digital-systems","title":"Digital Systems \u6570\u5b57\u7cfb\u7edf","text":"<p>Discrete Information Processing System \u79bb\u6563\u4fe1\u606f\u5904\u7406\u7cfb\u7edf</p> <p>\u63a5\u53d7\u79bb\u6563\u8f93\u5165\uff0c\u4ea7\u751f\u79bb\u6563\u8f93\u51fa\u3002</p> <p>System State \u4fdd\u5b58\u72b6\u6001\uff08\u5185\u5b58\uff09</p>"},{"location":"cs/computer_logic/chapter1/#type-of-digital-systems","title":"Type of Digital Systems","text":"<ul> <li>No state present \u6ca1\u6709\u72b6\u6001\u7684\u7cfb\u7edf</li> </ul> <p>\u7ec4\u5408\u903b\u8f91\u7cfb\u7edf Combinational Logical System</p> <p>Output = F(Input)</p> <ul> <li>State system</li> </ul> <p>\u5206\u7c7b\u4f9d\u636e\uff1a\u72b6\u6001\u66f4\u65b0\u65f6\u673a</p> <ul> <li> <p>State update at discrete times</p> <p>Synchronous Sequential System \u540c\u6b65\u65f6\u5e8f\u7cfb\u7edf</p> </li> <li> <p>State updated at any times</p> <p>Asyn Sequential System \u5f02\u6b65\u65f6\u5e8f\u7cfb\u7edf</p> </li> </ul> <p>\u72b6\u6001\u66f4\u65b0 State = F(State, Input)</p> <p>\u8f93\u51fa Output = F(State) or F(State, Input)</p> <p>Computer: Syn, \u4e3b\u9891\uff1a\u66f4\u65b0\u72b6\u6001\u9891\u7387</p> <ul> <li>Embedded System \u5d4c\u5165\u5f0f\u7cfb\u7edf</li> </ul> <p>\u8f93\u5165\u8f93\u51fa\u901a\u5e38\u548c\u7269\u7406\u4e16\u754c\u76f4\u63a5\u76f8\u8fde\uff0c\u5982\u6536\u97f3\u3001\u4f20\u611f\u5668\u3002</p> <p>\u6a21\u62df\u4fe1\u53f7-&gt;\u6570\u5b57\u4fe1\u53f7</p> <ol> <li>\u5468\u671f\u91c7\u6837\uff08\u9999\u519c\u91c7\u6837\u5b9a\u7406\uff1a\u91c7\u6837\u9891\u7387\u9ad8\u4e8e\u4fe1\u53f7\u6700\u9ad8\u9891\u7387\u7684\u4e24\u500d\u4ee5\u4e0a\uff09</li> <li>\u91cf\u5316\uff1a\u4e8c\u8fdb\u5236\u5e8f\u5217\u91cf\u5316\uff080-5V \u5185\u5206\u4e3a 16 \u4efd\uff0c\u7528\u4e8c\u8fdb\u5236\u8868\u793a\uff09</li> </ol> <p>Signal Examples Over Time</p> <ol> <li>Analog \u6a21\u62df\u4fe1\u53f7: Continuous in value &amp; time</li> <li>Digital \u6570\u5b57\u4fe1\u53f7: Syn \u540c\u6b65\u3001Asyn \u5f02\u6b65</li> </ol> <p>Threshold Region \u566a\u58f0\u5bb9\u9650\uff1a\u589e\u52a0\u4f20\u8f93\u8fc7\u7a0b\u6297\u5e72\u6270\u80fd\u529b</p>"},{"location":"cs/computer_logic/chapter1/#binary-arithmetic","title":"Binary Arithmetic","text":"<ul> <li> <p>Addition   Carries</p> </li> <li> <p>Subtraction   Borrows</p> </li> <li> <p>Multiplication</p> </li> <li> <p>Convert   \u9664\u4ee5 base \u53d6\u6574</p> </li> </ul>"},{"location":"cs/computer_logic/chapter1/#binary-coding","title":"Binary Coding","text":"<p>\u4e8c\u8fdb\u5236\u7f16\u7801</p> <ul> <li> <p>\u975e\u6570\u503c\u7f16\u7801 Non-numeric   \u4e0d\u8868\u793a\u6570\u503c\uff08\u8868\u793a\u989c\u8272\u3001\u7b26\u53f7\u7b49\uff09</p> </li> <li> <p>\u6570\u503c\u7f16\u7801 Numeric</p> </li> <li>8,4,-2,-1 Code \u6bcf\u4e00\u4f4d\u6709\u4f4d\u6743\u3002</li> <li>Excess 3 Code</li> </ul> <p>\u6bcf\u4e2a\u6570\u5b57\u6982\u7387\u76f8\u540c\uff0c1 \u51fa\u73b0\u7684\u6982\u7387\u76f8\u540c</p> <ul> <li> <p>BCD \u7801\uff088,4,2,1 Code\uff09     \u6bcf\u4e00\u5341\u8fdb\u5236\u6570\u4f4d\u7528\u4e8c\u8fdb\u5236\u8868\u793a     \u4f18\u70b9\uff1a\u548c\u4eba\u4ea4\u4e92\u66f4\u76f4\u89c2</p> </li> <li> <p>BCD Arithmentic   \u8fdb\u4f4d\uff1a8 + 4 = 13 &gt; 9   13 + 6 -&gt; 1101 + 6 -&gt; 10011 -&gt; 10000 + 3</p> </li> <li> <p>ASCII Code   7 \u4f4d\u4e8c\u8fdb\u5236   '0'-&gt;0x30   'A'-&gt;0x41   'a'-&gt;0x61</p> </li> </ul>"},{"location":"cs/computer_logic/chapter1/#parity-bit-error-detection-codes","title":"Parity Bit Error-Detection Codes","text":"<p>\u68c0\u6d4b\u4f20\u8f93\u4fe1\u606f\u6b63\u786e\u6027 Error Detection.</p> <p>\u539f\u7406\uff1a\u5197\u4f59\u4fe1\u606f Redundancy</p> <p>\u5947\u5076\u6821\u68c0\u7801\uff0c\u5728\u672b\u5c3e\u589e\u52a0\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\uff0c\u4fdd\u8bc1\u6574\u4f53 1 \u7684\u4e2a\u6570\u5947\u5076\u6027\u4e00\u81f4\u3002\u63a5\u6536\u7aef\u5224\u65ad 1 \u7684\u5947\u5076\u3002(odd parity and even parity)</p>"},{"location":"cs/computer_logic/chapter1/#gray-code","title":"Gray Code \u683c\u96f7\u7801","text":"<p>\u76f8\u90bb\u4e24\u6570\u4e4b\u95f4\u4e00\u4f4d\u4e0d\u540c\u3002</p> <p>\u65cb\u8f6c\u7f16\u7801\u5668</p> <p>\u5149\u4f20\u611f\u5668\u63a5\u6536\uff0c\u907f\u514d\u51fa\u73b0\u4e2d\u95f4\u7ed3\u679c\uff0c\u6bcf\u6b21\u5230\u8fbe\u4e0b\u4e00\u4e2a\u72b6\u6001\u53ea\u4f1a\u53d8\u4e00\u4f4d\u3002</p>"},{"location":"cs/computer_logic/chapter1/#unicode","title":"UNICODE","text":"<p>16-bit (2-byte)</p>"},{"location":"cs/computer_logic/chapter2/","title":"Combinational Logic Circuits","text":""},{"location":"cs/computer_logic/chapter2/#gate-circuits-and-boolean-equations","title":"Gate Circuits and Boolean Equations","text":""},{"location":"cs/computer_logic/chapter2/#binary-logic-and-gates","title":"Binary Logic and Gates","text":"<p>Binary Variables 1/0, true/false, on/off</p> <p>Logical Operations</p> <ul> <li><code>AND</code> (\\(\\cdot\\))</li> <li><code>OR</code> (+)</li> <li><code>NOT</code> (\\(\\bar A\\) or \\(A'\\) or ~\\(A\\))</li> <li><code>XOR</code> </li> </ul> <p>Truth tables a tabular listing of the values of a function for all possible combinations of values on its arguments.</p> <p>Logic Function Implementation</p> <p>Using Switches \u5f00\u5173\u7535\u8def</p> <p>Logic Gates</p> <p>\u7ee7\u7535\u5668 (relay) \u5b9e\u73b0\u5f00\u5173\u3002\u4e0d\u53ef\u9760\uff0c\u5bff\u547d\u6709\u9650\uff0c\u4f53\u79ef\u5927</p> <p>\u7535\u5b50\u7ba1 (vacuum rube) \u5b9e\u73b0\u5f00\u5173\u3002\u9700\u8981\u9884\u70ed\uff0c\u4f53\u79ef\u5927\uff0c\u5bff\u547d\u6709\u9650</p> <p>\u534a\u5bfc\u4f53 (transistor) \u5b9e\u73b0\u5f00\u5173\u3002</p> \u534a\u5bfc\u4f53 <p>\u5bfc\u7535\u7279\u6027\u5904\u4e8e\u5bfc\u4f53\u548c\u7edd\u7f18\u4f53\u4e4b\u95f4\u3002</p> <p>\u5206\u7c7b</p> <ul> <li> <p>\u672c\u5f81\u534a\u5bfc\u4f53</p> <p>\u4e0d\u542b\u6742\u8d28\u4e14\u5177\u6709\u6676\u4f53\u7ed3\u6784\u7684\u534a\u5bfc\u4f53</p> <p>T = 0K \u65f6\uff0c\u4e0d\u5bfc\u7535</p> </li> <li> <p>\u6742\u8d28\u534a\u5bfc\u4f53</p> <ul> <li> <p>N \u578b\u534a\u5bfc\u4f53 (Negative)</p> <p>\u63ba\u5165 5 \u4ef7\u539f\u5b50\uff0c\u5b58\u5728\u81ea\u7531\u7535\u5b50</p> </li> <li> <p>P \u578b\u534a\u5bfc\u4f53 (Positive)</p> <p>\u63ba\u5165 3 \u4ef7\u539f\u5b50\uff0c\u5b58\u5728\u7535\u5b50\u7a7a\u7f3a</p> </li> </ul> </li> </ul> <p>PN \u7ed3</p> <p>\u4e00\u4fa7 P \u578b\uff0c\u4e00\u4fa7 N \u578b\uff0c\u4ea4\u754c\u5904\u5f62\u6210 PN \u7ed3\uff0c\u4e2d\u95f4\u7535\u5b50\u548c\u7a7a\u7a74\u7ed3\u5408\u3002</p> <ul> <li>\u5916\u52a0\u6b63\u5411\u7535\u538b\uff08\u548c\u5185\u90e8\u7535\u538b\u76f8\u53cd\uff09\uff0cPN \u7ed3\u88ab\u8017\u5c3d\u540e\u7535\u6d41\u5bfc\u901a</li> <li>\u5916\u52a0\u53cd\u5411\u7535\u538b\uff0cPN \u7ed3\u6269\u5927\uff0c\u7535\u6d41\u66f4\u5c0f\u3002\u9971\u548c\u7535\u6d41\u968f\u6e29\u5ea6\u5347\u9ad8\u800c\u53d8\u5316\u3002</li> </ul> <p>\u4f0f\u5b89\u7279\u6027\u66f2\u7ebf\uff1a</p> <p></p> \u4e09\u6781\u7ba1 <p>\u534a\u5bfc\u4f53\u4e09\u6781\u7ba1\u3001\u6676\u4f53\u4e09\u6781\u7ba1\u3002</p> <p>\u5206\u7c7b</p> <ul> <li> <p>NPN \u578b</p> <p></p> <p>\u653e\u5927\u7279\u6027\uff1a\\(I_b = \\beta I_c\\)</p> <p>\u53ef\u770b\u4e3a\u53c8\u57fa\u6781\u63a7\u5236\u7684\u5f00\u5173\uff0c\u57fa\u6781\u7535\u6d41\u5f88\u5c0f\u770b\u4f5c\u65ad\u5f00\uff0c\u7535\u6d41\u5f88\u5927\u770b\u4f5c\u95ed\u5408\u3002</p> </li> <li> <p>PNP \u578b</p> <p></p> </li> </ul> <p>CMOS Circuits \u7535\u538b\u63a7\u5236</p> <p>\u4e0a\u9762 PMOS \u7ba1\uff0c\u5e38\u95ed\uff1b\u4e0b\u9762 NMOS \u7ba1\uff0c\u5e38\u5f00\u3002</p> <p>\u4e0e\u975e(NAND)\u548c\u6216\u975e(NOR)\u95e8\uff08\u80fd\u591f\u6784\u9020\u51fa\u6240\u6709\u903b\u8f91\u5173\u7cfb\uff09</p> <p>\u8f93\u5165\u6bb5\u53ef\u63a5\u5728\u4e00\u8d77\uff0c\u8f93\u51fa\u7aef\u4e0d\u80fd\u63a5\u5728\u4e00\u8d77\uff0c\u53ef\u80fd\u77ed\u8def\u3002</p> <p>Logical Gate Symbols</p> <p>Waveform Behavior in Time</p> <p>Gate Delay</p> <p>\u9650\u5236\u6700\u9ad8\u5de5\u4f5c\u9891\u7387\u3002</p> <p>Logic Diagrams and Expressions</p> <p>\u771f\u503c\u8868\u552f\u4e00\uff0c\u903b\u8f91\u51fd\u6570\u548c\u903b\u8f91\u7535\u8def\u56fe\u6709\u5f88\u591a\u53d8\u5f62\u3002</p>"},{"location":"cs/computer_logic/chapter2/#bool-algebra","title":"Bool Algebra","text":"<p>\u91cd\u70b9\uff1a\\(X + YZ = (X + Y)(X + Z)\\)</p> <p>\u5bf9\u5076\uff1a\u4e0e\u53d8\u6216\uff0c\u6216\u53d8\u4e0e\uff0c0 \u53d8 1 \uff0c\u4f18\u5148\u7ea7\u4e0d\u53d8\uff0c\u975e\u4e0d\u53d8\u3002</p> Boolean Algebraic Proof 1 <p></p> Boolean Algebraic Proof 2 \\[ AB + \\bar A C + BC = AB + \\bar A C \\] \\[ \\begin{align}     AB + \\bar A C + BC &amp;= AB + \\bar A C + BC(A + \\bar A) \\\\                        &amp;= A(B+BC) + \\bar A(C+BC) \\\\                        &amp;= AB + \\bar A C \\end{align} \\] Boolean Algebraic Proof 3 \\[ \\bar{(X+Y)}Z +X\\bar Y = \\bar Y(X+Z) \\] \\[ \\begin{align}     \\bar{(X+Y)}Z +X\\bar Y &amp;= \\bar X \\bar Y Z + X \\bar Y \\\\                           &amp;= \\bar Y (\\bar X Z + X) \\\\                           &amp;= \\bar Y (X + \\bar X)(X + Z) \\\\                           &amp;= \\bar Y(X+Z) \\end{align} \\] <p>Useful Theorems</p> <ul> <li>Minimization: \\(x \\cdot y + \\bar x \\cdot y = y, (x + y)(\\bar x + y) = y\\)</li> <li>Absorption: \\(x + xy = x, x(x+y) = x\\) </li> <li>Simplification: \\(x + \\bar x y = x + y, x(\\bar x + y) = xy\\)</li> <li>Consensus: \\(xy + \\bar xz + yz = xy + \\bar xz\\) \\((x+y)(\\bar x+z)(y+z) = (x+y)(\\bar x+z)\\)</li> <li>DeMorgan's Law: \\(\\overline{x + y} = \\bar x\\bar y, \\overline{xy} = \\bar x + \\bar y\\)</li> </ul> <p>Expression Simplification \u51cf\u5c11\u5ef6\u8fdf\uff0c\u964d\u4f4e\u6210\u672c</p>"},{"location":"cs/computer_logic/chapter2/#standard-forms","title":"Standard Forms","text":"<p>Canonical Forms in common usage:</p> <ul> <li>SOM: Sum of Minterms</li> <li>POM: Product of Maxterm</li> </ul>"},{"location":"cs/computer_logic/chapter2/#minterms-and-maxterms","title":"Minterms and Maxterms","text":"<ul> <li>Minterm: <code>AND</code> terms with every variable present in either true or complemented form.</li> <li>Maxterm: <code>OR</code> terms with every variable in true or complemented form.</li> </ul> <p>Index of minterms and maxterms</p> <p>The index for the minterm or maxterm, expressed as a binary number, is used to determine whether the variable is shown in the true form or complemented form.</p> <p>For Minterms:</p> <ul> <li>\"1\" means the variable is \"Not Complemented\" (\\(x\\))</li> <li>\"0\" means the variable is \"Complemented\" (\\(\\bar x\\))</li> </ul> <p>For Maxterms, the situation is opposite.</p> <p>Use subscript to show index and \"m\" for Minterm, \"M\" for Maxterm. \\(M_i = \\bar m_i\\).</p> <p>Function Tables for both</p>"},{"location":"cs/computer_logic/chapter2/#canonical-forms","title":"Canonical Forms","text":"<p>Canonical Sum of Minterms</p> <ul> <li>For the function table, the minterms used are the terms corresponding to the 1's</li> <li>For expressions, expand all terms first to explicitly list all minterms. Do this by \"ANDing\" any term missing a variable v with a term \\(v + \\bar v\\)</li> </ul> <p>Example</p> <p>Implement \\(f = x + \\bar x \\bar y\\) as a SOM.</p> <ul> <li>\\(f = x (y + \\bar y) + \\bar x \\bar y\\)</li> <li>\\(f = xy + x \\bar y + \\bar x \\bar y\\)</li> <li>\\(f = m_3 + m_2 + m_0\\) or \\(f(x, y, z) = \\sum_m(0, 2, 3)\\)</li> </ul> <p>Canonical Product of Maxterms</p> <ul> <li>For the function table, the maxterms used are the terms corresponding to the 0's</li> <li>For expressions, expand all terms first to explicitly list all maxterms. Do this by \"ORing\" any term missing a variable v with a term \\(v \\bar v\\)</li> </ul> <p>Example</p> <p>Implement \\(f = x + \\bar x \\bar y\\) as a POM.</p> <ul> <li>\\(f(x, y, z) = (x + bar x)(x + \\bar y) = x + \\bar y\\)</li> <li>\\(f = x + \\bar y + 0 = x + \\bar y + z \\bar z\\)</li> <li>\\(f = (x + \\bar y + z)(x + \\bar y + \\bar z)\\)</li> <li>\\(f = M_2 M_3 = \\prod_M (2, 3)\\)</li> </ul> <p>Function Complements</p> <p>The complement of a function expressed as a sum of minterms is constructed by selecting the minterms missing in the sum-of-minterms canonical forms.</p> <p>Minterm \u548c Maxterm \u5728\u771f\u503c\u8868\u4e2d\u9009\u62e9\u7684\u9879\u4e92\u8865\uff0c\u53ef\u4ee5\u901a\u8fc7 SOM \u63a8\u7b97\u51fa POM\u3002</p> <p>Note</p> <p>Method to get maxterm.</p> <p>\u5148\u5316\u6210 SOM\uff0c\u518d\u9009\u53d6\u4e92\u8865\u7684\u9879\u7b97\u51fa POM\u3002</p> <ul> <li>\\(F(x, y, z) = \\sum_m(1,3,5,7)\\)</li> <li>\\(F(x,y,z) = \\prod_M(0,2,4,6)\\)</li> </ul> <p>Standard Forms</p> <ul> <li>Standard Sum-of-Products (SOP) form: equations are written as an OR of AND terms</li> <li>Standard Product-of-Sums (POS) form: equations are written as an AND of OR terms</li> </ul> <p>SOP and POS are two-level network of gates. \u4e00\u7ea7\u6216\u95e8\u518d\u4e00\u7ea7\u4e0e\u95e8\uff08\u6216\u8005\u76f8\u53cd\uff09\uff0c\u6700\u5c11\u5c42\u6b21\u7684\u7535\u8def\u5b9e\u73b0\u65b9\u6cd5\u3002</p> <p>\u76ee\u7684\uff1a\u51cf\u5c11\u5ef6\u8fdf\u3001\u6210\u672c\u3002</p>"},{"location":"cs/computer_logic/chapter2/#circuit-optimization","title":"Circuit Optimization","text":"<p>Goal: To obtain the simplest implementation for a given function.</p> <p>Requires a cost criterion to measure the simplicity of a circuit.</p>"},{"location":"cs/computer_logic/chapter2/#two-level-optimization","title":"Two-Level Optimization","text":"<p>Cost criteria:</p> <ul> <li>\\(L\\) - Literal cost</li> <li>\\(G\\) - Gate input cost</li> <li>\\(GN\\) - Gate input cost with NOTs</li> </ul>"},{"location":"cs/computer_logic/chapter2/#literal-cost","title":"Literal Cost","text":"<p>The number of literal appearances in a Boolean expression corresponding to the logic circuit diagram.</p> <p>\u5f0f\u4e2d\u53d8\u91cf\u603b\u4e2a\u6570\u5373\u4e3a Literal Cost.</p>"},{"location":"cs/computer_logic/chapter2/#gate-input-cost","title":"Gate Input Cost","text":"<p>The number of inputs to the gates in the implementation corresponding exactly to the given equation or equations.</p> <p>Consist of:</p> <ul> <li>All literal appearances</li> <li>The number of terms excluding single literal terms (G)</li> <li>Optionally, the number of distinct complemented single literals (GN)</li> </ul> <p>Example</p> <ul> <li>\\(F = BD + A\\bar BC + A\\bar C \\bar D \\qquad L = 8, G = 11, GN = 14\\)</li> <li>\\(F = (A +\\bar B)(A + D)(B + C + \\bar D)(\\bar B + \\bar C + D) \\qquad L = 10, G = 14, GN = 18\\)</li> </ul> <p>Cost Criteria</p> <p> </p>"},{"location":"cs/computer_logic/chapter2/#map-manipulation","title":"Map Manipulation","text":"<p>Karnaugh Maps(K-map)</p> <p>A K-map is a collection of squares</p> <ul> <li>Each square represents a minterm</li> <li>The collection of squares is a graphical representation of a Boolean function</li> <li>Adjacent squares differ in the value of one variable</li> <li>Alternative algebraic expressions for the same function are derived by recognizing patterns of squares</li> </ul>"},{"location":"cs/computer_logic/chapter2/#two-variable-maps","title":"Two Variable Maps","text":"<p>K-Map Function Representation</p> <p>\\(F(x,y) = x\\bar y + xy\\)</p> <p></p> <p>Then \\(F(x,y) = x\\bar y + xy = x\\)</p>"},{"location":"cs/computer_logic/chapter2/#three-variable-maps","title":"Three Variable Maps","text":"<p>Note</p> <p>Topological warps of 3-variable K-maps that show all adjacencies:</p> <p></p>"},{"location":"cs/computer_logic/chapter2/#four-variable-maps","title":"Four Variable Maps","text":"<p>Example Shapes of Rectangles (WXYZ)</p>"},{"location":"cs/computer_logic/chapter2/#five-variable-or-more-k-maps","title":"Five Variable or More K-Maps","text":"<p>For five variable problems, we use two adjacent K-maps.(VWXYZ)</p>"},{"location":"cs/computer_logic/chapter2/#dont-cares-in-k-maps","title":"Don't Cares in K-Maps","text":"<p>\u53ef\u80fd\u6709\u65e0\u5173\u9879\uff0c\u8f93\u5165\u65e0\u5173\u8f93\u5165\u7ec4\u5408\u65f6\uff0c\u8f93\u51fa\u662f 0 \u662f 1 \u90fd\u65e0\u6240\u8c13\u3002\u5728 K-map \u4e2d\u7528 <code>x</code> \u8868\u793a\uff0c\u53ef\u753b\u5165\u4e5f\u53ef\u4e0d\u753b\u5165\u5361\u8bfa\u5708\u4e2d\uff08\u53d6\u51b3\u4e8e\u662f\u5426\u80fd\u5316\u5230\u6700\u7b80\uff09</p> <p>Example</p> <p>\\(F(A,B,C,D) = \\sum_m(3,9,11,12,13,14,15) + \\sum_d(1,4,6)\\)</p> <ul> <li>Find the optimum SOP solution    \\(F = AB + \\bar BD\\)</li> <li>Find the optimum POS solution    \\(F = (B + D)(A + \\bar B)\\)</li> </ul>"},{"location":"cs/computer_logic/chapter2/#systematic-simplification","title":"Systematic Simplification","text":"<p>A Prime Implicant (\u8d28\u8574\u6db5\u9879) is a product term obtained by combining the maximum possible number of adjacent squares in the map into a rectangle with the number of squares a power of 2.</p> <p>A prime implicant is called an Essential Prime Implicant if it is the only prime implicant that covers (includes) one or more minterms.</p> <p>\u8d28\u8574\u6db5\u9879\u662f\u80fd\u591f\u6846\u4f4f\u67d0\u4e2a <code>1</code> \u7684\u6700\u5927\u5361\u8bfa\u5708\u3002\u5bf9\u67d0\u4e2a <code>1</code> \u800c\u8a00\u5982\u679c\u5b83\u7684\u8d28\u8574\u6db5\u9879\u53ea\u6709\u4e00\u4e2a\uff0c\u90a3\u4e48\u5b83\u662f\u5fc5\u8981\u7684\u3002</p> <p>Example</p> <p></p>"},{"location":"cs/computer_logic/chapter2/#multi-level-circuit-optimization","title":"Multi-Level Circuit Optimization","text":"<p>\u4e8c\u7ea7\u95e8\u4f20\u8f93\u5ef6\u8fdf\u6700\u5c0f\uff0c\u4f46\u95e8\u8f93\u5165\u6210\u672c\u9ad8\u3002</p> <p>\u591a\u7ea7\u95e8\u4f20\u8f93\u5ef6\u8fdf\u8f83\u9ad8\uff0c\u4f46\u95e8\u8f93\u5165\u6210\u672c\u4f4e\u3002</p> <p>\u5982\u4f55\u8bbe\u8ba1\uff0c\u53d6\u51b3\u4e8e\u9700\u8981\u964d\u4f4e\u4f20\u8f93\u5ef6\u8fdf\u8fd8\u662f\u95e8\u8f93\u5165\u6210\u672c\u3002</p> <p>Transformation Examples</p> <p> \u6700\u540e\u5316\u4e3a\u4e09\u7ea7\u95e8\u7535\u8def\uff0c\u95e8\u8f93\u5165\u6210\u672c\u964d\u4f4e\u3002</p>"},{"location":"cs/computer_logic/chapter2/#additional-gates-and-circuits","title":"Additional Gates and Circuits","text":""},{"location":"cs/computer_logic/chapter2/#integrated-circuits","title":"Integrated Circuits","text":"<p>\u96c6\u6210\u7535\u8def</p> <p>Integrated circuit (informally, a \u201cchip\u201d) is a semiconductor crystal (most often silicon) containing the electronic components for the digital gates and storage elements which are interconnected on the chip.</p> <p>\u5206\u7c7b\uff1a</p>"},{"location":"cs/computer_logic/chapter2/#technology-parameters","title":"Technology Parameters","text":"<ul> <li>Fan-in The number of inputs available on a gate</li> <li>Fan-out The number of standard loads driven by a gate output</li> <li>Logic Levels The signal value ranges for 1 and 0 on the inputs and 1 and 0 on the outputs</li> <li>Noise Margin the maximum external noise voltage superimposed on a normal input value that will not cause an undesirable change in the circuit output</li> <li>Cost for a gate a measure of the contribution by the gate to the cost of the integrated circuit</li> <li>Propagation Delay The time required for a change in the value of a signal to propagate from an input to an output</li> <li>Power Dissipation The amount of power drawn from the power supply and consumed by the gate</li> </ul>"},{"location":"cs/computer_logic/chapter2/#fan-out","title":"Fan-out","text":"<p>The number of standard loads driven by a gate output</p> <p>\u4e00\u4e2a\u95e8\u7684\u8f93\u51fa\u80fd\u5e26\u52a8\u591a\u5c11\u95e8\u7684\u8f93\u5165</p> <p>\u8861\u91cf\u6247\u51fa\u7cfb\u6570\uff1a</p> <p>Transition time - the time required for the gate output to change from H to L, \\(t_{HL}\\), or from L to H, \\(t_{LH}\\)</p> <p>\u5e26\u7684\u95e8\u8d8a\u591a\uff0c\u4e0a\u5347\u4e8b\u4ef6\u5c31\u8d8a\u957f\u3002\u89c4\u5b9a\u4e0a\u5347\u4e0b\u964d\u6700\u5927\u65f6\u95f4\uff0c\u4ece\u800c\u5f97\u51fa maximum fan-out \u6700\u5927\u6247\u51fa\u7cfb\u6570\u3002</p>"},{"location":"cs/computer_logic/chapter2/#cost","title":"Cost","text":"<p>In integrated circuits, chip area, number and size of the transistors, amount of wiring, gate input count</p> <p>\u4e3b\u8981\u7531\u95e8\u8f93\u5165\u6210\u672c\u51b3\u5b9a\u3002</p>"},{"location":"cs/computer_logic/chapter2/#propagation-delay","title":"Propagation Delay","text":"<p>Delay is usually measured at the 50% point with respect to the H and L output voltage levels</p> <p>\u8f93\u5165\u53d8\u5316\u5230\u8f93\u51fa\u53d8\u5316\u7684\u65f6\u95f4\u3002\u901a\u5e38\u4ece\u4e0a\u5347\u6216\u4e0b\u964d 50% \u5904\u5f00\u59cb\u8ba1\u7b97\u3002</p> <ul> <li>High-to-Low \\(t_{PHL}\\) \u8f93\u51fa \u4ece\u9ad8\u7535\u5e73\u5230\u4f4e\u7535\u5e73\u7684\u65f6\u95f4</li> <li>Low-to-High \\(t_{PLH}\\) \u8f93\u51fa \u4ece\u4f4e\u7535\u5e73\u5230\u9ad8\u7535\u5e73\u7684\u65f6\u95f4</li> </ul> <p>Propagation Delay of <code>NOT</code></p> <p></p>"},{"location":"cs/computer_logic/chapter2/#delay-models","title":"Delay Models","text":"<ul> <li>Transport delay \u4f20\u8f93\u5ef6\u8fdf change in the output in response to a change on the inputs occurs after a fixed specified delay</li> <li> <p>Inertial delay \u60ef\u6027\u5ef6\u8fdf similar to transport delay, except that if the input changes such that the output is to change twice in a time interval less than the  rejection time, the output changes do not occur. Models typical electronic circuit behavior, namely, rejects narrow \u201cpulses\u201d on the outputs</p> <p>\u5f88\u5c0f\u7684\u8109\u51b2\u8df3\u53d8\u4f1a\u88ab\u6d88\u9664\u3002</p> </li> </ul> <p>Example</p> <p></p>"},{"location":"cs/computer_logic/chapter2/#circuit-delay","title":"Circuit Delay","text":"<p>Example</p> <p>  \u8003\u8651\u4f20\u8f93\u5ef6\u8fdf\uff0c\u8f93\u51fa\u6ce2\u5f62\u6539\u53d8\u3002</p> <p>\\(S\\) \u7684\u4e24\u6761\u8def\u5f84\u5ef6\u8fdf\u4e0d\u540c\uff0c\\(Y\\) \u5904\u4ea7\u751f\u5c16\u5cf0\uff0c\u79f0\u4e3a\u7535\u8def\u8fdb\u884c\u7684 \u7ade\u4e89\u5192\u9669</p>"},{"location":"cs/computer_logic/chapter2/#fan-out-and-delay","title":"Fan-out and Delay","text":"<p>The fan-out loading a gate\u2019s output affects the gate\u2019s propagation delay</p> <p>standard load: \u5e26\u4e00\u4e2a\u975e\u95e8\u6240\u9700\u8981\u7684\u8d1f\u8f7d\u3002</p> <p>Example</p> <p>One realistic equation for \\(t_{pd}\\) for a NAND gate with 4 inputs is</p> \\[ t_{pd} = 0.07 + 0.021 SL \\text{ns} \\] <p>\\(SL\\): the number of standard loads the gate is driving.</p>"},{"location":"cs/computer_logic/chapter2/#costperformance-tradeoffs","title":"Cost/Performance Tradeoffs","text":"<p>Gate-Level Example</p> <p>NAND gate G with 20 standard loads on its output has a delay of 0.45 ns and has a normalized cost of 2.0.</p> <p>A buffer H has a normalized cost of 1.5. The NAND gate driving the buffer with 20 standard loads gives a total delay of 0.33 ns.</p> <p>In which if the following cases should the buffer be added?</p> <ol> <li>The cost of this portion of the circuit cannot be more than 2.5</li> <li>The delay of this portion of the circuit cannot be more than 0.40 ns</li> <li>The delay of this portion of the circuit must be less than 0.40 ns and the cost less than 3.0</li> </ol> <p>Answer:</p> <ol> <li>No buffer</li> <li>Need buffer</li> <li>Cannot achieve by using buffer or not</li> </ol> <p>Tradeoffs can also be accomplished much higher in the design hierarchy.</p> <p>Constraints on cost and performance have a major role in making tradeoffs.</p>"},{"location":"cs/computer_logic/chapter2/#other-gate-types","title":"Other Gate Types","text":"<ul> <li> <p>Buffer \u7f13\u51b2\u5668 \\(F = X\\)</p> <p>\u4f5c\u7528\uff1a\u6269\u5927\u6247\u51fa\u7cfb\u6570\uff0c\u51cf\u5c11\u4f20\u8f93\u5ef6\u8fdf\uff0c\u63d0\u9ad8\u8d1f\u8f7d\u80fd\u529b\u3002</p> </li> <li> <p>NAND gate \u4e0e\u975e\u95e8 \\(F = \\overline{XY}\\)</p> <p>\u4f5c\u7528\uff1a\u5b9e\u73b0\u4efb\u610f\u903b\u8f91\u51fd\u6570\uff0c\u51cf\u5c11\u95e8\u8f93\u5165\u6210\u672c\u3002</p> </li> <li> <p>NOR gate \u6216\u975e\u95e8 \\(F = \\overline{X + Y}\\)</p> <p>\u5bf9\u5076\u5173\u7cfb</p> </li> <li> <p>Exclusive-OR gate \u5f02\u6216\u95e8 \\(F = X \\oplus Y\\)</p> <p>Exclusive-NOR gate \u5f02\u6216\u975e\u95e8\uff08\u540c\u6216\u95e8\uff09 \\(F = \\overline{X \\oplus Y}\\)</p> <p>\\(X \\oplus Y = X \\bar{Y} + \\bar{X}Y\\), \\(\\overline{X \\oplus Y} = XY + \\bar{X}\\bar{Y}\\)</p> </li> </ul>"},{"location":"cs/computer_logic/chapter2/#exclusive-or-operator-and-gates","title":"Exclusive-OR Operator and Gates","text":"<ul> <li> <p>XOR identities</p> \\[ X \\oplus Y \\oplus Z = \\bar X \\bar Y Z + \\bar X Y \\bar Z + X \\bar Y \\bar Z + XYZ \\] \\[ X \\oplus \\bar Y = \\overline{X \\oplus Y} \\] \\[ X \\oplus 0 = X, X \\oplus 1 = \\bar X \\text{\uff08\u53ef\u63a7\u975e\u95e8\uff09} \\] </li> <li> <p>XOR implementation</p> <p></p> <p></p> </li> <li> <p>Odd and Even Functions</p> <p>Odd Function: \\(F = 1\\) if and only if the index of the minterm has an odd number of 1s</p> <p>Even Function: \\(F = 1\\) if and only if the index of the minterm has an even number of 1s</p> <p>The not of an odd function is an even function, and vice versa.</p> </li> <li> <p>Parity Generators and Checkers \u5947\u5076\u6821\u9a8c</p> <p>Parity Generator: \\(P = X \\oplus Y \\oplus Z\\)</p> <p>Parity Checker: \\(F = X \\oplus Y \\oplus Z \\oplus P\\)</p> </li> </ul>"},{"location":"cs/computer_logic/chapter2/#high-impedance-outputs","title":"High-Impedance Outputs","text":"<p>\u5230 VCC \u548c GND \u7684\u7535\u963b\u90fd\u5f88\u5927\uff0c\u76f8\u5f53\u4e8e\u65ad\u8def\u3002\u7b80\u79f0 <code>Hi-Z</code>\u3002</p> <p>The 3-State Buffer \u771f\u503c\u8868\uff1a</p> Enable Input Output 0 X Hi-Z 1 0 0 1 1 1"},{"location":"cs/computer_logic/chapter3/","title":"Combinational Logic Design","text":""},{"location":"cs/computer_logic/chapter3/#combinational-logic","title":"Combinational Logic","text":""},{"location":"cs/computer_logic/chapter3/#functions-and-functional-blocks","title":"Functions and Functional Blocks","text":"<p>verilog \u4e2d\uff0c\u8c03\u7528\u6a21\u5757\u4f1a\u5728\u7535\u8def\u4e2d\u589e\u52a0\u5b9e\u4f8b\uff0c\u4f1a\u589e\u52a0\u5f00\u9500\u3002</p> <p>verilog \u4e2d\u5e76\u884c\u8fd0\u884c\u3002</p>"},{"location":"cs/computer_logic/chapter3/#multiple-bit-rudiementary-functions","title":"Multiple-bit Rudiementary Functions","text":"<p>A wide line is used to represent a bus (\u603b\u7ebf). The bus can be split into individual lines.</p>"},{"location":"cs/computer_logic/chapter3/#enable-function","title":"Enable Function","text":"<p>\u4e0e\u95e8 + \u975e\u95e8</p>"},{"location":"cs/computer_logic/chapter3/#decoding","title":"Decoding \u8bd1\u7801","text":"<p>the conversion of an n-bit input code to an m-bit output code with \\(n \\leq m \\leq 2^n\\) such that each valid code word produces a unique output code</p> <p>Example:</p> <ul> <li> <p>1-to-2-line decoder</p> <p></p> </li> <li> <p>2-to-4-line decoder</p> <p></p> </li> </ul> <p>\u884c\u5217\u8bd1\u7801\u5668\uff1a\u5c06\u8f93\u5165\u4e0d\u65ad\u4e8c\u5206\uff0c\u4f8b\u5982 4-to-16 \u62c6\u6210 2-to4 \u548c 2-to-4\uff0c\u518d\u5c06 2-to-4 \u62c6\u6210 1-to-2 \u548c 1-to-2\u3002</p>"},{"location":"cs/computer_logic/chapter3/#logic-functions-implementation","title":"Logic Functions Implementation","text":"<p>\u5b9e\u73b0\u4efb\u610f\u903b\u8f91\u51fd\u6570\uff1a\u8bd1\u7801\u5668 + \u6216\u95e8</p> <p>\u8bd1\u7801\u5668\u8f93\u51fa\u662f\u6240\u6709\u6700\u5c0f\u9879\uff0c\u901a\u8fc7\u6216\u95e8\u5b9e\u73b0\u903b\u8f91\u51fd\u6570\u3002</p>"},{"location":"cs/computer_logic/chapter3/#bcd-to-segment-decoder","title":"BCD-to-Segment Decoder","text":"<p>Implement:</p> <ul> <li> <p>Common anode \u5171\u9633\u6781: </p> <ul> <li>\u63a7\u5236\u4eae\uff1aLED \u53e6\u4e00\u7ea7\u63a5\u4f4e\u7535\u5e73(0)</li> <li>\u63a7\u5236\u706d\uff1aLED \u53e6\u4e00\u7ea7\u63a5\u9ad8\u7535\u5e73(1)</li> </ul> </li> <li> <p>Common cathode \u5171\u9634\u6781</p> <ul> <li>\u63a7\u5236\u4eae\uff1aLED \u53e6\u4e00\u7ea7\u63a5\u9ad8\u7535\u5e73(1)</li> <li>\u63a7\u5236\u706d\uff1aLED \u53e6\u4e00\u7ea7\u63a5\u4f4e\u7535\u5e73(0)</li> </ul> </li> </ul>"},{"location":"cs/computer_logic/chapter3/#encoding","title":"Encoding \u7f16\u7801","text":"<p>the conversion of an m-bit input code to an n-bit output code with \\(m \\geq n\\) such that each valid code word produces a unique output code (index to code)</p>"},{"location":"cs/computer_logic/chapter3/#decimal-to-bcd-encoder","title":"Decimal-to-BCD Encoder","text":"<ul> <li>Input: 10 bits (0-9)</li> <li>Output: 4 bits (0000-1001)</li> <li>Function: if input bit \\(D_i\\) is 1, then output \\((A_3, A_2, A_1, A_0)\\) is the BCD code for \\(i\\).</li> </ul> <p>Commonly don't use truth table.</p> <p>Equations:</p> \\[\\begin{align} A_0 &amp;= D_1 + D_3 + D_5 + D_7 + D_9 \\\\ A_1 &amp;= D_2 + D_3 + D_6 + D_7 \\\\ A_2 &amp;= D_4 + D_5 + D_6 + D_7 \\\\ A_3 &amp;= D_8 + D_9 \\end{align}\\]"},{"location":"cs/computer_logic/chapter3/#priority-encoder","title":"Priority Encoder","text":"<p>Accepts multiple inputs and use the highest priority input.</p> <p>where \\(V\\) indicates at least one 1 present.</p> <p>Use K-map to get equations:</p> \\[\\begin{align} F_1 &amp;= D_3 + D_2 \\\\ A_2 &amp;= D_4 \\\\ A_1 &amp;= \\bar D_4 D_3 + \\bar D_4 \\bar D_3 D_2 = \\bar D_4 F_1 \\\\ A_0 &amp;= \\bar D_4 D_3 + \\bar D_4 \\bar D_3 \\bar D_2 D_1 = \\bar D_4 (D_3 + \\bar D_2 D_1) \\\\ V &amp;= D_4 + F_1 + D_1 + D_0 \\end{align}\\]"},{"location":"cs/computer_logic/chapter3/#multiplexers","title":"Multiplexers \u591a\u8def\u9009\u62e9\u5668","text":"<p>A multiplexer selects information from an input line and directs the information to an output line.</p> <p>Decoder + Enable.</p>"},{"location":"cs/computer_logic/chapter3/#2-to-1-line-multiplexer","title":"2-to-1-line Multiplexer","text":""},{"location":"cs/computer_logic/chapter3/#4-to-1-line-multiplexer","title":"4-to-1-line Multiplexer","text":""},{"location":"cs/computer_logic/chapter3/#multiplexer-width-expansion","title":"Multiplexer Width Expansion","text":"<p>Select \"vector bits\" instead of \"bits\".</p>"},{"location":"cs/computer_logic/chapter3/#other-multiplexers","title":"Other Multiplexers","text":"<p>Use three-state drivers.</p>"},{"location":"cs/computer_logic/chapter3/#combinational-logic-implementation","title":"Combinational Logic Implementation","text":""},{"location":"cs/computer_logic/chapter3/#multiplexer-approach-1","title":"Multiplexer Approach 1","text":"<p>n inputs, m outputs</p> <p>Use m-width \\(2^n\\)-to-1-line multiplexer</p> <p>Gray to Binary Code</p> <ul> <li> <p>Truth table:</p> <p></p> </li> <li> <p>Mux:</p> <p></p> </li> </ul>"},{"location":"cs/computer_logic/chapter3/#multiplexer-approach-2","title":"Multiplexer Approach 2","text":"<p>n + 1 inputs, m outputs</p> <p>Use m-width \\(2^n\\)-to-1-line multiplexer.</p> <p>Design:</p> <ul> <li>Find the truth table for the function.</li> <li>Based on the values of the first n variables, separate the truth table rows into pairs. \u6839\u636e\u524d n \u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u5c06\u771f\u503c\u8868\u5206\u6210\u4e24\u884c\u4e00\u5bf9\u3002</li> <li>For each pair and output, define a rudimentary function of the final variable \\((0, 1, X, \\bar X)\\)</li> <li>Use the first n variables as the select inputs of a multiplexer and the rudimentary functions as the data inputs.</li> </ul> <p>Gray to Binary Code</p> <ul> <li> <p>Truth table:</p> <p></p> </li> <li> <p>Mux:</p> <p></p> </li> </ul>"},{"location":"cs/computer_logic/chapter3/#design-procedure","title":"Design Procedure","text":""},{"location":"cs/computer_logic/chapter3/#combinational-circuits","title":"Combinational Circuits","text":"<p>\u8f93\u5165\u4e0e\u8f93\u51fa\u4e25\u683c\u5bf9\u5e94</p>"},{"location":"cs/computer_logic/chapter3/#beginning-hierarchical-design","title":"Beginning Hierarchical Design","text":"<ul> <li>Top-Down: \u4ece\u9876\u5c42\u5f00\u59cb\u8bbe\u8ba1\uff0c\u9010\u6b65\u7ec6\u5316</li> <li>Bottom-Up: \u4ece\u6700\u5e95\u5c42\u5f00\u59cb\u8bbe\u8ba1\uff0c\u9010\u6b65\u5408\u5e76</li> </ul>"},{"location":"cs/computer_logic/chapter3/#design-procedure_1","title":"Design Procedure","text":"<ul> <li>Specification \u7b80\u5316</li> <li> <p>Formulation \u516c\u5f0f\u5316</p> <p>Derive a truth table or initial Boolean equations for each output function.</p> <p>Apply hierarchical design to the output functions.</p> </li> <li> <p>Optimization \u4f18\u5316</p> <p>Apply multiple-level logic optimization to the output functions.</p> <p>Draw logic diagrams.</p> </li> <li> <p>Technology Mapping \u6280\u672f\u6620\u5c04</p> <p>Map the logic diagrams into a specific technology.</p> </li> <li> <p>Verification \u9a8c\u8bc1</p> <p>Verify the design by simulation.</p> </li> </ul> <p>Design BCD to Excess-3 Code Converter</p> <ul> <li> <p>Specification</p> <ul> <li>BCD code words for digits 0 through 9 are 0000 through 1001, respectively.</li> <li>Excess-3 code words for digits 0 through 9 consisting of 3 added to the BCD code words.</li> </ul> </li> <li> <p>Formulation</p> <p>write truth table (A-F \u65e0\u5173\u9879)</p> <p>Input BCD: ABCD, Output Excess-3: WXYZ</p> </li> <li> <p>Optimization</p> <ol> <li> <p>Use K-maps:</p> \\[\\begin{align} W &amp;= A + BC + BD \\\\ X &amp;= \\bar BC + \\bar BD + B\\bar C\\bar D \\\\ Y &amp;= CD + \\bar C \\bar D \\\\ Z &amp;= \\bar D \\end{align}\\] <p>G = 23</p> </li> <li> <p>Multiple-level logic optimization</p> <p>\\(T_1 = C + D\\), then</p> \\[\\begin{align} T_1 = C + D , G &amp;&amp;= 2 \\\\ \\bar T_1 , G &amp;&amp;= 1 \\\\ W &amp;= A + B(T_1) , G &amp;&amp;= 4 \\\\ X &amp;= \\bar B(T_1) + B\\bar T_1 , G &amp;&amp;= 6  \\\\ Y &amp;= CD + \\bar T_1 , G &amp;&amp;= 4 \\\\ Z &amp;= \\bar D, G &amp;&amp;= 0 \\end{align}\\] <p>G = 17</p> </li> <li> <p>Technology mapping</p> <p>Convert to NAND gates or NOR gates.</p> </li> </ol> </li> </ul>"},{"location":"cs/computer_logic/chapter3/#chip-design-styles","title":"Chip Design Styles","text":"<ul> <li> <p>Full custom: \u4e3a\u7279\u5b9a\u5e94\u7528\u8bbe\u8ba1</p> <p>\u4f18\u70b9\uff1a\u6700\u5c0f\u9762\u79ef\uff0c\u6700\u5feb\u901f\u5ea6\uff0c\u751f\u4ea7\u6210\u672c\u4f4e</p> <p>\u7f3a\u70b9\uff1a\u8bbe\u8ba1\u5468\u671f\u957f\uff0c\u8bbe\u8ba1\u6210\u672c\u9ad8</p> </li> <li> <p>Standard cell: \u5305\u542b\u6807\u51c6\u6a21\u5757\uff08\u7c7b\u4f3c\u6807\u51c6\u5e93\uff09</p> <p>\u4f18\u70b9\uff1a\u8bbe\u8ba1\u5468\u671f\u77ed\uff0c\u8bbe\u8ba1\u6210\u672c\u4f4e</p> <p>\u7f3a\u70b9\uff1a\u9762\u79ef\u5927\uff0c\u901f\u5ea6\u6162\uff0c\u751f\u4ea7\u6210\u672c\u9ad8</p> </li> <li> <p>Gate array: \u95e8\u9635\u5217\uff08\u53ef\u7f16\u7a0b\uff09</p> <p>\u4f18\u70b9\uff1a\u6210\u672c\u6700\u4f4e</p> <p>\u7f3a\u70b9\uff1a\u9762\u79ef\u5927\uff0c\u901f\u5ea6\u6162</p> </li> </ul>"},{"location":"cs/computer_logic/chapter3/#cell-libraries","title":"Cell Libraries","text":"<ul> <li>Cell: pre-designed logic block</li> <li>Cell library: a collection of cells</li> <li>Cell characterization: a detailed specification of the cell for use.</li> </ul> <p>Cell Library</p> <p></p>"},{"location":"cs/computer_logic/chapter3/#mapping-to-nand-gate","title":"Mapping to NAND gate","text":"<p>Convert any circuits to NAND gates.</p> <p>Assumptions</p> <ul> <li>Gate loading and delay are ignored.</li> <li>\u53ef\u4ee5\u7528\u4efb\u610f\u591a\u8f93\u5165\u7684 NAND \u95e8</li> </ul> <ol> <li> <p>Convert AND and OR gates to NAND gates</p> <ul> <li>\\(A + B = \\overline{\\overline{A + B}} = \\overline{\\bar A \\bar B}\\)</li> <li>\\(AB = \\overline{\\overline{AB}}\\)</li> </ul> </li> <li> <p>Pushing inverters through circuit fan-out points</p> </li> </ol> <p>Mapping to NOR is similar.</p>"},{"location":"cs/computer_logic/chapter3/#verificaiton","title":"Verificaiton","text":"<ul> <li> <p>Manual Logic Analysis (Simple Circuits)</p> <ul> <li>Write a truth table.</li> <li>Derive Boolean equations.</li> </ul> </li> <li> <p>Simulation</p> <ol> <li>Write a test program.</li> <li>Simulate the circuit.</li> </ol> <p>apply all possible input combinations or important input combinations</p> </li> </ul>"},{"location":"cs/computer_logic/chapter3/#arithmetic-functions","title":"Arithmetic Functions","text":""},{"location":"cs/computer_logic/chapter3/#iterative-combinational-circuits","title":"Iterative Combinational Circuits","text":"<p>Use blocked diagram to process each bit.</p>"},{"location":"cs/computer_logic/chapter3/#half-adder","title":"Half Adder","text":"<p>inputs: \\(X, Y\\); outputs: \\(S, C\\) (sum, carry)</p> \\[\\begin{align} S &amp;= A \\oplus B \\\\ C &amp;= AB \\end{align}\\]"},{"location":"cs/computer_logic/chapter3/#full-adder","title":"Full Adder","text":"<p>inputs: \\(X, Y, Z\\) (\\(Z\\): carry); outputs: \\(S, C\\)</p> \\[\\begin{align} S &amp;= X \\oplus Y \\oplus Z \\\\ C &amp;= XY + XZ + YZ = XY + (X \\oplus Y)Z \\end{align}\\] <p>Implement:</p> \\[\\begin{align} G = XY, P = X \\oplus Y \\\\ S = P \\oplus Z, C = G + PZ \\end{align}\\]"},{"location":"cs/computer_logic/chapter3/#4-bit-ripple-carry-adder","title":"4-bit Ripple-Carry Adder","text":"<p>\u7f3a\u70b9\uff1a\u5ef6\u8fdf\u9ad8\uff08Carry \u9700\u8981\u4f20\u9012\uff09</p> <p>Carry Lookahead</p> <p>\\(P_i = X_i \\oplus Y_i, G_i = X_iY_i\\)</p> <p>\\(C_4 = G_3 + P_3G_2 + P_3P_2G_1 + P_3P_2P_1G_0 + P_3P_2P_1P_0C_0\\)</p> <p>\u7f3a\u70b9\uff1a\u95e8\u8f93\u5165\u6210\u672c\u5927\u3001\u6247\u51fa\u7cfb\u6570\u5927\u5bfc\u81f4\u5ef6\u8fdf\u9ad8\uff0c\u968f\u7740\u4f4d\u6570\u589e\u52a0\uff0c\u6210\u672c\u5927\u5927\u589e\u52a0</p> <p>Group Carry Lookahead Logic</p> <p>16-bit adder: 4 groups</p> \\[\\begin{align} G_{0\\sim 3} &amp;= G_3 + P_3G_2 + P_3P_2G_1 + P_3P_2P_1G_0 \\\\ P_{0\\sim 3} &amp;= P_3P_2P_1P_0 \\end{align}\\] <p></p> <p>CLA: input \\(G_0, P_0, G_1, P_1, G_2, P_2, G_3, P_3\\), output \\(G_{0\\sim 3}, P_{0\\sim 3}\\)</p> <p></p> <p>\u7b2c\u4e00\u5c42\u6700\u53f3 CLA: input \\(G_0, P_0, G_1, P_1, G_2, P_2, G_3, P_3\\), output \\(G_{0\\sim 3}, P_{0\\sim 3}\\)</p> <p>\u7b2c\u4e8c\u5c42 CLA: input \\(C_0, G_{0\\sim 3}, P_{0\\sim 3}, G_{4\\sim 7}, P_{4\\sim 7}, G_{8\\sim 11}, P_{8\\sim 11}, G_{12\\sim 15}, P_{12\\sim 15}\\), output \\(C_4, C_8, C_{12}, C_{16}\\)</p> <p>Longest Delays:</p> <p>\\(A_0, B_0 \\to CLA \\to G_0, P_0 \\to CLA \\to C_{12} \\to CLA \\to C_{16}\\)</p>"},{"location":"cs/computer_logic/chapter3/#unsigned-subtraction","title":"Unsigned Subtraction","text":"<p>Note</p> <p>compute: \\(N - M\\)</p> <ul> <li>\\(N \\geq M\\): \u65e0\u501f\u4f4d</li> <li>\\(N &lt; M\\): \\(N - M = -(2^n - (M - N))\\) \u6700\u9ad8\u4f4d\u501f\u4f4d</li> </ul> <p>\u4e00\u822c\u4e0d\u7528\u8fd9\u79cd\u65b9\u6cd5\u3002</p> <p>2's Complements:</p> <ul> <li>Diminished Radix Complement (DRC) \u53cd\u7801 \\(2^n - M - 1\\)</li> <li>Radix Complement (RC) \u8865\u7801 \\(2^n - M\\)</li> </ul> <p>\\(M - N = M + (2^n - N)\\) (n-bit)</p> <ul> <li>\\(M \\geq N\\): \\(2^n\\) \u6ea2\u51fa\uff0c\\(M - N\\) \u4fdd\u7559</li> <li>\\(M &lt; N\\): \u7ed3\u679c\u4e3a\u8d1f\u6570\uff0c\u6c42\u5f97\u8865\u7801\u3002</li> </ul> <p>\u5982\u679c\u6709\u8fdb\u4f4d\uff0c\u5219\u8bf4\u660e\u7ed3\u679c\u4e3a\u6b63\u6570\uff0c\u65e0\u501f\u4f4d\uff1b\u5426\u5219\u7ed3\u679c\u4e3a\u8d1f\u6570\uff0c\u6709\u501f\u4f4d\u3002</p>"},{"location":"cs/computer_logic/chapter3/#signed-integer","title":"Signed Integer","text":"<p>\u6700\u9ad8\u4f4d\u662f\u7b26\u53f7\u4f4d\uff0c0 \u8868\u793a\u6b63\u6570\uff0c1 \u8868\u793a\u8d1f\u6570\u3002\u4e00\u822c\u91c7\u7528 2's Complements \u5373\u7b26\u53f7\u4f4d+\u8865\u7801\u3002</p> <p>\u7535\u8def\u4e2d\u7684\u5b9e\u73b0</p> <ul> <li>\u52a0\u6cd5\uff1a\u76f4\u63a5\u76f8\u52a0</li> <li>\u51cf\u6cd5\uff1a\u5c06\u51cf\u6570\u53d6\u53cd\u52a0\u4e00\uff08\u53d8\u4e3a\u51cf\u6570\u53d6\u53cd\u4e4b\u540e\u7684\u8865\u7801\uff09\uff0c\u518d\u4e0e\u88ab\u51cf\u6570\u76f8\u52a0</li> </ul> <p></p>"},{"location":"cs/computer_logic/chapter3/#overflow-detection","title":"Overflow Detection","text":"<p>\u901a\u8fc7\u7b26\u53f7\u4f4d\u5224\u65ad\u6ea2\u51fa\uff0c\u6709 8 \u79cd\u60c5\u51b5\uff1a</p> <ul> <li> <p>\u65e0\u6ea2\u51fa</p> <p></p> </li> <li> <p>\u6709\u6ea2\u51fa</p> <p></p> </li> </ul> <p>\uff08\u6ce8\uff1a\u51cf\u8d1f\u6570\u76f8\u5f53\u4e8e\u52a0\u6b63\u6570\uff0c\\(C_{n-1}\\) \u4e3a 0\uff1b\u52a0\u8d1f\u6570\u76f8\u5f53\u4e8e\u51cf\u6b63\u6570\uff0c\\(C_{n-1}\\) \u4e3a 1\uff09</p> <p>\u5f97\u5230\u6ea2\u51fa\u5224\u65ad\u516c\u5f0f\uff1a\\(V = C_{n-1} \\oplus C_{n}\\)\uff0c\u8fd9\u91cc \\(C_{n}\\) \u4e3a\u7ed3\u679c\u7684\u7b26\u53f7\u4f4d\u3002</p>"},{"location":"cs/computer_logic/chapter3/#other-arithmetic-functions","title":"Other Arithmetic Functions","text":"<ul> <li> <p>Incrementer</p> <ul> <li>Adding a fixed value to an arithmetic variable</li> <li>fixec value = 1, called counting up</li> <li>Functional block is called an incrementer</li> </ul> </li> <li> <p>Decrementer</p> <ul> <li>Subtracting a fixed value from an arithmetic variable</li> <li>fixec value = 1, called counting down</li> <li>Functional block is called a decrementer</li> </ul> </li> <li> <p>Multiplier by a Constant: shift left</p> </li> <li>Divider by a Constant: shift right</li> <li> <p>Zero Fill and Extension</p> <ul> <li>Zero fill: add 0s to the MSB or LSB</li> <li>Extension: add 0s or 1s to the MSB to extend the length of the variable (usually copy the sign bit)</li> </ul> </li> </ul> <p>A + 1 Incrementer</p> <p></p>"},{"location":"cs/computer_logic/chapter3/#arithmetic-logic-unit-alu","title":"Arithmetic Logic Unit (ALU)","text":"<p>Decompose the arithmetic circuit into:</p> <ul> <li>An n-bit parallel adder</li> <li>A block of logic that selects four choices for the B input of the adder</li> </ul>"},{"location":"cs/computer_logic/chapter4/","title":"Sequential Circuits","text":""},{"location":"cs/computer_logic/chapter4/#storage-elements-and-analysis","title":"Storage Elements and Analysis","text":""},{"location":"cs/computer_logic/chapter4/#introduction-to-sequential-circuits","title":"Introduction to Sequential Circuits","text":"<p>A Sequential circuit contains:</p> <ul> <li>Storage elements: Latches or Flip-Flops </li> <li> <p>Combinational Logic:</p> <ul> <li>Implements a multiple-output switching function</li> <li>Inputs are signals from the outside.</li> <li>Outputs are signals to the outside.</li> <li>Other inputs, State or Present State, are signals from storage elements. </li> <li>The remaining outputs, Next State are inputs to storage elements. </li> </ul> </li> </ul> <p>Combinatorial Logic:</p> <ul> <li>Next state function \u6b21\u6001\u65b9\u7a0b: Next State = f(Inputs, State)</li> <li>Output function (Mealy \u6a21\u578b): Outputs = g(Inputs, State)</li> <li>Output function (Moore \u6a21\u578b): Outputs = h(State)</li> </ul> <p>Output function type depends on specification and affects the design significantly</p>"},{"location":"cs/computer_logic/chapter4/#types-of-sequential-circuits","title":"Types of Sequential Circuits","text":"<ul> <li> <p>Synchronous \u540c\u6b65</p> <ul> <li>Behavior defined from knowledge of its signals at discrete instances of time</li> <li>Storage elements observe inputs and can change state only in relation to a timing signal (clock pulses from a clock)</li> </ul> <p>\u6240\u6709\u5143\u4ef6\u540c\u6b65\u66f4\u65b0\uff0c\u5728\u65f6\u949f\u5468\u671f\u5185\u66f4\u65b0\u3002\u6709\u5229\u4e8e\u5206\u6790\u548c\u8bbe\u8ba1\u3002</p> </li> <li> <p>Asynchronous \u5f02\u6b65</p> <ul> <li>Behavior defined from knowledge of inputs an any instant of time and the order in continuous time in which inputs change</li> <li>If clock just regarded as another input, all circuits are asynchronous. \u5982\u679c\u65f6\u949f\u4e5f\u88ab\u770b\u505a\u4e00\u4e2a\u8f93\u5165\uff0c\u90a3\u4e48\u6240\u6709\u7535\u8def\u90fd\u662f Asynchronous</li> </ul> <p>\u72b6\u6001\u66f4\u65b0\u53ef\u4ee5\u5728\u4efb\u610f\u65f6\u95f4\u53d1\u751f\u3002\u53ef\u4ee5\u6709\u9700\u8981\u7684\u65f6\u5019\u66f4\u65b0\u7535\u8def\uff0c\u964d\u4f4e\u7535\u8def\u7684\u529f\u8017\u3002</p> </li> </ul>"},{"location":"cs/computer_logic/chapter4/#discrete-event-simulation","title":"Discrete Event Simulation \u79bb\u6563\u4e8b\u4ef6\u4eff\u771f","text":"<p>In order to understand the time behavior of a sequential circuit.</p> <p>Gates modeled by an ideal (instantaneous) function and a fixed gate delay. \u6240\u6709\u95e8\u7684\u5ef6\u8fdf\u90fd\u662f\u56fa\u5b9a\u7684\uff0c\u62bd\u8c61\u6210\u7406\u60f3\u7535\u8def\u95e8\u548c\u56fa\u5b9a\u5ef6\u8fdf\u3002</p>"},{"location":"cs/computer_logic/chapter4/#latch","title":"Latch","text":""},{"location":"cs/computer_logic/chapter4/#basic-nand-sr-latch","title":"Basic (NAND) SR Latch","text":"<p>\u5f53 \\(S = R = 1\\) \u65f6\uff0c\u9501\u5b58\u5668\u5c06\u4fdd\u6301\u539f\u6765\u7684\u72b6\u6001\u3002</p> <p>\u5f53 \\(S = 0, R = 0\\) \u65f6\uff0c\u9501\u5b58\u5668\u7684\u72b6\u6001\u672a\u5b9a\u4e49\u3002</p> <p>\u5176\u4f59\u7ec4\u5408\uff0c\u6709 \\(Q = \\bar S\\)\u3002</p> <p>\u8fd9\u79cd\u5b9e\u73b0\u88ab\u79f0\u4f5c \\(\\bar S-\\bar R\\) latch\u3002</p>"},{"location":"cs/computer_logic/chapter4/#basic-nor-sr-latch","title":"Basic (NOR) SR Latch","text":"<p>\u548c NAND SR Latch \u76f8\u53cd\u3002</p>"},{"location":"cs/computer_logic/chapter4/#clocked-sr-latch","title":"Clocked SR Latch","text":"<p>\u5f53 \\(C = 0\\) \u65f6\uff0c\u9501\u5b58\u5668\u4fdd\u6301\u539f\u6765\u7684\u72b6\u6001\uff0c\u5373\u540e\u9762\u7684 \\(\\bar S-\\bar R\\) latch \u5904\u4e8e\u9501\u5b9a\u72b6\u6001\u3002</p> <p>\u5f53 \\(C = 1\\) \u65f6\uff0c\u9501\u5b58\u5668\u7684\u72b6\u6001\u7531 SR latch \u51b3\u5b9a\u3002</p>"},{"location":"cs/computer_logic/chapter4/#d-latch","title":"D Latch","text":"<p>\u6d88\u9664\u4e86\u4e0d\u786e\u5b9a\u72b6\u6001\uff0c\\(C\\) \u63a7\u5236\u9501\u5b58\uff0c\\(D\\) \u63a7\u5236\u8f93\u51fa\u3002\\(C = 1\\) \u65f6 \\(Q = D\\)\u3002</p> <p>Info</p> <p>\u5728\u7b97\u95e8\u8f93\u5165\u6210\u672c\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8981\u5206\u5f00\u7b97 G \u548c GN. \u56e0\u4e3a\u9501\u5b58\u5668\u540c\u65f6\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86 \\(Q\\) \u548c \\(\\bar Q\\)\uff0c\u9501\u5b58\u5668\u53ef\u4ee5\u4e3a\u540e\u9762\u7684\u7ec4\u5408\u7535\u8def\u63d0\u4f9b\u539f\u53d8\u91cf\u548c\u53cd\u53d8\u91cf\u3002</p> <p>The Latch Timing Problem</p> <p>For a clocked D-latch, the output Q depends on the input D whenever the clock input C has value 1.</p> <p>\u9501\u5b58\u5668\u65e0\u6cd5\u505a\u5230\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5185\u53ea\u66f4\u65b0\u4e00\u6b21\u3002</p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a\u5c06\u9501\u5b58\u5668\u7684\u8f93\u5165\u548c\u8f93\u51fa\u5206\u5f00\uff0c\u4f7f\u8f93\u5165\u4e0d\u80fd\u76f4\u63a5\u4f5c\u7528\u5728\u8f93\u51fa\u4e0a\u3002</p>"},{"location":"cs/computer_logic/chapter4/#flip-flops","title":"Flip-Flops","text":""},{"location":"cs/computer_logic/chapter4/#sr-master-slave-flip-flop","title":"SR Master-Slave Flip-Flop","text":"<p>\u524d\u9762\u7684\u9501\u5b58\u5668\u79f0\u4e3a Master\uff0c\u540e\u9762\u7684\u9501\u5b58\u5668\u79f0\u4e3a Slave\u3002</p> <p>\u5f53 \\(C = 0\\) \u65f6\uff0cMaster \u9501\u5b58\u5668\u4e0d\u53d8\u3002</p> <p>\u5f53 \\(C = 1\\) \u65f6\uff0cMaster \u9501\u5b58\u5668\u7684\u72b6\u6001\u7531 SR latch \u51b3\u5b9a\uff0cSlave \u9501\u5b58\u5668\u88ab\u9501\u5b9a\u3002</p> <p>\u5f53 \\(C\\) \u4ece 1 \u53d8\u4e3a 0 \u65f6\uff0cMaster \u9501\u5b58\u5668\u7684\u72b6\u6001\u88ab\u9501\u5b9a\uff0cSlave \u9501\u5b58\u5668\u7684\u8f93\u5165\u63a5\u6536 Master \u9501\u5b58\u5668\u7684\u8f93\u51fa\uff0c\u72b6\u6001\u88ab\u6539\u53d8\u3002</p> <p>1s catching \u4e00\u6b21\u6027\u91c7\u6837\u95ee\u9898</p> <p>\u5f53 \\(C = 1\\) \u65f6\uff0c\u82e5 \\(S,R\\) \u51fa\u73b0\u5c0f\u6270\u52a8\uff0c\u4f46\u662f\u5728 \\(C\\) \u53d8\u4e3a 0 \u4e4b\u524d\u6062\u590d\uff0c\u90a3\u4e48 \\(Q\\) \u7684\u72b6\u6001\u5c06\u4f1a\u88ab\u6539\u53d8\u3002</p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1aUse edge-triggering instead of master-slave \u4f7f\u7528\u8fb9\u6cbf\u89e6\u53d1\u4ee3\u66ff\u4e3b\u4ece\u9501\u5b58\u5668\u3002</p>"},{"location":"cs/computer_logic/chapter4/#edge-triggered-d-flip-flop","title":"Edge-Triggered D Flip-Flop","text":"<p>The delay of the S-R master-slave flip-flop can be avoided since the 1s-catching behavior is not present with D replacing S and R inputs.</p> <p>It is called a negative-edge triggered flip-flop, \u8d1f\u8fb9\u6cbf\u89e6\u53d1\u5668\u3002</p> <p>\u540c\u6837\u6709\u6b63\u8fb9\u6cbf\u89e6\u53d1\u5668\uff1a</p>"},{"location":"cs/computer_logic/chapter4/#actual-circuit-of-edge-triggered-d-flip-flop","title":"Actual Circuit of Edge-Triggered D Flip-Flop:","text":""},{"location":"cs/computer_logic/chapter4/#standard-symbols-for-storage-elements","title":"Standard Symbols for Storage Elements","text":"<p>Direct Inputs</p> <p>Direct R and/or S inputs that control the state of the latches within the flip-flops are used for initialization. \u76f4\u63a5\u8f93\u5165\u7684 R \u548c/\u6216 S \u7528\u4e8e\u521d\u59cb\u5316\u89e6\u53d1\u5668\u72b6\u6001\uff0c\u8fd9\u4e00\u64cd\u4f5c\u4e00\u822c\u662f\u5f02\u6b65\u7684\u3002</p> <p></p>"},{"location":"cs/computer_logic/chapter4/#sequential-circuit-analysis","title":"Sequential Circuit Analysis","text":"<p>General Model:</p> <ul> <li>Current State at time (t) is stored in an array of flip-flops.\u00a0</li> <li>Next State at time (t+1) is a Boolean function of State and Inputs.</li> <li>Outputs at time (t) are a Boolean function of State (t) and (sometimes) Inputs (t).</li> </ul> <p>Example</p> <p></p> <ul> <li>Current State: \\(A, B\\)</li> <li>Next State: \\(A(t+1) = AX + BX, B(t+1) = \\bar AX\\)</li> <li>Output: \\(Y = (A + B)\\bar X\\)</li> </ul>"},{"location":"cs/computer_logic/chapter4/#state-table","title":"State Table","text":"<p>A multiple variable table with the following four sections:</p> <ul> <li>Present State: the values of the state variables for each allowed state.</li> <li>Inputs: the input combinations allowed</li> <li>Next state: the value of the state at time (t+1) based on the present state and the input.</li> <li>Outputs: the value of the output as a function of the present state and (sometimes) the input.</li> </ul> <p>Example</p> <p>\u4e0a\u4e00\u4f8b\u4e2d\u7684\u7535\u8def\u56fe\u7684\u72b6\u6001\u8868\uff1a</p> <p></p> <p>\u6216\u8005\u5199\u6210\uff1a</p> <p></p>"},{"location":"cs/computer_logic/chapter4/#state-diagrams","title":"State Diagrams","text":"<p>The sequential circuit function can be represented in graphical form as a state diagram.</p> <p>Label form:</p> <ul> <li>On circle with output included:<ul> <li>state/output</li> <li>Moore type output depends only on state</li> </ul> </li> <li>On directed arc with the output included:<ul> <li>input/output</li> <li>Mealy type output depends on state and input</li> </ul> </li> </ul> <p>Example</p> <p></p> <p>Equivalent State Definitions</p> <p>Two states are equivalent if their outputs produced for each input symbol is identical and their next states for each input symbol are the same or equivalent.</p> <p>\u82e5\u4e24\u4e2a\u72b6\u6001\u63a5\u53d7\u76f8\u540c\u8f93\u5165\u540e\u8f93\u51fa\u76f8\u540c\uff0c\u4e14\u4e0b\u4e00\u4e2a\u72b6\u6001\u76f8\u540c\u6216\u7b49\u4ef7\uff0c\u5219\u4e24\u4e2a\u72b6\u6001\u7b49\u4ef7\u3002</p> Example <p></p> <p>\u56fe\u4e2d S1\u3001S2\u3001S3 \u7b49\u4ef7\uff0c\u53ef\u4ee5\u5199\u6210\u4e00\u4e2a\u72b6\u6001\uff1a</p> <p></p>"},{"location":"cs/computer_logic/chapter4/#moore-and-mealy-models","title":"Moore and Mealy Models","text":"<p>Sequential Circuits or Sequential Machines are also called Finite State Machines (FSMs). Two formal models exist:</p> <ul> <li> <p>Moore Model: the outputs depend only on the present state.</p> <p>State Diagram \u4e2d\uff0c\u8f93\u51fa\u5199\u5728\u72b6\u6001\u8282\u70b9\u4e0a\u3002</p> </li> <li> <p>Mealy Model: the outputs depend on the present state and the inputs.</p> <p>State Diagram \u4e2d\uff0c\u8f93\u51fa\u5199\u5728\u72b6\u6001\u8f6c\u79fb\u8fb9\u4e0a\u3002</p> </li> </ul>"},{"location":"cs/computer_logic/chapter4/#flip-flop-timing-parameters","title":"Flip-Flop Timing Parameters","text":"<ul> <li>\\(t_s\\): setup time \u51c6\u5907\u65f6\u95f4\uff0c\u5728\u72b6\u6001\u8fdb\u884c\u66f4\u65b0\u4e4b\u524d\u9700\u8981\u51c6\u5907\u597d</li> <li>\\(t_h\\): hold time \u4e00\u822c\u4e3a 0\uff0c\u4fdd\u6301\u65f6\u95f4\uff0c\u5728\u72b6\u6001\u66f4\u65b0\u4e4b\u540e\u9700\u8981\u4fdd\u6301\u4e00\u6bb5\u65f6\u95f4</li> <li>\\(t_w\\): clock pulse width, usually \\(t_{wH} = t_{wL}\\)</li> <li>\\(t_{px}\\): propagation delay<ul> <li>\\(t_{PHL}\\): High-to-Low</li> <li>\\(t_{PLH}\\): Low-to-High</li> <li>\\(t_{pd}\\): \\(\\max(t_{PHL}, t_{PLH})\\) </li> </ul> </li> </ul>"},{"location":"cs/computer_logic/chapter4/#circuit-and-system-level-timing","title":"Circuit and System Level Timing","text":"<p>\u8ba1\u7b97\u89e6\u53d1\u5668\u4ece\u8f93\u51fa\u5230\u8f93\u5165\u7684\u5ef6\u8fdf\uff0c\u53ef\u4ee5\u5c06\u51fa\u53d1\u5668\u7684\u8f93\u51fa\u548c\u8f93\u5165\u62c6\u5f00\uff0c\u66f4\u52a0\u76f4\u89c2\u5730\u8ba1\u7b97\u5ef6\u8fdf\u3002</p> <p>If the clock period is too short, some data changes will not propagate through the circuit to flip-flop inputs before the setup time interval begins.</p> <p>New timing components:</p> <ul> <li>\\(t_p\\): clock period \u65f6\u949f\u5468\u671f</li> <li>\\(t_{pd,COMB}\\): total delay of combinational logic along the path from flip-flop output to flip-flop input</li> <li>\\(t_{slack}\\): extra time in the clock period in addition to the sum of the delays and setup time on a path </li> </ul> <p>\u964d\u4f4e\u5ef6\u8fdf\uff1a\u4e3b\u8981\u8003\u8651\u4f18\u5316 \\(t_{pd,COMB}\\)\uff0c\u51cf\u5c11\u7ec4\u5408\u903b\u8f91\u7684\u5ef6\u8fdf\u3002</p> <p>Time equation</p> \\[ t_p \\geq \\max(t_{pd,FF} + t_{pd,COMB} + t_s) \\] <p>for all paths from flip-flop output to flip-flop input.</p> <p>Example</p> <ul> <li>\\(t_{pd,FF} = 1.0 ns\\)</li> <li>\\(t_s = 0.3 ns\\) for edge-triggered flip-flops</li> <li>\\(t_s = t_{wH} = 2.0 ns\\) for master-slave flip-flops</li> <li>Clock frequency = 250 MHz</li> </ul> <p>Calculations:</p> <p>\\(t_p = 1 / 250 MHz = 4.0 ns\\)</p> <ul> <li> <p>Edge-triggered: \\(4.0 \\geq 1.0 + t_{pd,COMB} + 0.3 \\Rightarrow t_{pd,COMB} \\leq 2.7 ns\\)</p> <p>Approximately 9 gates allowed on a path</p> </li> <li> <p>Master-slave: \\(4.0 \\geq 1.0 + t_{pd,COMB} + 2.0 \\Rightarrow t_{pd,COMB} \\leq 1.0 ns\\)</p> <p>Approximately 3 gates allowed on a path</p> </li> </ul>"},{"location":"cs/computer_logic/chapter4/#sequential-circuit-design","title":"Sequential Circuit Design","text":"<p>The Design Procedure:</p> <ul> <li>Specification</li> <li>Formulation: Obtain a state diagram or state table</li> <li>State Assignment: Assign binary codes to the states</li> <li>Flip-Flop Input Equation Determination</li> <li>Output Equation Determination</li> <li>Optimization</li> <li>Technology Mapping</li> <li>Verification</li> </ul>"},{"location":"cs/computer_logic/chapter4/#specification","title":"Specification","text":"<p>Component Forms of Specification</p> <ul> <li>State Diagram</li> <li>State Equations</li> <li>HDL codes</li> <li>...</li> </ul>"},{"location":"cs/computer_logic/chapter4/#formulation","title":"Formulation","text":"<p>A state is an abstraction of the history of the past applied inputs to the circuit.</p> <p>\u89e6\u53d1\u5668\u6570\u91cf\u9009\u62e9\uff1a\\(n = \\lceil \\log_2 m \\rceil\\)\uff0c\\(m\\) \u4e3a\u72b6\u6001\u6570\u3002</p> <p>Sequence Recognizer Procedure \u5e8f\u5217\u8bc6\u522b\u5668</p> <p>\u7528\u5904\uff1a\u8bc6\u522b\u8f93\u5165\u5e8f\u5217\uff08\u6bd4\u5982\u8bc6\u522b\u901a\u4fe1\u5e8f\u5217\u4e2d\u7684\u5f00\u59cb\u548c\u7ed3\u675f\uff09\u3002</p> <p>Example: Recognize the sequence 1101.</p> <ul> <li> <p>\u8bc6\u522b 1101:</p> <p></p> </li> <li> <p>\u8003\u8651\u6240\u6709\u53ef\u80fd\u7684\u8f93\u5165\u5e8f\u5217\uff1a</p> <p></p> </li> <li> <p>\u5f97\u5230\u72b6\u6001\u8868</p> <p></p> </li> </ul> <p>\u4e0a\u8ff0\u8fc7\u7a0b\u662f Mealy Model\uff0c\u5982\u679c\u662f Moore Model\uff0c\u5219\u8fd8\u9700\u8981\u589e\u52a0\u4e00\u4e2a\u72b6\u6001\uff1a</p> <p></p> <p></p>"},{"location":"cs/computer_logic/chapter4/#simplification-of-state-diagrams","title":"Simplification of State Diagrams","text":"<p>\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u539f\u59cb\u72b6\u6001\u56fe\u548c\u539f\u59cb\u72b6\u6001\u8868\u4e2d\u5b58\u5728\u7740\u591a\u4f59\u7684\u72b6\u6001\u3002\u72b6\u6001\u4e2a\u6570\u8d8a\u591a\uff0c\u7535\u8def\u4e2d\u6240\u9700\u7684\u89e6\u53d1\u5668\u7684\u6570\u76ee\u4e5f\u8d8a\u591a\uff0c\u5236\u9020\u6210\u672c\u5c31\u8d8a\u9ad8\u3002\u4e3a\u964d\u4f4e\u5236\u9020\u6210\u672c\uff0c\u9700\u8981\u53bb\u6389\u591a\u4f59\u7684\u72b6\u6001\u3002</p> <p>\u6240\u8c13\u72b6\u6001\u7b80\u5316\uff0c\u5c31\u662f\u8981\u83b7\u5f97\u4e00\u4e2a\u6700\u5c0f\u5316\u7684\u72b6\u6001\u8868\u3002\u8fd9\u4e2a\u8868\u4e0d\u4ec5\u80fd\u6b63\u786e\u5730\u53cd\u6620\u8bbe\u8ba1\u7684\u5168\u90e8\u8981\u6c42\uff0c\u800c\u4e14\u72b6\u6001\u7684\u6570\u76ee\u6700\u5c11\u3002</p> <p>\u72b6\u6001\u7b49\u6548\uff1a\u5bf9\u4e8e\u6240\u6709\u53ef\u80fd\u7684\u8f93\u5165\u5e8f\u5217\uff0c\u4e24\u4e2a\u72b6\u6001\u7684\u8f93\u51fa\u5e8f\u5217\u76f8\u540c\uff0c\u4e14\u4e0b\u4e00\u4e2a\u72b6\u6001\u76f8\u540c\u6216\u7b49\u6548\uff0c\u5219\u4e24\u4e2a\u72b6\u6001\u7b49\u6548\uff0c\u53ef\u4ee5\u5408\u5e76\u3002</p> <p>\u72b6\u6001\u7b49\u6548\u5224\u522b\uff1a</p> <p>\u9996\u5148\u8f93\u51fa\u76f8\u540c\uff0c\u540c\u65f6\u6ee1\u8db3\u4ee5\u4e0b\u4e09\u4e2a\u6761\u4ef6\u4e4b\u4e00\uff1a</p> <ul> <li>\u6b21\u6001\u76f8\u540c</li> <li>\u6b21\u6001\u4ea4\u9519</li> <li>\u6b21\u6001\u5faa\u73af</li> </ul> <p>Example</p> <ul> <li> <p>\u6b21\u6001\u76f8\u540c</p> <p></p> </li> <li> <p>\u6b21\u6001\u76f8\u540c\u6216\u4ea4\u9519</p> <p></p> </li> <li> <p>\u6b21\u6001\u76f8\u540c\u6216\u7b49\u6548\uff08\\(S_k, S_l\\) \u7b49\u6548\uff09</p> <p></p> </li> <li> <p>\u6b21\u6001\u4ea4\u9519\u6216\u76f8\u540c\u6216\u5faa\u73af</p> <p></p> </li> </ul> <p>\u5316\u7b80\u65b9\u6cd5\uff1a</p> <ol> <li> <p>\u89c2\u5bdf\u6cd5\u5316\u7b80</p> <p>\u4ece\u72b6\u6001\u56fe/\u72b6\u6001\u8868\u4e2d\u89c2\u5bdf\u51fa\u7b49\u6548\u72b6\u6001\uff0c\u7136\u540e\u5408\u5e76\u3002</p> </li> <li> <p>\u9690\u542b\u8868\u6cd5\u5316\u7b80</p> <p>\u72b6\u6001 \\(S_1, \\dots, S_n\\)\uff0c\u4f5c \\((n-1) \\times (n-1)\\) \u7684\u68af\u5f62\u56fe\uff0c\u5217\u5206\u5e03\u4ee3\u8868 \\(S_1, \\dots, S_{n-1}\\)\uff0c\u884c\u5206\u522b\u4ee3\u8868 \\(S_2, \\dots, S_n\\), \u6bcf\u4e2a\u683c\u5b50\u4ee3\u8868 \\(S_i, S_j\\) \u7684\u6b21\u6001\u662f\u5426\u76f8\u540c\uff0c\u82e5\u65e0\u6cd5\u786e\u5b9a\uff0c\u5219\u5199\u4e0a\u4f9d\u8d56\u7684\u72b6\u6001\u5bf9\u3002\u53ef\u4ee5\u5bb9\u6613\u5730\u770b\u51fa\u4f9d\u8d56\u5173\u7cfb\uff0c\u4ece\u800c\u8fdb\u884c\u5316\u7b80\u3002</p> <p>Example</p> <p>\u5316\u7b80\uff1a</p> <p></p> <p>\u753b\u51fa\u9690\u542b\u8868\uff1a</p> <p></p> <p>\u53ef\u4ee5\u770b\u51fa\uff1a</p> <ul> <li>\\(AB \\rightarrow CF \\rightarrow equivalent\\)</li> <li>\\(AE \\leftrightarrows BE \\rightarrow CF \\rightarrow equivalent \\Rightarrow ABE \\rightarrow equivalent\\)</li> </ul> <p>\u786e\u5b9a\u6700\u5927\u7b49\u6548\u7c7b\uff0c\u4f5c\u6700\u5c0f\u5316\u72b6\u6001\u8868\uff1a</p> <ul> <li>\u56db\u4e2a\u7b49\u6548\u5bf9 \\((A,B), (A,E), (B,E), (C,F)\\)</li> <li>\u6700\u5927\u7b49\u6548\u7c7b \\((A,B,E)\\)</li> <li>\u56db\u4e2a\u72b6\u6001 \\((A,B,E), (C,F), (D), (G)\\)</li> </ul> <p>\u4ee4\u4ee5\u4e0a\u56db\u4e2a\u72b6\u6001\u4f9d\u6b21\u4e3a \\(a, b, c, d\\)\uff0c\u753b\u51fa\u6700\u5c0f\u5316\u72b6\u6001\u8868\uff1a</p> <p></p> </li> </ol>"},{"location":"cs/computer_logic/chapter4/#state-assignment","title":"State Assignment","text":"<p>If the number of states is \\(m\\), then \\(n = \\lceil \\log_2 m \\rceil\\) bits are required to represent the states.</p> <p>There are \\((2^n)!/m!\\) assignments of codes with a minimum number of bits.</p>"},{"location":"cs/computer_logic/chapter4/#find-flip-flop-input-and-output-equations","title":"Find Flip-Flop Input and Output Equations","text":"<p>Use K-maps to compute the equations of \\(D_i, X_{output}\\) with respect to \\(X_{input}, Q_i\\).</p> <p>\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u72b6\u6001\u5206\u914d\u7684\u65b9\u6848\u4e0d\u4e00\u6837\uff0c\u6240\u5f97\u5230\u7684\u8f93\u51fa\u51fd\u6570\u548c\u6fc0\u52b1\u51fd\u6570\u7684\u8868\u8fbe\u5f0f\u4e5f\u4e0d\u540c\uff0c\u7531\u6b64\u800c\u8bbe\u8ba1\u51fa\u6765\u7684\u7535\u8def\u590d\u6742\u5ea6\u4e5f\u4e0d\u540c\u3002</p> <p>\u5b9e\u9645\u5e94\u7528\u65f6\u90fd\u662f\u91c7\u7528\u5de5\u7a0b\u8fd1\u4f3c\u7684\u65b9\u6cd5\uff0c\u4f9d\u636e\u4ee5\u4e0b\u56db\u6761\u4ef6\u539f\u5219\u6765\u8fdb\u884c\u72b6\u6001\u5206\u914d\uff1a</p> <ul> <li>\u5728\u76f8\u540c\u8f93\u5165\u6761\u4ef6\u4e0b\u5177\u6709\u76f8\u540c\u6b21\u6001\u7684\u73b0\u6001\uff0c\u5e94\u5c3d\u53ef\u80fd\u5206\u914d\u76f8\u90bb\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801</li> <li>\u5728\u76f8\u90bb\u8f93\u5165\u6761\u4ef6\uff0c\u540c\u4e00\u73b0\u6001\u7684\u6b21\u6001\u5e94\u5c3d\u53ef\u80fd\u5206\u914d\u76f8\u90bb\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801</li> <li>\u8f93\u51fa \u5b8c\u5168\u76f8\u540c \u7684\u73b0\u6001\u5e94\u5c3d\u53ef\u80fd\u5206\u914d\u76f8\u90bb\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801</li> <li>\u6700\u5c0f\u5316\u72b6\u6001\u8868\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u72b6\u6001\u6216\u521d\u59cb\u72b6\u6001\u5e94\u5206\u914d\u903b\u8f91 <code>0</code></li> </ul> <p>\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u7b2c\u4e00\u6761\u539f\u5219\u8f83\u4e3a\u91cd\u8981\uff0c\u9700\u4f18\u5148\u8003\u8651\uff0c\u5176\u6b21\u8981\u8003\u8651\u7531\u524d\u4e09\u6761\u539f\u5219\u5f97\u5230\u7684\u5e94\u5206\u914d\u76f8\u90bb\u4ee3\u7801\u7684\u72b6\u6001\u5bf9\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u6b21\u6570\u591a\u7684\u72b6\u6001\u5bf9\u5e94\u4f18\u5148\u5206\u914d\u76f8\u90bb\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\u3002</p> <p>Example</p> <p>\u5bf9\u4e0b\u5217\u72b6\u6001\u8868\u8fdb\u884c\u72b6\u6001\u5206\u914d\uff1a</p> <p></p> <ul> <li>\u5728\u76f8\u540c\u8f93\u5165\u6761\u4ef6\u4e0b\u5177\u6709\u76f8\u540c\u6b21\u6001\u7684\u73b0\u6001\uff0c\u5e94\u5c3d\u53ef\u80fd\u5206\u914d\u76f8\u90bb\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\uff1aA \u548c B\uff0cA \u548c C \u5e94\u76f8\u90bb</li> <li>\u5728\u76f8\u90bb\u8f93\u5165\u6761\u4ef6\uff0c\u540c\u4e00\u73b0\u6001\u7684\u6b21\u6001\u5e94\u5c3d\u53ef\u80fd\u5206\u914d\u76f8\u90bb\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\uff1aC \u548c D\uff0cC \u548c A\uff0cB \u548c D\uff0cA \u548c B \u5e94\u76f8\u90bb</li> <li>\u8f93\u51fa\u5b8c\u5168\u76f8\u540c\u7684\u73b0\u6001\u5e94\u5c3d\u53ef\u80fd\u5206\u914d\u76f8\u90bb\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\uff1a A\uff0cB\uff0cC \u4e09\u8005\u5e94\u76f8\u90bb\uff0c\u5373 A \u548c B\uff0cA \u548c C\uff0cB \u548c C\u5e94\u76f8\u90bb</li> <li>\u6700\u5c0f\u5316\u72b6\u6001\u8868\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u72b6\u6001\u6216\u521d\u59cb\u72b6\u6001\u5e94\u5206\u914d\u903b\u8f91 0\uff1aA \u5206\u914d\u4e3a\u903b\u8f91 0</li> </ul> <p>\u7531\u6b64\u5f97\u5230\u72b6\u6001\u5206\u914d\u65b9\u6848\uff1a</p> <p></p>"},{"location":"cs/computer_logic/chapter4/#sequential-design-example","title":"Sequential Design Example","text":"<p>Design a sequential modulo 3 accumulator for 2-bit operands.</p> <ul> <li>Modulo n adder: an adder that gives the result of the addition as the remainder of the sum divided by n.</li> <li>Accumulator: a circuit that \"accumulates\" the sum of its input operands over time - it adds each input operand to the stored sum, which is initially 0. </li> </ul> <p>Stored sum: \\((Y_1, Y_0)\\). Input: \\((X_1, X_0)\\). Output: \\((Z_1, Z_0)\\)</p> <p>State diagram:</p> <p>State table:</p> <p>State assignment \\(\\to\\) Flip-flop input equations.</p>"},{"location":"cs/computer_logic/chapter4/#other-flip-flop-types","title":"Other Flip-Flop Types","text":""},{"location":"cs/computer_logic/chapter4/#j-k-flip-flop","title":"J-K Flip-flop","text":"<p>Similar to SR flip-flop, but without the invalid state.</p> <p>\\(J = K = 1\\) \u65f6\uff0c\u72b6\u6001\u6c42\u53cd\u3002</p> <p>\u4e3b\u4ece\u89e6\u53d1\u5668\u5b9e\u73b0\uff0c\u6709 1s catching \u95ee\u9898\u3002</p> <p>\u7528 D \u89e6\u53d1\u5668\u5b9e\u73b0\uff0c\u907f\u514d 1s catching \u95ee\u9898\uff1a</p> <p>\u4e0a\u5347\u6cbf\u89e6\u53d1\u3002</p>"},{"location":"cs/computer_logic/chapter4/#t-flip-flop","title":"T Flip-flop","text":"<ul> <li>For \\(T = 0\\), no change in state</li> <li>For \\(T = 1\\), changes to opposite state</li> </ul> <p>Same as a J-K flip-flop with \\(J = K = T\\)</p> <p>\u4e00\u822c\u4f1a\u5f3a\u5236\u8bbe\u7f6e\u521d\u6001\u3002</p> <p>\u7528 D \u89e6\u53d1\u5668\u5b9e\u73b0\uff1a</p>"},{"location":"cs/computer_logic/chapter4/#basic-flip-flop-descriptors","title":"Basic Flip-Flop Descriptors","text":"<p>Used in analysis:</p> <ul> <li>characteristic table \u7279\u5f81\u8868: defines the next state of the flip-flop in terms of flip-flop inputs and current state</li> <li>characteristic equation \u7279\u5f81\u65b9\u7a0b: defines the next state of the flip-flop as a Boolean function of flip-flop inputs and current state</li> </ul> <p>Used in design:</p> <ul> <li>excitation table \u6fc0\u52b1\u8868: defines the flip-flop input variable values as function of the current state and next state</li> </ul> <p>D Flip-Flop Descriptors</p> <p>Characteristic table:</p> <p></p> <p>Characteristic equation:</p> \\[     Q(t + 1) = D \\] <p>Excitation table:</p> <p></p> <p>S-R Flip-Flop Descriptors</p> <p>Characteristic table:</p> <p></p> <p>Characteristic equation:</p> \\[     Q(t + 1) = S + \\bar R \\cdot Q(t), S \\cdot R = 0 \\] <p>Excitation table:</p> <p></p>"},{"location":"cs/computer_logic/chapter5/","title":"Digital Hardware Implementation","text":""},{"location":"cs/computer_logic/chapter5/#programmable-implementation-technologies","title":"Programmable Implementation Technologies","text":""},{"location":"cs/computer_logic/chapter5/#programmable-technologies","title":"Programmable Technologies","text":"<ul> <li> <p>Control connections \u8fde\u63a5\u63a7\u5236</p> <ul> <li>Mask programming: \u751f\u4ea7\u65f6\u8fdb\u884c\u8fde\u63a5\u3002\u4e0d\u53ef\u518d\u7f16\u7a0b\u3002</li> <li>Fuse: \u4fdd\u9669\u4e1d\uff0c\u52a0\u5927\u7535\u6d41\u70e7\u65ad\u4fdd\u9669\u4e1d\uff0c\u65ad\u5f00\u8fde\u63a5\u3002\u4e0d\u53ef\u518d\u7f16\u7a0b\u3002</li> <li>Antifuse: \u7535\u6d41\u70e7\u65ad\u4fdd\u9669\u4e1d\uff0c\u77ed\u63a5\u8fde\u63a5\u3002\u4e0d\u53ef\u518d\u7f16\u7a0b\u3002</li> <li>Single-bit storage element: \u5b58\u50a8\u67d0\u4e2a\u4f4d\u662f\u5426\u8fde\u63a5\u3002\u53ef\u518d\u7f16\u7a0b\u3002</li> </ul> </li> <li> <p>Build lookup tables: \u591a\u8def\u9009\u62e9\u5668\u3002\u53ef\u518d\u7f16\u7a0b\u3002</p> </li> <li> <p>Control transistor switching \u9009\u62e9\u63a7\u5236</p> <ul> <li> <p>Stored charge on a floating transistor gate: \u7535\u8377\u5b58\u50a8\u5728\u6d6e\u52a8\u6676\u4f53\u7ba1\u6805\u6781\u4e0a\u3002\u53ef\u518d\u7f16\u7a0b\u3002</p> <ol> <li>EPROM: \u7535\u5b50\u53ef\u64e6\u9664\u53ef\u7f16\u7a0b\u53ea\u8bfb\u5b58\u50a8\u5668\u3002\u7528\u7d2b\u5916\u7ebf\u64e6\u9664\u3002</li> <li>EEPROM: \u7535\u5b50\u53ef\u64e6\u9664\u53ef\u7f16\u7a0b\u53ea\u8bfb\u5b58\u50a8\u5668\u3002\u7528\u7535\u64e6\u9664\u3002</li> <li>Flash memory: \u95ea\u5b58\u3002\u7528\u7535\u64e6\u9664\u3002\u53ef\u518d\u7f16\u7a0b\u3002</li> </ol> </li> </ul> </li> </ul> <p>\u5206\u7c7b</p> <ol> <li> <p>Permanent: </p> <ul> <li>Mask programming</li> <li>Fuse</li> <li>Antifuse</li> </ul> </li> <li> <p>Reprogrammable:</p> <ul> <li> <p>Volatile: \u7535\u6e90\u65ad\u7535\u540e\u6570\u636e\u4e22\u5931</p> <ul> <li>Single-bit storage element</li> </ul> </li> <li> <p>Nonvolatile: \u7535\u6e90\u65ad\u7535\u540e\u6570\u636e\u4e0d\u4e22\u5931</p> <ul> <li>EPROM</li> <li>EEPROM</li> <li>Flash memory</li> </ul> </li> </ul> </li> </ol>"},{"location":"cs/computer_logic/chapter5/#programmable-configurations","title":"Programmable Configurations","text":"<ul> <li>Read Only Memory (ROM): a fixed array of AND gates and a programmable array of OR gates</li> <li>Programmable Array Logic (PAL): a programmable array of AND gates feeding a fixed array of OR gates.</li> <li>Programmable Logic Array (PLA): a programmable array of AND gates feeding a programmable array of OR gates.</li> <li>Complex Programmable Logic Device (CPLD) / Field-Programmable Gate Array (FPGA): complex enough to be called \"architectures\", use lookup tables.</li> </ul>"},{"location":"cs/computer_logic/chapter5/#read-only-memory","title":"Read Only Memory","text":"<ul> <li>N input lines, </li> <li>M output lines,</li> <li>2N decoded minterms.</li> </ul> <p>\u4ea4\u53c9\u70b9\u753b X\uff0c\u8868\u793a\u8be5\u4ea4\u53c9\u70b9\u8fde\u63a5\u3002\u53ef\u7f16\u7a0b\u3002</p> <p>Example</p> <p>\u5b9e\u73b0\u8f93\u5165 \\(x\\)\uff0c\u8f93\u51fa \\(x^2\\)\u3002</p> <p></p> <p>\u7531\u4e8e \\(B_0 = A_0, B_1 = 0\\)\uff0c\u6545\u53ea\u9700\u8981 \\(8\\times 4\\) ROM\u3002</p> <p></p> <p>\u6839\u636e\u771f\u503c\u8868\u7f16\u7a0b ROM\uff1a</p> <p></p>"},{"location":"cs/computer_logic/chapter5/#programmable-array-logic","title":"Programmable Array Logic","text":"<p>Having a programmable set of ANDs combined with fixed ORs.</p> <p>\uff08F1 \u8fd4\u56de\u5230\u8f93\u5165\uff1a\u7f13\u89e3\u4e86\u8f93\u5165\u7684\u9650\u5236\uff09</p>"},{"location":"cs/computer_logic/chapter5/#programmable-logic-array","title":"Programmable Logic Array","text":"<p>Having a programmable set of ANDs combined with a programmable set of ORs.</p> <p>\u5f02\u6216\u95e8\uff1a\u91cd\u7528\u4e0e\u9879\uff0c\u7f13\u89e3\u4e0e\u95e8\u6570\u91cf\u7684\u9650\u5236\u3002</p> <p>Example</p> <p></p> <p>\uff08\u6c42\u6574\u4f53\u53d6\u53cd\u4e4b\u540e\u7684\u5316\u7b80\u7ed3\u679c\uff1a\u5c06 k-map \u53cd\u8f6c\uff09</p> <p></p>"},{"location":"cs/computer_logic/chapter6/","title":"Registers and Register Transfers","text":""},{"location":"cs/computer_logic/chapter6/#registers-microoperations-and-implementations","title":"Registers, Microoperations and Implementations","text":"<p>Register: a collection of binary storage elements </p> <p>In theory, a register is a sequential logic which can be defined by a state table\u3002</p> <p>2-bit Register</p> <p></p> <p>State table:</p> <p></p> <p>\u5f53\u4f4d\u6570\u589e\u52a0\u65f6\uff0c\u72b6\u6001\u8868\u4f1a\u53d8\u5f97\u975e\u5e38\u5927\uff0c\u56e0\u6b64\u9700\u8981\u4e00\u79cd\u66f4\u597d\u7684\u65b9\u5f0f\u6765\u63cf\u8ff0\u5bc4\u5b58\u5668\u3002</p> <p>\u8bbe\u8ba1\u5bc4\u5b58\u5668\u7684\u65b9\u6cd5\uff1a</p> <ul> <li> <p>Add predefined combinational circuits to registers \u7ed9\u5bc4\u5b58\u5668\u6dfb\u52a0\u9884\u5b9a\u4e49\u7684\u7ec4\u5408\u7535\u8def</p> <p>Example: To count up, connect the register flip-flops to an incrementer</p> </li> <li> <p>Design individual cells using the state diagram/state table model and combine them into a register \u5c06\u5bc4\u5b58\u5668\u5206\u89e3\u4e3a\u5355\u72ec\u7684\u5355\u5143\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u7ec4\u5408\u6210\u5bc4\u5b58\u5668</p> </li> </ul>"},{"location":"cs/computer_logic/chapter6/#register-storage-and-load-enable","title":"Register Storage and Load Enable","text":"<p>\u5bc4\u5b58\u5668\u529f\u80fd\uff1a</p> <ul> <li> <p>Load is a frequent name for the signal that controls register storage and loading</p> <ul> <li>Load = 1: Load the values on the data inputs</li> <li>Load = 0: Store the values in the register</li> </ul> </li> </ul> <p>\u9700\u8981\u5b9e\u73b0\u6570\u636e\u4fdd\u6301\uff0c\u5728 Load \u4fe1\u53f7\u63a7\u5236\u4e0b\u8fdb\u884c\u6570\u636e\u5b58\u50a8\u548c\u52a0\u8f7d\u3002\uff08\u4f4e\u7535\u5e73\u6709\u6548\uff09</p> <p>Solution:</p> <ol> <li> <p>Registers with Clock Gating</p> <p></p> <p>\\(clk_G = \\overline{Load} + clk\\)</p> <p>\u7f3a\u70b9\uff1a\u51fa\u73b0\u65f6\u949f\u6b6a\u659c\u3002\u4e0d\u5e94\u51fa\u73b0\u5728\u540c\u6b65\u7535\u8def\u4e2d\u3002</p> </li> <li> <p>Registers with Load-Controlled Feedback</p> <p></p> <p>\u4f7f\u7528\u591a\u8def\u590d\u7528\u5668\u5b9e\u73b0 load \u63a7\u5236\u7684\u6570\u636e\u4fdd\u6301\u3002</p> </li> </ol>"},{"location":"cs/computer_logic/chapter6/#register-transfer-operations","title":"Register Transfer Operations","text":"<p>The movement and processing of data stored in registers.</p> <p>Three basic components:</p> <ul> <li>set of registers</li> <li>operations</li> <li>control of operations</li> </ul> <p>Elementary Operations: load, count, shift, add, bitwise \"OR\", etc, called microoperations.</p> <p>Control of Operations: a set of signals that specify the microoperations to be performed and the registers in which they are to be performed. \u63a7\u5236\u54ea\u4e9b\u5bc4\u5b58\u5668\u4e4b\u95f4\u505a\u4ec0\u4e48\u64cd\u4f5c\u3002</p>"},{"location":"cs/computer_logic/chapter6/#register-notations","title":"Register Notations","text":"<ul> <li>Letters and numbers: \u8868\u793a\u5bc4\u5b58\u5668\u6807\u8bc6\u3002</li> <li>Parentheses<code>()</code>: \u8868\u793a\u5bc4\u5b58\u5668\u7684\u67d0\u4e00\u4f4d\u6216\u67d0\u4e00\u533a\u95f4\u7684\u4f4d\uff0c\u5982 \\(R_1(0)\\)\u3002</li> <li>Arrow <code>&lt;-</code>: \u8868\u793a\u5bc4\u5b58\u5668\u5185\u5bb9\u7684\u4f20\u8f93\uff0c\u5982 \\(R_1 \\leftarrow R_2\\)\u3002</li> <li>Brackets <code>[]</code> \u2013 Specifies a memory address \u8868\u793a\u5185\u5b58\u5730\u5740\u3002\u5982 \\(R_1 \\leftarrow M[PC]\\) \u8868\u793a\u628a PC \u547d\u4ee4\u7684\u5185\u5b58\u5730\u5740\u5b58\u50a8\u5230 R1 \u4e2d\u3002</li> </ul>"},{"location":"cs/computer_logic/chapter6/#conditional-transfer","title":"Conditional Transfer","text":"<p>K \u63a7\u5236\u4f20\u8f93\u7684\u6761\u4ef6\uff0c\u5f53 K \u4e3a 1 \u65f6\uff0c\u4f20\u8f93\u53d1\u751f\u3002</p> <p>Example</p> <p>If (K1=1) then (\\(R_2 \\leftarrow R_1\\)) \u5199\u6210 K1: \\(R_2 \\leftarrow R_1\\)\u3002</p> <p>\u5373 K1 \u63a7\u5236 R2 \u7684\u63a5\u53d7\uff0cR1 \u7684\u5185\u5bb9\u59cb\u7ec8\u5df2\u7ecf\u51c6\u5907\u597d\uff0c\u5f53 K1 \u4e3a 1 \u65f6\uff0cR2 \u63a5\u53d7 R1 \u7684\u5185\u5bb9\u3002</p> <p></p>"},{"location":"cs/computer_logic/chapter6/#arithmetic-microoperations","title":"Arithmetic Microoperations","text":"<p>Shift Microoperations:</p>"},{"location":"cs/computer_logic/chapter6/#register-cell-design","title":"Register Cell Design","text":"<p>Assume that a register consists of identical cells.</p> <p>Each cell has:</p> <ul> <li>a register</li> <li>Data inputs to the register</li> <li>Control input combinations to the register \u63a7\u5236\u4fe1\u53f7</li> <li>A set of register functions \u5bf9\u5e94\u6bcf\u4e2a\u63a7\u5236\u4fe1\u53f7\u7684\u64cd\u4f5c</li> <li>A hold state specification \u4fdd\u6301\u72b6\u6001</li> </ul> <p>Example</p> <p>Register A (m-bits) Specification:</p> <ul> <li>Data input: B</li> <li>Control inputs (CX, CY)</li> <li>Control input combinations (0,0), (0,1) (1,0)</li> <li>Register transfers:<ul> <li>CX: \\(A \\leftarrow B \\vee A\\)</li> <li>CY: \\(A \\leftarrow B \\oplus A\\)</li> </ul> </li> <li>Hold state: (0,0)</li> <li>Load control: Load = CX + CY</li> </ul> <p>Sequential Circuit Design Approach:</p> <p>Find a state diagram or state table \u73b0\u6001\u3001\u8f93\u5165\u3001\u63a7\u5236\u4fe1\u53f7\u5171\u540c\u51b3\u5b9a\u6b21\u6001\u3002</p> <p>\u7eed</p> <p>State Table:</p> <p></p>"},{"location":"cs/computer_logic/chapter6/#register-transfer-structures","title":"Register Transfer Structures","text":""},{"location":"cs/computer_logic/chapter6/#multiplexer-based-transfers","title":"Multiplexer-Based Transfers","text":"<p>Multiplexers connected to register inputs produce flexible transfer structures.</p> <p>Example</p> <p></p> <p>R0 load \u4fe1\u53f7\u4e3a \\(K_1 + K_2 \\overline{K_1} = K_1 + K_2\\)</p>"},{"location":"cs/computer_logic/chapter6/#multiplexer-and-bus-based-transfers-for-multiple-registers","title":"Multiplexer and Bus-Based Transfers for Multiple Registers","text":"<ul> <li> <p>Dedicated MUX-Based Transfers</p> <p></p> <p>\u5f00\u9500\u592a\u5927\u3002</p> </li> <li> <p>Multiplexer Bus</p> <p></p> <p>\u901a\u8fc7\u603b\u7ebf\u8fde\u63a5\u591a\u4e2a\u5bc4\u5b58\u5668\uff0c\u901a\u8fc7\u63a7\u5236\u603b\u7ebf\u7684\u4f20\u8f93\u6765\u63a7\u5236\u5bc4\u5b58\u5668\u7684\u4f20\u8f93\u3002</p> <p>\u4f18\u70b9\uff1a\u7075\u6d3b\uff0c\u5f00\u9500\u5c0f\u3002</p> </li> <li> <p>Three-State Bus</p> <p></p> <p>\u901a\u8fc7\u4e09\u6001\u95e8\u63a7\u5236\u603b\u7ebf\u7684\u4f20\u8f93\u3002</p> </li> </ul>"},{"location":"cs/computer_logic/chapter6/#shift-registers","title":"Shift Registers","text":"<ul> <li>Data input, \\(In\\), is called a serial input or the shift right input.</li> <li>Data output, \\(Out\\), is often called the serial output.</li> <li>The vector \\((A, B, C, Out)\\) is called the parallel output.</li> </ul>"},{"location":"cs/computer_logic/chapter6/#counters","title":"Counters","text":"<p>Counters are sequential circuits which \"count\" through a specific state sequence.  They can count up, count down, or count through other fixed sequences.</p> <ul> <li>Ripple Counters: \u8f93\u5165\u63a5\u5728\u6700\u4f4e\u6709\u6548\u4f4d\u4e0a\uff08LSB\uff09\uff0c\u540e\u9762\u6bcf\u4e00\u4f4d\u7684 clk \u63a5\u5728\u4e0a\u4e00\u4f4d\u7684\u8fdb\u4f4d\u8f93\u51fa\u4e0a\u3002\u4e0d\u662f\u540c\u6b65\u7535\u8def\u3002</li> <li>Synchronous Counters: Logic is used to implement the desired state sequencing. \u540c\u6b65\u7535\u8def\u3002</li> </ul>"},{"location":"cs/computer_logic/chapter6/#ripple-counters","title":"Ripple Counters","text":"<p>\u6bcf\u4e2a\u89e6\u53d1\u5668\u7684\u65f6\u949f\uff0c\u6ca1\u6709\u63a5\u5728\u540c\u4e00\u4e2a\u7cfb\u7edf\u65f6\u949f\u4e0a\uff0c\u662f\u4e00\u4e2a\u5f02\u6b65\u65f6\u5e8f\u7535\u8def\u3002</p>"},{"location":"cs/computer_logic/chapter6/#synchronous-counters","title":"Synchronous Counters","text":"<p>Note</p> <p>\u4f7f\u7528\u4e0e\u95e8\u4fe1\u53f7\u94fe\u63a7\u5236\u8ba1\u6570\uff1a</p> <p></p> <p>\u5f53\u4f4e\u4f4d\u5168\u4e3a 1 \u4e14\u4f7f\u80fd\u4fe1\u53f7\u4e3a 1 \u65f6\uff0c\u9ad8\u4f4d\u6c42\u53cd\u3002</p> <p>\u5f53\u4f4d\u6570\u589e\u52a0\u65f6\u5019\uff0c\u4f7f\u7528 look ahead \u7b80\u5316\u7535\u8def\uff1a\u6bcf\u9694\u82e5\u5e72\u4f4d\uff0c\u5c06\u8f93\u51fa\u4f7f\u7528\u4e0e\u95e8\u63a5\u5728\u4e00\u8d77\u3002</p> <p></p>"},{"location":"cs/computer_logic/chapter6/#other-counters","title":"Other Counters","text":"<ul> <li>Down Counter: counts downward instead of upward</li> <li>Up-Down Counter: counts up or down depending on value a control input such as Up/Down</li> <li>Parallel Load Counter: Has parallel load of values available depending on control input such as Load</li> <li>Modulo n Counter: n \u8fdb\u4f4d\u8ba1\u6570\u5668\uff0c\u5f53\u8ba1\u6570\u5230 n \u65f6\uff0c\u56de\u5230 0\uff0c\u91cd\u65b0\u5f00\u59cb\u8ba1\u6570\u3002</li> </ul>"},{"location":"cs/computer_logic/chapter6/#counter-with-parallel-load","title":"Counter with Parallel Load","text":""},{"location":"cs/computer_logic/chapter6/#modulo-n-counter","title":"Modulo n Counter","text":"<ul> <li> <p>\u4f7f\u7528\u5f02\u6b65\u6e05\u96f6\u5b9e\u73b0\uff1a</p> <p></p> <p>\u7f3a\u70b9\uff1a\u4f1a\u4ea7\u751f\u5f88\u77ed\u7684\u8109\u51b2\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u9519\u8bef\u3002</p> </li> <li> <p>\u4f7f\u7528\u540c\u6b65\u6e05\u96f6\u5b9e\u73b0\uff1a\u63d0\u524d\u51c6\u5907\u597d\u6e05\u96f6\u3002</p> <p></p> <p>\u81ea\u5b9a\u4e49\u521d\u503c\uff1a</p> <p></p> <p>\u4ece 9 \u5f00\u59cb\u8ba1\u6570\u5230 15\u3002</p> </li> </ul>"},{"location":"cs/computer_logic/chapter6/#serial-transfers-and-microoperations","title":"Serial Transfers and Microoperations","text":"<p>\u5bc4\u5b58\u5668\u4e00\u6b21\u53ea\u63a5\u53d7\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\uff0c\u53ef\u4ee5\u4f7f\u5f97\u65f6\u949f\u5468\u671f\u66f4\u77ed\uff0c\u4f46\u662f\u4f20\u8f93\u76f8\u540c\u4f4d\u6570\u7684\u6570\u636e\u9700\u8981\u66f4\u591a\u7684\u65f6\u949f\u5468\u671f\u3002</p> <p>\u53ef\u4ee5\u4f7f\u7528\u66f4\u7b80\u5355\u7684\u7535\u8def\u5b9e\u73b0 microoperations: By using two shift registers for operands, a full adder, and a flip flop (for the carry), we can add two numbers serially, starting at the least significant bit.</p> <p>Serial Adder</p> <p></p>"},{"location":"cs/computer_logic/chapter7/","title":"Memory Basics","text":""},{"location":"cs/computer_logic/chapter7/#memory-definitions","title":"Memory Definitions","text":"<ul> <li> <p>Memory: A collection of storage cells together with the necessary circuits to transfer information to and from them.</p> <p>\u4e00\u7ec4\u5b58\u50a8\u5355\u5143\u7684\u96c6\u5408\uff0c\u53ef\u4ee5\u8bfb\u3001\u5199\u3002</p> </li> <li> <p>Memory Organization: The basic architectural structure of a memory in terms of how data is accessed.</p> <p>\u5185\u5b58\u7684\u67b6\u6784\uff0c\u5185\u5b58\u80fd\u5b58\u653e\u591a\u5c11\u6570\u636e\uff0c\u4e00\u4e2a\u5b57\u591a\u5c11\u4f4d\uff0c\u5982\u4f55\u8bbf\u95ee\u5185\u5b58\u7b49\u3002</p> </li> <li> <p>Random Access Memory (RAM): A memory organized such that data can be transferred to or from any cell (or collection of cells) in a time that is not dependent upon the particular cell selected.</p> </li> <li> <p>Memory Address: A vector of bits that identifies a particular memory element (or collection of elements).</p> <p>\u5185\u5b58\u5730\u5740\uff0c\u4e00\u4e2a\u5217\u8868\u7684\u7f16\u53f7\uff0c\u901a\u8fc7\u7f16\u53f7\u53ef\u4ee5\u8bfb\u5199\u5185\u5b58\u7684\u6570\u636e\u3002</p> </li> <li> <p>Typical data elements:</p> <ul> <li>Bit: A single binary digit (0 or 1).</li> <li>Byte: A group of 8 bits.</li> <li> <p>Word: A group of bits that is treated as a unit by the computer hardware.</p> <p>\u4e00\u6b21\u8bfb\u5199\u7684\u6570\u636e\u5355\u5143\uff0c\u4e00\u822c\u4e3a 8 \u4f4d\u6216 16 \u4f4d\u3002</p> </li> </ul> </li> <li> <p>Memory Data: a bit or a collection of bits to be stored into or accessed from memory cells.</p> <p>\u5199\u5165\u6216\u8bfb\u53d6\u7684\u6570\u636e\u3002</p> </li> <li> <p>Memory Operations: operations on memory data supported by the memory unit. </p> </li> </ul>"},{"location":"cs/computer_logic/chapter7/#memory-organization","title":"Memory Organization","text":"<p>Organized as an indexed array of words. Value of the index for each word is the memory address.</p> <p>Memory Block Diagram</p> <p>A basic memory system is shown here \u57fa\u7840\u7684\u5185\u5b58\u7cfb\u7edf\uff1a</p> <p></p> <ul> <li>k address lines are decoded to address \\(2^k\\) words of memory.</li> <li>Each word is n bits.</li> <li>Read and Write are single control lines defining the simplest of memory operations.</li> </ul>"},{"location":"cs/computer_logic/chapter7/#memory-operations","title":"Memory Operations","text":"<p>Memory operations require the following:</p> <ul> <li>Data: data written to, or read from, memory as required by the operation. \u8f93\u5165\u6216\u8f93\u51fa\u7684\u6570\u636e\u3002</li> <li> <p>Address: specifies the memory location to operate on. The address lines carry this information into the memory.</p> <p>Typically: n bits specify locations of \\(2^n\\) words.</p> </li> <li> <p>An operation: Information sent to the memory and interpreted as control information which specifies the type of operation to be performed. \u63a7\u5236\u4fe1\u53f7\uff0c\u6307\u5b9a\u64cd\u4f5c\u7c7b\u578b\u3002</p> <p>Typically: a single bit specifies READ or WRITE.</p> <ul> <li> <p>Read Memory: an operation that reads a data value stored in memory:</p> <p>\u8bfb\u53d6\u5185\u5b58\u4e2d\u7684\u6570\u636e\u3002</p> <ol> <li>Place a valid address on the address lines.</li> <li>Toggle the memory read control line.</li> <li>Wait for the read data to become stable.</li> </ol> </li> <li> <p>Write Memory: an operation that writes a data value to memory:</p> <p>\u5199\u5165\u6570\u636e\u5230\u5185\u5b58\u3002</p> <ol> <li>Place a valid address on the address lines and valid data on the data lines.</li> <li>Toggle the memory write control line.</li> </ol> </li> </ul> </li> </ul>"},{"location":"cs/computer_logic/chapter7/#memory-operation-timing","title":"Memory Operation Timing","text":"<p>Most basic memories are asynchronous</p> <ul> <li> <p>Read Timing</p> <p></p> <p><code>data valid</code> \u4e4b\u524d\u9700\u8981\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4\uff0c\u56e0\u4e3a\u5185\u5b58\u9700\u8981\u4e00\u5b9a\u7684\u65f6\u95f4\u8bfb\u53d6\u6570\u636e\u3002\u8fd9\u4e2a\u65f6\u95f4\u53d6\u51b3\u4e8e\u5185\u5b58\u7684\u901f\u5ea6\u3002</p> </li> <li> <p>Write Timing</p> <p></p> <p>\u5728 R/W \u4fe1\u53f7\u4e0b\u964d\u65f6\u8981\u5c06 addr \u9501\u5b58\u8d77\u6765\uff0c\u4e0a\u5347\u65f6\u8981\u9884\u5148\u628a\u6570\u636e\u51c6\u5907\u597d\u3002</p> </li> </ul>"},{"location":"cs/computer_logic/chapter7/#ram-integrated-circuits","title":"RAM Integrated Circuits","text":"<p>Types of random access memory:</p> <ul> <li> <p>Static RAM (SRAM): information stored in latches</p> <p>\u4fe1\u606f\u5b58\u50a8\u5728\u9501\u5b58\u5668\u4e2d\uff0c\u4e0d\u9700\u8981\u5237\u65b0\u3002</p> </li> <li> <p>Dynamic RAM (DRAM): information stored as electrical charges on capacitors</p> <p>\u4fe1\u606f\u5b58\u50a8\u5728\u7535\u5bb9\u4e2d\uff0c\u9700\u8981\u5237\u65b0\u3002</p> <ul> <li>Charge \"leaks\" off: \u7535\u5bb9\u4f1a\u6f0f\u7535</li> <li>Periodic refresh  of charge required: \u9700\u8981\u5b9a\u671f\u5237\u65b0</li> </ul> </li> </ul> <p>Dependence on Power Supply:</p> <ul> <li>Volatile: loses stored information when power turned off. \u6389\u7535\u540e\u4f1a\u4e22\u5931\u6570\u636e\u3002</li> <li>Non-volatile: retains information when power turned off. \u6389\u7535\u540e\u4e0d\u4f1a\u4e22\u5931\u6570\u636e\u3002</li> </ul> <p>Address bus and Data bus: \u6570\u636e\u603b\u7ebf\u548c\u5730\u5740\u603b\u7ebf</p> <ul> <li>Address bus: \u4f20\u8f93\u5730\u5740\uff0c\\(\u5b58\u50a8\u5bb9\u91cf=2^{\u5730\u5740\u603b\u7ebf\u4f4d\u6570}\\)</li> <li>Data bus: \u4f20\u8f93\u6570\u636e\uff0c\\(\u4e00\u6b21\u5904\u7406\u6570\u636e\u7684\u4f4d\u5bbd=\u6570\u636e\u603b\u7ebf\u4f4d\u6570\\)</li> </ul>"},{"location":"cs/computer_logic/chapter7/#static-ram","title":"Static RAM","text":""},{"location":"cs/computer_logic/chapter7/#storage-cell","title":"Storage Cell","text":"<ul> <li> <p>SR Latch: stores one bit of information</p> <p>\u4e00\u4e2a\u9501\u5b58\u5668\uff0c\u5b58\u50a8\u4e00\u4f4d\u4fe1\u606f\u3002</p> </li> <li> <p>Select: select input for control</p> <p>\u63a7\u5236\u4fe1\u53f7\uff0c\u63a7\u5236\u8bfb\u5199\u3002\u5982\u679c\u4e3a 1\uff0c\u90a3\u4e48\u6570\u636e\u4f1a\u88ab\u5199\u5165\u5230\u9501\u5b58\u5668\u4e2d\u3002\u5982\u679c\u4e3a 0\uff0c\u90a3\u4e48\u9501\u5b58\u5668\u7684\u503c\u4e0d\u4f1a\u88ab\u4fee\u6539\u548c\u8bfb\u51fa\u3002</p> </li> <li> <p>Dual Rail Data Inputs \\(B\\) and \\(\\bar B\\): dual rail \u6570\u636e\u8f93\u5165</p> </li> <li>Dual Rail Data Outputs \\(C\\) and \\(\\bar C\\): dual rail \u6570\u636e\u8f93\u51fa</li> </ul>"},{"location":"cs/computer_logic/chapter7/#bit-slice","title":"Bit Slice","text":"<p>Bit Select: \u63a7\u5236\u6574\u4e2a bit slice \u7684\u5de5\u4f5c\uff0c\u5f53 Bit Select \u4e3a 0 \u65f6\uff0c\u6574\u4e2a bit slice \u4e0d\u5de5\u4f5c\uff1b\u5f53 Bit Select \u4e3a 1 \u65f6\uff0cbit slice \u7684\u8bfb\u5199\u6536 Read/Write \u63a7\u5236\u3002</p> <p>\u5f53 Bit Select \u4e3a 1 \u65f6\uff1a</p> <ul> <li>Read Operation: Read/Write \u4e3a 1\uff0c\u6b64\u65f6 Data in \u5904\u4e0e\u95e8\u4e0d\u5de5\u4f5c\uff0c\u9501\u5b58\u5668\u4fdd\u6301\u539f\u6765\u7684\u503c\u3002\u6839\u636e Word Select \u9009\u62e9\u8f93\u51fa\u7684\u6570\u636e\u3002</li> <li>Write Operation: Read/Write \u4e3a 0\uff0c\u6b64\u65f6 Data in \u5904\u4e0e\u95e8\u5de5\u4f5c\uff0c\u6839\u636e Word Select \u9009\u62e9\u5199\u5165\u7684\u6570\u636e\u3002</li> </ul>"},{"location":"cs/computer_logic/chapter7/#cell-arrays-and-coincident-selection","title":"Cell Arrays and Coincident Selection","text":"<ul> <li>Decoder: \u8bd1\u7801\u5668\uff0c\u5c06\u5730\u5740\u8bd1\u7801\u4e3a\u63a7\u5236\u4fe1\u53f7\uff0c\u5c06\u5bf9\u5e94\u5730\u5740\u4e0a RAM cell \u7684 Select \u7f6e\u4e3a 1\u3002</li> <li>\u4e09\u6001\u95e8\uff1a\u4f7f\u5f97 RAM chip \u7684\u8f93\u51fa\u53ef\u4ee5\u4e0e\u603b\u7ebf\u8fde\u63a5\u3002</li> </ul> <p>\u884c\u5217\u8bd1\u7801</p> <p>\\(8\\times 2\\) RAM</p> <p></p> <p>RAM slice 0 \u548c 2\u30011 \u548c 3 \u4f5c\u4e3a\u6570\u636e\u7684\u9ad8\u4f4e\u4f4d\u3002</p>"},{"location":"cs/computer_logic/chapter7/#making-larger-memories","title":"Making Larger Memories","text":"<p>\u9ad8\u4e24\u4f4d\u63a5\u5165\u8bd1\u7801\u5668\uff0c\u4f4e\u4e24\u4f4d\u63a5\u5165 RAM chip\uff0c\u51cf\u5c11\u590d\u6742\u5ea6\u3002</p>"},{"location":"cs/computer_logic/chapter7/#making-wider-memories","title":"Making Wider Memories","text":"<p>\u589e\u52a0\u4f4d\u5bbd\uff0c\u6bcf\u5757 RAM chip \u5c31\u4ee3\u8868\u6700\u540e\u8f93\u51fa\u7684\u67d0\u4e00\u4f4d\u3002</p>"},{"location":"cs/computer_logic/chapter7/#dynamic-ram","title":"Dynamic RAM","text":"<p>Basic Principle: Storage of information on capacitors. \u4fe1\u606f\u5b58\u50a8\u5728\u7535\u5bb9\u4e0a\u3002</p>"},{"location":"cs/computer_logic/chapter7/#dram-cell","title":"DRAM Cell","text":"<ul> <li>Capacitor: \u7535\u5bb9</li> <li>Switch: \u5f00\u5173</li> </ul> <p>\u57fa\u672c\u529f\u80fd\uff1a</p> <ul> <li>Store: \u7528\u4e09\u6001\u95e8\u5c06\u7535\u5bb9\u9501\u4f4f\u3002</li> <li>Write: \u5c06\u7535\u5bb9\u5145\u7535\u6216\u653e\u7535\u3002</li> <li>Read: \u8bfb\u53d6\u7535\u5bb9\u7684\u7535\u538b\u3002</li> </ul>"},{"location":"cs/computer_logic/chapter7/#dram-slice","title":"DRAM Slice","text":""},{"location":"cs/computer_logic/chapter7/#block-diagram","title":"Block Diagram","text":"<p>Read and Write Operations: \u5206\u5f00\u8bfb\u53d6\u884c\u5217\u5730\u5740\uff0cCPU \u63d0\u4f9b\u4fe1\u53f7\u544a\u8bc9 DRAM \u5f53\u524d\u8bfb\u53d6\u7684\u662f\u884c\u5730\u5740\u8fd8\u662f\u5217\u5730\u5740\u3002</p> <ul> <li> <p>Application of row address: \\(\\overline{RAS}\\)</p> <p>\u8bfb\u53d6\u884c\u5730\u5740\uff0c\u5c06\u884c\u5730\u5740\u653e\u5165\u8bd1\u7801\u5668\uff0c\u5c06\u5bf9\u5e94\u7684\u884c\u7684\u7535\u5bb9\u653e\u5165\u8bfb\u53d6\u7535\u8def\u3002</p> </li> <li> <p>Application of column address: \\(\\overline{CAS}\\)</p> <p>\u8bfb\u53d6\u5217\u5730\u5740\uff0c\u5c06\u5217\u5730\u5740\u653e\u5165\u8bd1\u7801\u5668\uff0c\u5c06\u5bf9\u5e94\u7684\u5217\u7684\u7535\u5bb9\u653e\u5165\u8bfb\u53d6\u7535\u8def\u3002</p> </li> </ul>"},{"location":"cs/computer_logic/chapter7/#dynamic-ram-timing","title":"Dynamic RAM Timing","text":"<ol> <li> <p>Read Timing</p> <p></p> </li> <li> <p>Write Timing</p> <p></p> </li> </ol>"},{"location":"cs/computer_logic/chapter7/#dram-types","title":"DRAM Types","text":"<ul> <li>Synchronous DRAM (SDRAM)</li> <li>Double Data Rate SDRAM (DDR SDRAM)</li> <li>RAMBUS\u00ae DRAM (RDRAM)</li> </ul> <p>Synchronous DRAM:</p> <p>Transfers to and from the DRAM are synchronize with a clock\u3002</p> <p>\u6709\u65f6\u949f\uff0c\u4e00\u6b21\u53ef\u4ee5\u8bfb\u51fa\u591a\u4e2a\u6570\u636e\u3002</p> <p>Synchronous DRAM - burst size=4</p> <p></p> <p>Double Data Rate SDRAM:</p> <p>Transfers data on both edges of the clock. \u5728\u65f6\u949f\u7684\u4e0a\u5347\u6cbf\u548c\u4e0b\u964d\u6cbf\u90fd\u53ef\u4ee5\u8bfb\u51fa\u6570\u636e\u3002</p> <p>Provides a transfer rate of 2 data words per clock cycle.</p> <p>RAMBUS\u00ae DRAM:</p> <p>Uses a packet-based bus for interaction between the RDRAM ICs and the memory bus to the processor.</p> <p>The bus consists of:</p> <ul> <li>A 3-bit row address bus</li> <li>A 5-bit column address bus</li> <li>A 16 or 18-bit (for error correction) data bus</li> </ul> <p>\u4f7f\u7528\u5305\u4f20\u8f93\uff0c\u4e00\u6b21\u53ef\u4ee5\u8bfb\u51fa\u591a\u4e2a\u6570\u636e\u3002</p>"},{"location":"cs/database/","title":"\u6570\u636e\u5e93\u7cfb\u7edf","text":"<p>Info</p> <p>\u672c\u6587\u6863\u4e3a\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u5b66\u4e60\u7b14\u8bb0\uff0c\u6388\u8bfe\u6559\u5e08\u4e3a \u9648\u521a \u3002</p>"},{"location":"cs/database/chapter1/","title":"Introduction","text":"<p>What is a database?</p> <ul> <li>Database: A very large, integrated collection of data. \u6570\u636e\u96c6\u5408\u3002</li> <li> <p>Database Management System (DBMS): A software system designed to store, manage, and facilitate access to databases. \u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u3002</p> <p>DBMS = ( Database ) + A set of programs used to access, update and manage the data in database. </p> </li> </ul>"},{"location":"cs/database/chapter1/#purpose-of-database-systems","title":"Purpose of Database Systems","text":""},{"location":"cs/database/chapter1/#database-applications","title":"Database Applications","text":"<p>Data processing and management. \u4e3b\u8981\u7528\u4e8e\u6570\u636e\u5904\u7406\u548c\u7ba1\u7406\u3002</p>"},{"location":"cs/database/chapter1/#dbms-vs-file-processing-systems","title":"DBMS vs. File-processing Systems","text":"<ul> <li> <p>DBMS:</p> <ol> <li>Efficiency and scalability in data access. \u6570\u636e\u8bbf\u95ee\u6548\u7387\u9ad8\uff0c\u53ef\u6269\u5c55\u6027\u5f3a\u3002</li> <li>Reduced application development time. \u7f29\u77ed\u5e94\u7528\u5f00\u53d1\u65f6\u95f4\u3002</li> <li>Data independence. \u6570\u636e\u72ec\u7acb\u6027\u3002</li> <li>Data integrity and security. \u6570\u636e\u5b8c\u6574\u6027\u548c\u5b89\u5168\u6027\u3002</li> <li>Concurrent access and robustness. \u5e76\u53d1\u8bbf\u95ee\u548c\u6570\u636e\u5065\u58ee\u6027\uff08\u53ef\u9760\u6027\uff09\u3002</li> </ol> </li> <li> <p>File-processing Systems:</p> <ol> <li>Data redundancy and inconsistency. \u6570\u636e\u5197\u4f59\u548c\u4e0d\u4e00\u81f4\u3002\u53ef\u80fd\u5b58\u5728\u540c\u4e00\u6570\u636e\u7684\u591a\u4e2a\u526f\u672c\uff0c\u4e14\u8fd9\u4e9b\u526f\u672c\u53ef\u80fd\u4e0d\u540c\u6b65\u3002</li> <li>Difficulty in accessing data. \u6570\u636e\u8bbf\u95ee\u56f0\u96be\u3002\u8bbf\u95ee\u6570\u636e\u9700\u8981\u7f16\u5199\u4e13\u95e8\u7684\u7a0b\u5e8f\u3002</li> <li>Data isolation. \u6570\u636e\u9694\u79bb\u3002\u96be\u4ee5\u68c0\u7d22\u548c\u5171\u4eab\u6570\u636e\u3002</li> <li>Integrity problems. \u5b8c\u6574\u6027\u95ee\u9898\u3002\u96be\u4ee5\u6dfb\u52a0\u65b0\u7684\u7ea6\u675f\u6216\u8005\u66f4\u6539\u5df2\u6709\u7684\u7ea6\u675f\u3002</li> <li>Atomicity problems. \u539f\u5b50\u6027\u95ee\u9898\u3002\u6570\u636e\u8bbf\u95ee\u5931\u8d25\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6574\u4f53\u6570\u636e\u4e0d\u540c\u6b65\u3002</li> <li>Concurrent access anomalies. \u5e76\u53d1\u8bbf\u95ee\u5f02\u5e38\u3002</li> <li>Security problems. \u5b89\u5168\u6027\u95ee\u9898\u3002</li> </ol> </li> </ul>"},{"location":"cs/database/chapter1/#view-of-data","title":"View of Data","text":""},{"location":"cs/database/chapter1/#levels-of-data-abstraction","title":"Levels of Data Abstraction","text":"<ul> <li>Physical level: describes how a record is stored. \u6570\u636e\u7684\u7269\u7406\u5b58\u50a8\u65b9\u5f0f</li> <li>Logical level: describes data stored in database, and the relationships among the data on upper level. \u63cf\u8ff0\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\uff0c\u548c\u6570\u636e\u4e4b\u95f4\u7684\u5173\u7cfb\u3002</li> <li>View level: application programs hide details of data types. Note that views can also hide information (e.g., employee\u2019s salary) for security purposes. \u9009\u62e9\u6027\u5411\u7528\u6237\u5c55\u793a\u6570\u636e\u3002</li> </ul>"},{"location":"cs/database/chapter1/#schemas-and-instances","title":"Schemas and Instances","text":"<ul> <li> <p>Schemas \u67b6\u6784: the structure of the database on different levels. \u6570\u636e\u5e93\u7684\u7ed3\u6784\u3002</p> <ol> <li>Physical schema: database structure design at the physical level.</li> <li>Logical schema: database structure design at the logical level.</li> <li>Subschema: schema at view level.</li> </ol> </li> <li> <p>Instances \u5b9e\u4f8b: the actual content of the database at a particular point in time. \u6570\u636e\u5e93\u7684\u5b9e\u9645\u5185\u5bb9\u3002</p> </li> </ul> <p>\u7c7b\u6bd4</p> <ul> <li>Schema: \u7c7b\u6bd4\u4e3a\u6570\u636e\u7c7b\u578b\uff08type\uff09\u3002</li> <li>Instance: \u7c7b\u6bd4\u4e3a\u5b9e\u4f8b\u5316\u540e\u7684\u53d8\u91cf\uff08variable\uff09\u3002</li> </ul>"},{"location":"cs/database/chapter1/#independence","title":"Independence","text":"<p>Ability to modify a schema definition at one level without affecting a schema definition at a higher level. \u5728\u4e0d\u5f71\u54cd\u66f4\u9ad8\u5c42\u6b21\u7684\u6570\u636e\u7684\u60c5\u51b5\u4e0b\u4fee\u6539\u5e95\u5c42\u6570\u636e\u3002</p> <ul> <li>Physical Data Independence: the ability to modify the physical schema without changing the logical schema. \u53ef\u4ee5\u4fee\u6539\u7269\u7406\u67b6\u6784\u800c\u4e0d\u5f71\u54cd\u903b\u8f91\u67b6\u6784\u3002DBMS \u7684\u4e3b\u8981\u4f18\u52bf</li> <li>Logical Data Independence: protection from changes in the logical schema. \u4fdd\u62a4\u903b\u8f91\u67b6\u6784\u4e0d\u53d7\u5e94\u7528\u7a0b\u5e8f\u7684\u5f71\u54cd\u3002\u6bd4\u8f83\u96be\u4ee5\u5b9e\u73b0\uff0c\u56e0\u4e3a\u5927\u90e8\u5206\u5e94\u7528\u7a0b\u5e8f\u90fd\u4f9d\u8d56\u4e8e\u903b\u8f91\u67b6\u6784\u3002</li> </ul>"},{"location":"cs/database/chapter1/#data-models","title":"Data Models","text":"<p>A collection of conceptual tools for describing data, data relationships, data semantics, and consistency constraints. \u63cf\u8ff0\u6570\u636e\u3001\u6570\u636e\u5173\u7cfb\u3001\u6570\u636e\u8bed\u4e49\u548c\u4e00\u81f4\u6027\u7ea6\u675f\u7684\u6982\u5ff5\u5de5\u5177\u96c6\u5408\u3002</p> <ul> <li>Entity-Relationship model \u5b9e\u4f53\u5173\u7cfb\u6a21\u578b: \u63cf\u8ff0\u5b9e\u4f53\u7684\u5c5e\u6027\u548c\u5b9e\u4f53\u4e4b\u95f4\u7684\u5173\u7cfb\u3002</li> <li>Relational model \u5173\u7cfb\u6a21\u578b: \u63cf\u8ff0\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u3002</li> <li>Others: Object-oriented, Semi-structured data models(XML), etc.</li> </ul> <p>Database design step</p> <ul> <li>Requirements analysis</li> <li>Conceptual design: \u4f7f\u7528 ER \u6a21\u578b</li> <li>Logical design: \u4f7f\u7528\u5173\u7cfb\u6a21\u578b</li> <li>...</li> </ul>"},{"location":"cs/database/chapter1/#database-language","title":"Database Language","text":"<ul> <li>Data Definition Language (DDL): Specification notation for defining the database schema. \u7528\u4e8e\u5b9a\u4e49\u6570\u636e\u5e93\u67b6\u6784\u7684\u89c4\u8303\u7b26\u53f7\u3002</li> <li>Data Manipulation Language (DML): Language for accessing and manipulating the data organized by appropriate data model. \u7528\u4e8e\u8bbf\u95ee\u548c\u64cd\u4f5c\u6570\u636e\u7684\u8bed\u8a00\u3002</li> <li>Data Control Language (DCL)</li> </ul>"},{"location":"cs/database/chapter1/#ddl","title":"DDL","text":"<p>Specify a database schema by a set of definitions expressed by a data-definition language (DDL). The DDL is also used to specify additional properties of the data. DDL \u7528\u4e8e\u5b9a\u4e49\u5173\u7cfb\u6a21\u5f0f\u3001\u5220\u9664\u5173\u7cfb\u3001\u4fee\u6539\u5173\u7cfb\u6a21\u5f0f\u4ee5\u53ca\u521b\u5efa\u6570\u636e\u5e93\u4e2d\u7684\u5404\u79cd\u5bf9\u8c61\u3002</p> <p>DDL \u7f16\u8bd1\u540e\u751f\u6210\u4e00\u5f20\u5305\u542b\u5143\u6570\u636e\uff08metadata\uff09\u7684\u8868\uff0c\u79f0\u4f5c data dictionary\u3002</p>"},{"location":"cs/database/chapter1/#dml","title":"DML","text":"<p>\u7528\u4e8e\u64cd\u7eb5\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\uff0c\u5176\u4e2d\u6d89\u53ca\u6570\u636e\u67e5\u8be2\u5230\u90e8\u5206\u79f0\u4e3a\u67e5\u8be2\u8bed\u8a00\uff08query language\uff09\u3002</p> <p>Two classes of DMLs:</p> <ul> <li>Procedural DMLs \u8fc7\u7a0b\u5f0f: \u7528\u6237\u9700\u8981\u6307\u5b9a\u5982\u4f55\u83b7\u53d6\u6570\u636e\u3002\u4f8b\u5982 C\u3001Java \u7b49\u8bed\u8a00\u3002</li> <li>Nonprocedural DMLs \u975e\u8fc7\u7a0b\u5f0f\uff08\u9648\u8ff0\u5f0f\uff09: \u7528\u6237\u53ea\u9700\u8981\u6307\u5b9a\u9700\u8981\u83b7\u53d6\u7684\u6570\u636e\u3002\u4f8b\u5982 SQL\u3002</li> </ul>"},{"location":"cs/database/chapter1/#sql","title":"SQL","text":"<p>SQL = DDL + DML + DCL</p>"},{"location":"cs/database/chapter1/#database-design","title":"Database Design","text":"<ul> <li>Requirement Analysis: What data, applications, and operations needed.</li> <li>Conceptual Design: High-level description of data to be stored, using ER model. \u9ad8\u5c42\u6b21\u63cf\u8ff0\u6570\u636e\u7684\u5b58\u50a8\uff0c\u4f7f\u7528 ER \u6a21\u578b\u3002</li> <li>Logical Design: Translate ER model to DB schema. \u5c06 ER \u6a21\u578b\u8f6c\u6362\u4e3a\u6570\u636e\u5e93\u67b6\u6784\u3002</li> <li>Schema Refinement: Improve the logical schema. \u6539\u8fdb\u903b\u8f91\u67b6\u6784\u3002</li> <li>Physical Database Design: Design the internal storage structure. \u8bbe\u8ba1\u5185\u90e8\u5b58\u50a8\u7ed3\u6784\u3002</li> <li>Creating and Initializing the Database: \u521b\u5efa\u548c\u521d\u59cb\u5316\u6570\u636e\u5e93\u3002</li> </ul>"},{"location":"cs/database/chapter1/#e-r-model","title":"E-R Model","text":"<p>ER Model of Real World: - Entities: Entities are described by a set of attributes. \u5b9e\u4f53\u7531\u4e00\u7ec4\u5c5e\u6027\u63cf\u8ff0\u3002 - Relationships: Relationships among entities. \u5b9e\u4f53\u4e4b\u95f4\u7684\u5173\u7cfb\u3002</p> <p>Example</p> <p> </p>"},{"location":"cs/database/chapter1/#relational-model","title":"Relational Model","text":"<p>Transfer E-R diagrams into relational schema.</p> <p>\u8f6c\u6362\u540e\u7684\u8868\u683c\u7b2c\u4e00\u884c\u4e3a\u5b9e\u4f53\u7684\u5c5e\u6027\uff0c\u968f\u540e\u6bcf\u4e00\u884c\u4e3a\u4e00\u4e2a\u5143\u7ec4\uff0c\u4ee3\u8868\u4e00\u4e2a\u5b9e\u4f8b\u3002</p> <p>Example</p> <p>\u5c06 customer \u5b9e\u4f53\u8f6c\u6362\u4e3a\u5173\u7cfb\u6a21\u578b\uff1a</p> <p> </p>"},{"location":"cs/database/chapter1/#database-users-and-administrators","title":"Database Users and Administrators","text":""},{"location":"cs/database/chapter1/#users","title":"Users","text":"<p>\u7531\u5176\u4e0e\u7cfb\u7edf\u4ea4\u4e92\u7684\u65b9\u5f0f\u8fdb\u884c\u5212\u5206\uff1a</p> <ul> <li>Naive users: \u8c03\u7528\u9884\u5b9a\u4e49\u7684\u7a0b\u5e8f\u8bbf\u95ee\u6570\u636e\u5e93\uff0c\u666e\u901a\u7528\u6237\u3002</li> <li>Application programmers: \u5f00\u53d1\u5e94\u7528\u7a0b\u5e8f\u7684\u7a0b\u5e8f\u5458\uff0c\u901a\u8fc7 SQL calls \u8bbf\u95ee\u6570\u636e\u5e93\u3002</li> <li>Sophisticated users: \u901a\u8fc7 SQL \u67e5\u8be2\u6570\u636e\u5e93\u3002</li> <li>Specialized users: write specialized database applications that do not fit into the traditional data processing framework. \u7f16\u5199\u4e13\u95e8\u7684\u6570\u636e\u5e93\u5e94\u7528\u7a0b\u5e8f\u3002</li> </ul>"},{"location":"cs/database/chapter1/#transaction-management","title":"Transaction Management","text":"<p>A transaction is a collection of operations that performs a single logical function in a database application. \u4e8b\u52a1\u662f\u6570\u636e\u5e93\u5e94\u7528\u7a0b\u5e8f\u4e2d\u6267\u884c\u5355\u4e2a\u903b\u8f91\u529f\u80fd\u7684\u4e00\u7ec4\u64cd\u4f5c\u3002</p> <p>Transaction requirements include atomicity, consistence, isolation, durability. \u4e8b\u52a1\u8981\u6c42\u5305\u62ec\u539f\u5b50\u6027\u3001\u4e00\u81f4\u6027\u3001\u9694\u79bb\u6027\u3001\u6301\u4e45\u6027\u3002</p>"},{"location":"cs/database/chapter1/#database-architecture","title":"Database Architecture","text":""},{"location":"cs/database/chapter1/#storage-manager","title":"Storage Manager","text":"<p>\u4e3a\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u8bbf\u95ee\u5e95\u5c42\u6570\u636e\u7684\u63a5\u53e3\u3002\u5206\u4e3a\uff1a</p> <ul> <li>Transaction manager: \u4e8b\u52a1\u7ba1\u7406\u3002</li> <li>Authorization and integrity manger: \u6388\u6743\u548c\u5b8c\u6574\u6027\u7ba1\u7406\u3002</li> <li>File manager: interaction with the file system to process data files, data dictionary, and index files. \u4e0e\u6587\u4ef6\u7cfb\u7edf\u4ea4\u4e92\u5904\u7406\u6570\u636e\u6587\u4ef6\u3001\u6570\u636e\u5b57\u5178\u548c\u7d22\u5f15\u6587\u4ef6\u3002</li> <li>Buffer manager: \u6570\u636e\u7f13\u5b58\u7ba1\u7406\u3002</li> </ul>"},{"location":"cs/database/chapter1/#query-processor","title":"Query Processor","text":"<p>Query Processor includes DDL interpreter, DML compiler, and query processing. \u67e5\u8be2\u5904\u7406\u5668\u5305\u62ec DDL \u89e3\u91ca\u5668\u3001DML \u7f16\u8bd1\u5668\u548c\u67e5\u8be2\u5904\u7406\u3002</p>"},{"location":"cs/database/chapter1/#database-system-internals","title":"Database System Internals","text":""},{"location":"cs/database/chapter2/","title":"Relational Model","text":"<p>A relational database is a collection of one or more relations, which are based on the relational model.</p> <p>Example</p> <p> </p>"},{"location":"cs/database/chapter2/#structure-of-relational-databases","title":"Structure of Relational Databases","text":""},{"location":"cs/database/chapter2/#basic-structure","title":"Basic Structure","text":"<p>\u8bbe\u96c6\u5408 \\( D_1, D_2, \\ldots, D_n \\)\uff0c\u5173\u7cfb \\(r\\) \u662f\u7b1b\u5361\u5c14\u79ef \\(D_1 \\times D_2 \\times \\ldots \\times D_n\\) \u7684\u4e00\u4e2a\u5b50\u96c6\u3002</p>"},{"location":"cs/database/chapter2/#attribute-types","title":"Attribute Types","text":"<p>\u8bbe\u5173\u7cfb \\(r\\) \u4e3a\u5143\u7ec4 \\( (a_1, a_2, \\ldots, a_n) \\)\uff0c\u5176\u4e2d \\(a_i\\) \u662f\u5c5e\u6027\uff0c\\(D_i\\) \u662f\u5c5e\u6027\u7684\u57df\u3002\u6bcf\u4e2a\u5c5e\u6027\u90fd\u6709\u540d\u79f0\u3002</p> <p>\u5173\u7cfb\u7406\u8bba\u7b2c\u4e00\u8303\u5f0f</p> <p>Attribute values are (normally) required to be atomic. \u5c5e\u6027\u503c\u662f\u539f\u5b50\u7684\uff0c\u5373\u65e0\u6cd5\u5206\u5272\u3002\u4f8b\u5982\u590d\u5408\u5c5e\u6027\u6216\u8005\u591a\u503c\u5c5e\u6027\u90fd\u4e0d\u80fd\u6210\u4e3a\u5173\u7cfb\u7684\u5c5e\u6027\u3002</p> <p>\\( \\mathsf{null} \\) \u5c5e\u4e8e\u6bcf\u4e2a\u57df\u3002</p>"},{"location":"cs/database/chapter2/#concepts-about-relation","title":"Concepts about Relation","text":"<p>A relation is concerned with two concepts: relation schema and  relation instance. \u5173\u7cfb\u5305\u542b\u4e24\u4e2a\u6982\u5ff5\uff1a\u5173\u7cfb\u6a21\u5f0f\u548c\u5173\u7cfb\u5b9e\u4f8b\u3002</p> <ul> <li> <p>Relation Schema: describes the structure of the relation.</p> <p>Example</p> <pre><code>Student_schema = (sid: string, name: string, sex: string, age: int, dept: string)\n</code></pre> <p>or</p> <pre><code>Student_schema = (sid, name, sex, age, dept)\n</code></pre> </li> <li> <p>Relation Instance: corresponds to the snapshot of the data in the relation at a given instant in time.</p> </li> </ul>"},{"location":"cs/database/chapter2/#the-properties-of-relation","title":"The Properties of Relation","text":"<ul> <li>The order of tuples is irrelevant. \u65e0\u5e8f</li> <li>No duplicated tuples in a relation. \u65e0\u91cd\u590d</li> <li>Attribute values are atomic. \u5c5e\u6027\u662f\u539f\u5b50\u7684</li> </ul>"},{"location":"cs/database/chapter2/#database","title":"Database","text":"<p>A database consists of a collection of relations.</p>"},{"location":"cs/database/chapter2/#key","title":"Key","text":"<p>\\(K \\subseteq R\\)</p> <ul> <li>Superkey: \\(K\\) is a superkey of \\(R\\) if the values of \\(K\\) are sufficient to identify a unique tuple in \\(R\\). \\(K\\) \u662f \\(R\\) \u7684\u8d85\u952e\uff0c\u5982\u679c \\(K\\) \u7684\u503c\u8db3\u4ee5\u552f\u4e00\u6807\u8bc6 \\(R\\) \u4e2d\u7684\u4e00\u4e2a\u5143\u7ec4\u3002</li> <li>Candidate Key: \\(K\\) is a candidate key of \\(R\\) if \\(K\\) is a minimal superkey of \\(R\\). \\(K\\) \u662f \\(R\\) \u7684\u5019\u9009\u952e\uff0c\u5982\u679c \\(K\\) \u662f \\(R\\) \u7684\u6700\u5c0f\u8d85\u952e\u3002</li> <li>Primary Key: A candidate key defined by the database designer. \u4e3b\u952e\u662f\u6570\u636e\u5e93\u8bbe\u8ba1\u8005\u5b9a\u4e49\u7684\u5019\u9009\u952e\uff0c\u901a\u5e38\u7528\u4e0b\u5212\u7ebf\u6807\u8bc6\u3002</li> </ul>"},{"location":"cs/database/chapter2/#foreign-key","title":"Foreign Key","text":"<p>Assume relations \\(r\\) and \\(s\\): \\(r(\\underline{A}, B, C)\\), \\(s(\\underline{B}, D)\\). \\(B\\) in relation \\(r\\) is a foreign key referencing \\(s\\), and \\(r\\) is a referencing relation, and \\(s\\) is a referenced relation.</p> <p>\u53c2\u7167\u5173\u7cfb\u4e2d\u5916\u7801\u7684\u503c\u5fc5\u987b\u5728\u88ab\u53c2\u7167\u5173\u7cfb\u4e2d\u5b9e\u9645\u5b58\u5728, \u6216\u4e3a \\( \\mathsf{null} \\)\u3002</p>"},{"location":"cs/database/chapter2/#query-language","title":"Query Language","text":"<p>Pure languages:</p> <ul> <li>Relational Algebra: a procedural query language. \u8fc7\u7a0b\u5f0f\u67e5\u8be2\u8bed\u8a00\uff0cSQL \u7684\u57fa\u7840\u3002</li> <li>Tuple Relational Calculus: \u5143\u7ec4\u5173\u7cfb\u6f14\u7b97</li> <li>Domain Relational Calculus: \u57df\u5173\u7cfb\u6f14\u7b97</li> </ul>"},{"location":"cs/database/chapter2/#fundamental-relational-algebra-operations","title":"Fundamental Relational-Algebra Operations","text":"<p>Six basic operators:</p> <ul> <li>Selection: \\( \\sigma \\) \u9009\u62e9</li> <li>Projection: \\( \\Pi \\) \u6295\u5f71</li> <li>Union: \\( \\cup \\) \u5e76</li> <li>Set Difference: \\( - \\) \u5dee</li> <li>Cartesian product: \\( \\times \\) \u7b1b\u5361\u5c14\u79ef</li> <li>Rename: \\( \\rho \\) \u91cd\u547d\u540d</li> </ul>"},{"location":"cs/database/chapter2/#selection","title":"Selection","text":"<p>\\( \\sigma_{p} (r) = \\{ t \\mid t \\in r \\land p(t) \\} \\)</p> <ul> <li>\\( r \\) is a relation</li> <li>\\( p \\) is a predicate in the form of <code>&lt;attribute&gt; op &lt;attribute&gt; or &lt;constant&gt;</code>, where <code>op</code> is a comparison operator.</li> </ul> <p>Example</p> <p> </p>"},{"location":"cs/database/chapter2/#projection","title":"Projection","text":"<p>\\( \\Pi_{A_1, A_2, \\ldots, A_k} (r) \\)</p> <ul> <li>\\( r \\) is a relation</li> <li>\\( A_i \\) is an attribute of \\( r \\)</li> </ul> <p>The result is defined as the relation of \\(k\\) columns obtained by erasing the columns that are not listed. \u7ed3\u679c\u662f\u901a\u8fc7\u5220\u9664\u672a\u5217\u51fa\u7684\u5217\u800c\u83b7\u5f97\u7684 \\(k\\) \u5217\u5173\u7cfb\u3002\u5e76\u4e14\u8fdb\u884c \u53bb\u91cd\u3002</p> <p>Example</p> <p> </p>"},{"location":"cs/database/chapter2/#union","title":"Union","text":"<p>\\( r \\cup s = \\{ t \\mid t \\in r \\lor t \\in s \\} \\)</p> <ul> <li>\\( r \\) and \\( s \\) are relations</li> <li>\\( r \\) and \\( s \\) must have the same number of attributes. \\( r \\) \u548c \\( s \\) \u5fc5\u987b\u6709\u76f8\u540c\u6570\u91cf\u7684\u5c5e\u6027\u3002</li> <li>The attribute domains must be compatible. \u5c5e\u6027\u57df\u5fc5\u987b\u517c\u5bb9\u3002</li> </ul> <p>Example</p> <p> </p>"},{"location":"cs/database/chapter2/#set-difference","title":"Set Difference","text":"<p>\\( r - s = \\{ t \\mid t \\in r \\land t \\notin s \\} \\)</p> <ul> <li>\\( r \\) and \\( s \\) are relations</li> <li>Similar to Union, \\( r \\) and \\( s \\) must have the same number of attributes and the attribute domains must be compatible.</li> </ul> <p>Example</p> <p> </p>"},{"location":"cs/database/chapter2/#cartesian-product","title":"Cartesian Product","text":"<p>\\( r \\times s = \\{ (t_1, t_2) \\mid t_1 \\in r \\land t_2 \\in s \\} \\)</p> <ul> <li>\\( r \\) and \\( s \\) are relations</li> <li>If \\( r \\) and \\( s \\) are not disjoint, then rename will be used to avoid ambiguity between the attributes with the same name. \u5982\u679c \\( r \\) \u548c \\( s \\) \u6709\u76f8\u540c\u540d\u79f0\u7684\u5c5e\u6027\uff0c\u5219\u5c06\u4f7f\u7528 \u91cd\u547d\u540d \u6765\u907f\u514d\u5177\u6709\u76f8\u540c\u540d\u79f0\u7684\u5c5e\u6027\u4e4b\u95f4\u7684\u6b67\u4e49\u3002</li> </ul> <p>Example</p> <p>\\( r \\) \u548c \\( s \\) \u4e0d\u76f8\u4ea4\uff1a</p> <p> </p> <p>\\( r \\) \u548c \\( s \\) \u76f8\u4ea4\uff1a</p> <p> </p>"},{"location":"cs/database/chapter2/#rename","title":"Rename","text":"<ul> <li>\\( \\rho_X (E) \\): rename the expression \\(E\\) as \\(X\\).</li> <li>\\( \\rho_{X(A_1, A_2, \\ldots, A_n)} (E) \\): rename the expression \\(E\\) as \\(X\\) and the attributes as \\(A_1, A_2, \\ldots, A_n\\).</li> </ul> <p>\\( \\rho \\) returns a relation that is identical to \\(E\\) except that the relation is renamed as \\(X\\). \\( \\rho \\) \u8fd4\u56de\u4e00\u4e2a\u4e0e \\(E\\) \u76f8\u540c\u7684\u5173\u7cfb\uff0c\u53ea\u662f\u5173\u7cfb\u88ab\u91cd\u547d\u540d\u4e3a \\(X\\)\u3002</p>"},{"location":"cs/database/chapter2/#additional-relational-algebra-operations","title":"Additional Relational-Algebra Operations","text":"<p>Four additional operators:</p> <ul> <li>Set Intersection: \\( \\cap \\) \u4ea4</li> <li>Natural Join: \\( \\bowtie \\) \u81ea\u7136\u8fde\u63a5</li> <li>Division: \\( \\div \\) \u9664</li> <li>Assignment: \\( \\leftarrow \\) \u8d4b\u503c</li> </ul>"},{"location":"cs/database/chapter2/#set-intersection","title":"Set Intersection","text":"<p>\\( r \\cap s = \\{ t \\mid t \\in r \\land t \\in s \\} = r - (r - s) \\)</p> <ul> <li>\\( r \\) and \\( s \\) are relations</li> <li>\\( r \\) and \\( s \\) must have the same number of attributes and the attribute domains must be compatible.</li> </ul> <p>Example</p> <p> </p>"},{"location":"cs/database/chapter2/#natural-join","title":"Natural Join","text":"<p>\\( r \\bowtie s \\)</p> <ul> <li>\\( r \\) and \\( s \\) are relations</li> <li>Consider each pair of tuples \\( t_1 \\in r \\) and \\( t_2 \\in s \\), if \\( t_1 \\) and \\( t_2 \\) have the same value on each attribute in \\( R \\cap S \\), then add a tuple to the result relation with the remaining attributes from \\( t_1 \\) and \\( t_2 \\). \u5982\u679c \\( t_1 \\) \u548c \\( t_2 \\) \u5728 \\( R \\cap S \\) \u4e0a\u7684\u6bcf\u4e2a\u5c5e\u6027\u4e0a\u5177\u6709\u76f8\u540c\u7684\u503c\uff0c\u5219\u5c06\u4e00\u4e2a\u5143\u7ec4\u6dfb\u52a0\u5230\u7ed3\u679c\u5173\u7cfb\u4e2d\uff0c\u8be5\u5143\u7ec4\u5177\u6709\u6765\u81ea \\( t_1 \\) \u548c \\( t_2 \\) \u7684\u5269\u4f59\u5c5e\u6027\u3002</li> </ul> <p>Example</p> <p> </p> <p>Theta Join Operation</p> <p>\\( r \\bowtie_{\\theta} s = \\sigma_{\\theta} (r \\times s) \\)</p>"},{"location":"cs/database/chapter2/#division","title":"Division","text":"<p>\\( r \\div s = \\{ t \\mid t \\in \\Pi_{R - S} (r) \\land \\forall u \\in s, t \\times u \\in r \\} \\)</p> <ul> <li>\\( r \\) and \\( s \\) are relations on schema \\( R and S \\)</li> </ul> <p>Example</p> <p> </p>"},{"location":"cs/database/chapter2/#assignment","title":"Assignment","text":"<p>\\( X \\leftarrow E \\)</p> <p>Assignment is always made to a temporary relation.</p> <p>Example</p> <p>Write \\( r \\div s \\) as:</p> \\[ \\begin{align*} temp1 &amp;\\leftarrow \\Pi_{R - S} (r) \\\\ temp2 &amp;\\leftarrow \\Pi_{R - S} (temp1 \\times s - \\Pi_{R - S, S} (r)) \\\\ result &amp;\\leftarrow temp1 - temp2 \\end{align*} \\]"},{"location":"cs/database/chapter2/#extended-relational-algebra-operations","title":"Extended Relational-Algebra Operations","text":"<ul> <li>Generalized Projection: \\( \\Pi_{A_1, A_2, \\ldots, A_n} (r) \\) where \\( A_i \\) is an expression. \u5e7f\u4e49\u6295\u5f71</li> <li>Aggregation Functions: \u805a\u5408\u51fd\u6570</li> </ul>"},{"location":"cs/database/chapter2/#generalized-projection","title":"Generalized Projection","text":"<p>\\( \\Pi_{A_1, A_2, \\ldots, A_n} (r) \\) where \\( A_i \\) is an expression.</p> <p>Example</p> <p>Given a relation \\( \\text{credit_info}(\\text{customer_name}, \\text{limit}, \\text{current_balance}) \\), we can use the following expression to calculate the available credit for each customer:</p> \\[ \\Pi_{\\text{customer_name}, \\text{limit} - \\text{current_balance}} (\\text{credit_info}) \\]"},{"location":"cs/database/chapter2/#aggregation-functions","title":"Aggregation Functions","text":"<p>\\( _{G_1, G_2, \\ldots, G_n}g_{F_1(A_1), F_2(A_2), \\ldots, F_n(A_n)} (r) \\)</p> <ul> <li>\\( r \\) is a relation</li> <li>\\( A_i \\) is an attribute of \\( r \\)</li> <li>\\( F_i \\) is an aggregation function, such as<ul> <li>avg: average value</li> <li>sum: sum of values</li> <li>count: number of tuples</li> <li>max: maximum value</li> <li>min: minimum value</li> </ul> </li> <li>\\( G_i \\) is a grouping attribute(can be empty)</li> </ul> <p>Example</p> <p> </p> <p>Info</p> <p>Result of aggregation does not have a name. \u805a\u5408\u7684\u7ed3\u679c\u6ca1\u6709\u540d\u79f0\uff0c\u9700\u8981\u91cd\u547d\u540d\u6216\u8005\u5728\u805a\u5408\u64cd\u4f5c\u4e2d\u6307\u5b9a\u540d\u79f0\u3002</p> <p>Example:</p> \\[ _\\text{branch-name} g_{\\text{sum}(\\text{balance}) \\ as \\ \\text{sum-balance}} (\\text{account}) \\]"},{"location":"cs/database/chapter2/#modification-of-the-database","title":"Modification of the Database","text":"<ul> <li>Deletion</li> <li>Insertion</li> <li>Updating</li> </ul>"},{"location":"cs/database/chapter2/#deletion","title":"Deletion","text":"<p>\\( r \\leftarrow r - E \\)</p> <ul> <li>\\( r \\) is a relation</li> <li>\\( E \\) is a relational-algebra expression</li> </ul>"},{"location":"cs/database/chapter2/#insertion","title":"Insertion","text":"<p>\\( r \\leftarrow r \\cup E \\)</p>"},{"location":"cs/database/chapter2/#updating","title":"Updating","text":"<p>\\( r \\leftarrow \\Pi_{F_1, F_2, \\ldots, F_n} (r) \\)</p> <ul> <li>\\( r \\) is a relation</li> <li>\\( F_i \\) is an attribute of \\( r \\) or an expression which gives the new value of the attribute</li> </ul>"},{"location":"cs/database/review/","title":"\u590d\u4e60","text":""},{"location":"cs/database/review/#_2","title":"\u57fa\u672c\u6982\u5ff5\u548c\u5173\u7cfb\u4ee3\u6570","text":""},{"location":"cs/database/review/#relational-database","title":"\u5173\u7cfb\u578b\u6570\u636e\u5e93 Relational Database","text":"<p>\u4e00\u7cfb\u5217\u8868\u7684\u96c6\u5408\uff0c\u4e00\u5f20\u8868\u662f\u4e00\u4e2a\u57fa\u672c\u5355\u4f4d\uff0c\u8868\u4e2d\u7684\u6bcf\u4e00\u884c\u662f\u4e00\u4e2a\u5173\u7cfb\u3002</p>"},{"location":"cs/database/review/#_3","title":"\u57fa\u672c\u6982\u5ff5","text":"<ul> <li>relation \u4e00\u6761\u5173\u7cfb\u662f\u4e00\u4e2a\u5143\u7ec4 tuple</li> <li>attribute \u5c5e\u6027\u6307\u8868\u4e2d\u7684\u5217\u540d<ul> <li>attribute type \u6307\u5c5e\u6027\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5982 int, varchar</li> <li>attribute value \u6307\u5c5e\u6027\u7684\u503c<ul> <li>domain \u53d6\u503c\u8303\u56f4 \\(D\\)\uff0c\u4e00\u6761\u5173\u7cfb r \u662f \\(D_1 \\times D_2 \\times \\cdots \\times D_n\\) \u7684\u5b50\u96c6</li> <li>\u5c5e\u6027\u503c\u662f atomic \u7684\uff0c\u4e0d\u53ef\u518d\u5206</li> </ul> </li> </ul> </li> <li>relation schema \u5173\u7cfb\u6a21\u5f0f<ul> <li>\u6307\u8868\u7684\u7ed3\u6784\uff0c\\(R = (A_1, A_2, \\cdots, A_n)\\)\uff0c\u5176\u4e2d \\(A_i\\) \u662f\u5c5e\u6027\u540d</li> <li>\\(r(R)\\) \u8868\u793a\u5173\u7cfb r \u7684 schema \u662f R\uff0cr \u662f\u8868\u4e2d\u7684\u4e00\u884c\u3002</li> <li>\u5173\u7cfb\u662f\u65e0\u5e8f\u7684\u3002</li> </ul> </li> <li>keys \u952e<ul> <li>super key \u8d85\u952e\uff0c\u552f\u4e00\u6807\u8bc6\u4e00\u6761\u8bb0\u5f55\u7684\u5c5e\u6027\u96c6\u5408\uff0c\u53ef\u4ee5\u5197\u4f59\uff0c\u5982 \\(A\\) \u662f super key\uff0c\u90a3\u4e48 \\((A, B)\\) \u4e5f\u662f super key</li> <li>candidate key \u5019\u9009\u952e\uff0c\u6700\u5c0f\u7684\u8d85\u952e\uff0c\u6ca1\u6709\u5197\u4f59\u5c5e\u6027</li> <li>primary key \u4e3b\u952e\uff0c\u5019\u9009\u952e\u4e2d\u9009\u62e9\u4e00\u4e2a\u4f5c\u4e3a\u4e3b\u952e\uff0c\u5728\u5efa\u8868\u65f6\u6307\u5b9a</li> <li>foreign key \u5916\u952e\uff0c\u4e00\u4e2a\u8868\u4e2d\u7684\u5c5e\u6027\uff0c\u6307\u5411\u53e6\u4e00\u4e2a\u8868\u7684\u4e3b\u952e</li> </ul> </li> </ul>"},{"location":"cs/database/review/#_4","title":"\u5173\u7cfb\u4ee3\u6570","text":"<ul> <li>select \u9009\u62e9\uff1a\\(\\sigma_{p}(r)\\)\uff0c\u9009\u62e9\u6ee1\u8db3\u6761\u4ef6 \\(p\\) \u7684\u5143\u7ec4</li> <li>project \u6295\u5f71\uff1a\\(\\Pi_{A_1, A_2, \\cdots, A_n}(r)\\)\uff0c\u9009\u62e9\u5c5e\u6027 \\(A_1, A_2, \\cdots, A_n\\) \u7684\u5143\u7ec4\uff0c\u7ed3\u679c\u53bb\u91cd</li> <li>union \u5e76\uff1a\\(r \\cup s\\)\uff0c\u4e24\u4e2a\u5173\u7cfb\u7684\u5e76\u96c6\uff0c\u4e24\u4e2a\u5173\u7cfb\u7684\u5c5e\u6027\u4e2a\u6570\u76f8\u540c\uff0c\u4e14\u5bf9\u5e94\u5c5e\u6027\u7684\u7c7b\u578b\u76f8\u540c\u3002</li> <li>set difference \u5dee\uff1a\\(r - s\\)\uff0c\u4e24\u4e2a\u5173\u7cfb\u7684\u5dee\u96c6\uff0c\u4e24\u4e2a\u5173\u7cfb\u7684\u5c5e\u6027\u4e2a\u6570\u76f8\u540c\uff0c\u4e14\u5bf9\u5e94\u5c5e\u6027\u7684\u7c7b\u578b\u76f8\u540c\u3002</li> <li>Cartesian product \u7b1b\u5361\u5c14\u79ef\uff1a\\(r \\times s\\)\uff0c\u4e24\u4e2a\u5173\u7cfb\u7684\u7b1b\u5361\u5c14\u79ef\uff0c\u7ed3\u679c\u7684\u5c5e\u6027\u4e2a\u6570\u662f\u4e24\u4e2a\u5173\u7cfb\u7684\u5c5e\u6027\u4e2a\u6570\u4e4b\u548c\uff0c\u5c5e\u6027\u7684\u7c7b\u578b\u662f\u4e24\u4e2a\u5173\u7cfb\u7684\u5c5e\u6027\u7c7b\u578b\u7684\u5e76\u96c6\u3002</li> <li>rename \u91cd\u547d\u540d\uff1a\\(\\rho_X(E)\\) \u5f15\u7528</li> <li>intersection \u4ea4\uff1a\\(r \\cap s = r - (r - s)\\)</li> <li>natural join \u81ea\u7136\u8fde\u63a5\uff1a\\(r \\bowtie s\\)\uff0c\u540c\u540d\u5c5e\u6027\u76f8\u540c\u7684\u7ec4\u5408\u6210\u4e00\u6761\u8bb0\u5f55\u3002\\(r \\bowtie_\\theta s = \\sigma_\\theta(r \\bowtie s)\\)</li> <li>outer join \u5916\u90e8\u8fde\u63a5<ul> <li>\u5de6\u5916\u8fde\u63a5 \\(r \\ltimes s\\)\uff0c\u5de6\u8fb9\u7684\u8868\u5168\u90e8\u4fdd\u7559\uff0c\u53f3\u8fb9\u7684\u8868\u4e2d\u6ca1\u6709\u7684\u7528 null \u586b\u5145</li> <li>\u53f3\u5916\u8fde\u63a5 \\(r \\rtimes s\\)\uff0c\u53f3\u8fb9\u7684\u8868\u5168\u90e8\u4fdd\u7559\uff0c\u5de6\u8fb9\u7684\u8868\u4e2d\u6ca1\u6709\u7684\u7528 null \u586b\u5145</li> <li>\u5168\u5916\u8fde\u63a5 \\(r \\Join s\\)\uff0c\u4e24\u4e2a\u8868\u4e2d\u7684\u6240\u6709\u8bb0\u5f55\u90fd\u4fdd\u7559\uff0c\u6ca1\u6709\u7684\u7528 null \u586b\u5145</li> </ul> </li> <li>division \u9664\u6cd5\uff1a\\(r \\div s\\)\uff0c\u8bbe \\(R = (A_1, A_2, \\cdots, A_n, B_1, B_2, \\cdots, B_m)\\)\uff0c\\(S = (B_1, B_2, \\cdots, B_m)\\)\uff0c\\(R \\div S = (A_1, A_2, \\cdots, A_n)\\)\uff0c\u8868\u4e2d\u4fdd\u7559\u7684\u884c \\(t\\) \u6ee1\u8db3 \\(\\forall u \\in s, t \\times u \\in r\\)</li> <li>assignment \u8d4b\u503c\uff1a\\(\\leftarrow\\)\uff0c\u5c06\u64cd\u4f5c\u7684\u7ed3\u679c\u8fdb\u884c\u547d\u540d\u3002</li> <li>aggregation \u805a\u5408\uff1a\\(_{G_1, G_2, \\cdots, G_n}\\mathcal{G}_{F_1(A_1), F_2(A_2), \\cdots, F_m(A_m)}(r)\\)\uff0c\u5bf9\u5173\u7cfb r \u4e2d \\(G_i\\) \u76f8\u540c\u7684\u5143\u7ec4\u8fdb\u884c\u805a\u5408\uff0c\u7136\u540e\u5728\u5206\u522b\u5728\u5c5e\u6027 \\(A_i\\) \u4e0a\u8fdb\u884c\u805a\u5408\u64cd\u4f5c \\(F_i\\)\uff0c\u5982 count, sum, avg, max, min</li> </ul>"},{"location":"cs/database/review/#sql","title":"SQL","text":""},{"location":"cs/database/review/#_5","title":"\u6570\u636e\u7c7b\u578b","text":"<p>char\uff08\u5b9a\u957f\u5b57\u7b26\u4e32\uff09\u3001varchar\uff08\u53d8\u957f\u5b57\u7b26\u4e32\uff09\u3001int\u3001float\u3001date\u3001time\u3001timestamp\u3001numeric(p,d)\uff08p \u6709\u6548\u6570\u5b57\u4f4d\u6570\uff0cd \u5c0f\u6570\u4f4d\u6570\uff09</p>"},{"location":"cs/database/review/#_6","title":"\u521b\u5efa\u66f4\u65b0\u5220\u9664","text":"<ul> <li>\u521b\u5efa\u8868     <pre><code>CREATE TABLE table_name (\n    column_name1 data_type1,\n    column_name2 data_type2,\n    ...\n    -- intergrity constraints\n);\n</code></pre>     \u5b8c\u6574\u6027\u7ea6\u675f\u6307\u5b9a <code>primary key(x)</code>\u3001 <code>foreign key(x) references r</code></li> <li>\u5220\u9664 <code>drop table table_name</code></li> <li>\u66f4\u65b0\u5c5e\u6027 <code>alter table table_name add column_name data_type</code>\u3001<code>alter table table_name drop column_name</code></li> </ul>"},{"location":"cs/database/review/#_7","title":"\u67e5\u8be2","text":"<p><code>select * from table_name</code></p> <ul> <li>\u53bb\u91cd <code>select distinct * from table_name</code>\uff0c\u4e0d\u53bb\u91cd <code>select all * from table_name</code></li> <li>from \u5b57\u53e5\u4e2d\u9009\u62e9\u591a\u4e2a\u8868\uff0c\u4f1a\u5148\u8fdb\u884c\u7b1b\u5361\u5c14\u79ef</li> <li>\u8f93\u51fa\u7ed3\u679c\u6392\u5e8f <code>select * from table_name order by column_name asc/desc</code></li> <li>\u96c6\u5408\u64cd\u4f5c <code>union</code>, <code>intersect</code>, <code>except</code> \u8fde\u63a5\u4e24\u6761\u67e5\u8be2\u7ed3\u679c\uff0c\u4f7f\u7528 <code>union all</code> \u53ef\u4ee5\u4fdd\u7559\u91cd\u590d\u7684\u884c</li> <li>\u805a\u5408\u64cd\u4f5c     <pre><code>select count(*) from table_name group by column_name\n</code></pre><ul> <li>having \u5bf9\u5206\u7ec4\u8fdb\u884c\u7b5b\u9009     <pre><code>select count(*) from table_name\ngroup by column_name having count(*) &gt; 1\n</code></pre></li> </ul> </li> <li>\u5d4c\u5957\u67e5\u8be2<ul> <li>\u7528 <code>in</code> \u6216\u8005 <code>not in</code> \u5224\u65ad\u662f\u5426\u5728\u5b50\u67e5\u8be2\u7684\u7ed3\u679c\u4e2d     <pre><code>select * from table_name\nwhere column_name in (select column_name from table_name)\n</code></pre></li> <li>\u7528 <code>all</code> \u6216\u8005 <code>some</code> \u8fdb\u884c\u6bd4\u8f83     <pre><code>select * from table_name\nwhere column_name &gt; all (select column_name from table_name)\n</code></pre></li> <li>\u7528 <code>exists</code> \u6216\u8005 <code>not exists</code> \u5224\u65ad\u5b50\u67e5\u8be2\u662f\u5426\u4e3a\u7a7a     <pre><code>select * from table_name as T1, table_name as T2\nwhere T1.column_name = T2.column_name and exists (\n    select * from table_name as T3\n    where T3.column_name = T1.column_name\n)\n</code></pre></li> <li>\u7528 <code>unique</code> \u5224\u65ad\u5b50\u67e5\u8be2\u662f\u5426\u4e3a\u96c6\u5408</li> </ul> </li> <li><code>with</code> \u6784\u5efa\u4e34\u65f6\u8868     <pre><code>with table_name(column_name) as (\n    select column_name1 from table_name1\n)\nselect * from table_name\n</code></pre></li> <li><code>join</code> \u8fde\u63a5\uff0c\u4f7f\u7528 <code>join</code> \u65f6\u9ed8\u8ba4\u662f <code>inner join</code><ul> <li><code>natural join</code> \u81ea\u7136\u8fde\u63a5\uff0c\u8fde\u63a5\u4e24\u4e2a\u8868\u4e2d\u540c\u540d\u7684\u5c5e\u6027</li> <li><code>inner join</code> \u5185\u8fde\u63a5\uff0c\u8fde\u63a5\u4e24\u4e2a\u8868\u4e2d\u6ee1\u8db3\u6761\u4ef6\u7684\u5c5e\u6027     <pre><code>select * from table_name1 inner join table_name2\non table_name1.column_name = table_name2.column_name\n</code></pre></li> <li><code>left join</code> \u5de6\u8fde\u63a5\uff0c\u4fdd\u7559\u5de6\u8868\u4e2d\u7684\u6240\u6709\u884c</li> <li><code>right join</code> \u53f3\u8fde\u63a5\uff0c\u4fdd\u7559\u53f3\u8868\u4e2d\u7684\u6240\u6709\u884c</li> <li><code>full join</code> \u5168\u8fde\u63a5\uff0c\u4fdd\u7559\u4e24\u4e2a\u8868\u4e2d\u7684\u6240\u6709\u884c</li> </ul> </li> </ul>"},{"location":"cs/database/review/#_8","title":"\u63d2\u5165\u5220\u9664\u66f4\u65b0","text":"<ul> <li>\u63d2\u5165 <code>insert into table_name values (value1, value2, ...)</code></li> <li>\u5220\u9664 <code>delete from table_name where column_name = value</code></li> <li>\u66f4\u65b0 <code>update table_name set column_name = value where column_name = value</code> <code>case</code> \u5b50\u53e5\u7528\u4e8e\u5206\u7c7b\u8ba8\u8bba     <pre><code>update table_name\nset column_name = case\n    when condition1 then value1\n    when condition2 then value2\n    else value3\nend\nwhere column_name = value\n</code></pre></li> </ul>"},{"location":"cs/database/review/#_9","title":"\u89c6\u56fe\u3001\u7d22\u5f15","text":"<ul> <li>\u89c6\u56fe <code>create view view_name as (select * from table_name)</code><ul> <li>\u4e0d\u4f1a\u521b\u5efa\u65b0\u7684\u8868\uff0c\u53ea\u662f\u9690\u85cf\u4e86\u67e5\u8be2\u7684\u7ec6\u8282</li> <li>\u53ef\u4ee5\u7528 <code>insert</code> \u8fdb\u884c\u66f4\u65b0\uff0c\u6709\u9650\u5236\uff1a<ul> <li>\u521b\u5efa\u89c6\u56fe\u65f6\u53ea\u7528\u4e86\u4e00\u4e2a\u8868</li> <li>\u6ca1\u6709 <code>distinct</code> \u548c\u805a\u5408\u64cd\u4f5c</li> <li>\u6ca1\u6709\u7a7a\u503c\u548c default \u503c</li> </ul> </li> </ul> </li> <li>\u7d22\u5f15 <code>create index index_name on table_name(column_name)</code></li> </ul>"},{"location":"cs/database/review/#type-domain","title":"type \u548c domain","text":"<ul> <li>\u7528\u6237\u5b9a\u4e49 type     <pre><code>create type type_name as numeric(10, 2) final\n</code></pre></li> <li>\u7528\u6237\u5b9a\u4e49 domain     <pre><code>create domain domain_name as numeric(10, 2)\n</code></pre></li> </ul> <p>\u4e0d\u540c type \u7684\u53d8\u91cf\u4e0d\u80fd\u76f8\u4e92\u8fd0\u7b97\uff0c\u57fa\u7840\u7c7b\u578b\u76f8\u540c\u7684 domain \u53ef\u4ee5\u76f8\u4e92\u8fd0\u7b97\u3002</p>"},{"location":"cs/database/review/#_10","title":"\u5b8c\u6574\u6027\u7ea6\u675f","text":"<ul> <li>not null \u503c\u4e0d\u80fd\u4e3a\u7a7a</li> <li>unique \u503c\u552f\u4e00</li> <li>primary key \u4e3b\u952e</li> <li>check \u68c0\u67e5\u7ea6\u675f     <pre><code>create table table_name (\n    column_name1 data_type1 check (column_name1 &gt; 0),\n    column_name2 data_type2,\n    check (column_name2 in ('value1', 'value2'))\n)\n</code></pre></li> <li>\u5f15\u7528\u5b8c\u6574\u6027\u7ea6\u675f     <pre><code>create table table1 (\n    primarykey1 data_type1 primary key\n)\ncreate table table2 (\n    primarykey2 data_type2 primary key,\n    foreignkey data_type2 references table1(primarykey1)\n)\n</code></pre></li> <li>\u7ea7\u8054\u64cd\u4f5c<ul> <li><code>on delete cascade</code> \u5220\u9664\u4e3b\u8868\u4e2d\u7684\u8bb0\u5f55\u65f6\uff0c\u4ece\u8868\u4e2d\u7684\u8bb0\u5f55\u4e5f\u4f1a\u88ab\u5220\u9664     \u6bd4\u5982\u5220\u9664 <code>table1</code> \u4e2d\u7684\u8bb0\u5f55 \\(r\\)\uff0c<code>table2</code> \u4e2d <code>foreignkey</code> \u6307\u5411 \\(r\\) \u7684\u8bb0\u5f55\u4e5f\u4f1a\u88ab\u5220\u9664</li> <li><code>on update cascade</code> \u66f4\u65b0\u4e3b\u8868\u4e2d\u7684\u8bb0\u5f55\u65f6\uff0c\u4ece\u8868\u4e2d\u7684\u8bb0\u5f55\u4e5f\u4f1a\u88ab\u66f4\u65b0</li> </ul> </li> </ul>"},{"location":"cs/database/review/#_11","title":"\u4e8b\u52a1","text":"<p>\u4e8b\u52a1\u662f\u4e00\u7cfb\u5217\u64cd\u4f5c\u7684\u96c6\u5408\uff0c\u8981\u4e48\u5168\u90e8\u6267\u884c\uff0c\u8981\u4e48\u5168\u90e8\u56de\u6eda\uff0c\u7531 <code>begin</code>, <code>commit</code>, <code>rollback</code> \u63a7\u5236\u3002</p> <p>ACID \u7279\u6027\uff1a</p> <ul> <li>atomicity \u539f\u5b50\u6027\uff1a\u4e8b\u52a1\u662f\u4e00\u4e2a\u4e0d\u53ef\u5206\u5272\u7684\u5de5\u4f5c\u5355\u4f4d\uff0c\u8981\u4e48\u5168\u90e8\u6267\u884c\uff0c\u8981\u4e48\u5168\u90e8\u56de\u6eda</li> <li>consistency \u4e00\u81f4\u6027\uff1a\u4e8b\u52a1\u6267\u884c\u524d\u540e\u6570\u636e\u5e93\u7684\u5b8c\u6574\u6027\u7ea6\u675f\u6ca1\u6709\u88ab\u7834\u574f</li> <li>isolation \u9694\u79bb\u6027\uff1a\u4e8b\u52a1\u4e4b\u95f4\u662f\u76f8\u4e92\u9694\u79bb\u7684\uff0c\u4e00\u4e2a\u4e8b\u52a1\u7684\u6267\u884c\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u4e8b\u52a1</li> <li>durability \u6301\u4e45\u6027\uff1a\u4e8b\u52a1\u6267\u884c\u6210\u529f\u540e\uff0c\u5bf9\u6570\u636e\u5e93\u7684\u4fee\u6539\u662f\u6c38\u4e45\u7684</li> </ul>"},{"location":"cs/database/review/#authoization","title":"\u6743\u9650 authoization","text":"<p>\u5206\u7c7b\uff1a</p> <ul> <li>\u6570\u636e\u5c42\u9762\uff1a<code>select</code>, <code>insert</code>, <code>update</code>, <code>delete</code></li> <li>\u6570\u636e\u5e93\u5c42\u9762\uff1a<code>create</code>, <code>drop</code>, <code>alter</code></li> </ul> <p>\u57fa\u672c\u64cd\u4f5c\uff1a</p> <ul> <li><code>grant</code> \u6388\u6743     <pre><code>grant &lt;privilege_list&gt; on &lt;relation_name or view_name&gt; to &lt;user_list&gt;\n</code></pre>     user_list \u53ef\u4ee5\u662f user \u6216\u8005 role \u6216\u8005 public \u4ee3\u8868\u6240\u6709\u7528\u6237     <pre><code>grant select on table_name to user1\ngrant update(column_name) on table_name to user1\ngrant all privileges on table_name to user1\n</code></pre></li> <li><code>revoke</code> \u64a4\u9500\u6743\u9650\uff0c\u7528\u6cd5\u548c <code>grant</code> \u7c7b\u4f3c</li> </ul>"},{"location":"cs/database/review/#role","title":"role","text":"<p>\u4e00\u7ec4\u6743\u9650\u7684\u96c6\u5408\uff0c\u53ef\u4ee5\u8d4b\u4e88\u7528\u6237\u6216\u8005\u5176\u4ed6\u89d2\u8272\u3002</p> <ul> <li>\u521b\u5efa <code>create role role_name</code></li> <li>\u8d4b\u4e88\u6743\u9650 <code>grant select on table_name to role_name</code></li> <li>\u8d4b\u4e88\u7528\u6237 <code>grant role_name to user_name</code></li> <li>\u8d4b\u4e88\u5176\u4ed6\u89d2\u8272 <code>grant role_name1 to role_name2</code></li> </ul>"},{"location":"cs/database/review/#_12","title":"\u5176\u4ed6","text":"<ul> <li>\u5f15\u7528\u6743\u9650\uff0c\u51b3\u5b9a\u662f\u5426\u80fd\u591f\u901a\u8fc7\u5916\u952e\u7ea6\u675f\u5220\u9664\u6216\u8005\u66f4\u65b0\u5176\u4ed6\u8868\u4e2d\u7684\u8bb0\u5f55     <pre><code>grant references(column_name) on table_name to user1\n</code></pre></li> <li>\u7ea7\u8054\u6743\u9650<ul> <li><code>grant select on table_name to user1 with grant option</code>\uff0cuser1 \u53ef\u4ee5\u5c06 select \u6743\u9650\u6388\u4e88\u5176\u4ed6\u7528\u6237</li> <li><code>revoke select on table_name from user1 cascade</code>\uff0c\u7ea7\u8054\u64a4\u9500\u6743\u9650</li> <li><code>revoke select on table_name from user1 restrict</code>\uff0c\u53ea\u64a4\u9500 user1 \u7684\u6743\u9650</li> <li><code>revoke grant option for select on table_name from user1</code>\uff0c\u64a4\u9500 user1 \u7684\u6388\u6743\u6743\u9650</li> </ul> </li> </ul>"},{"location":"cs/database/review/#_13","title":"\u51fd\u6570","text":"<pre><code>create function dep_count(department_name varchar)\nreturns integer\nbegin\n    declare count integer;\n    select count(*) into count\n    from employee\n    where department = department_name;\n    return count;\nend\n</code></pre> <p>\u8fd4\u56de\u503c\u53ef\u4ee5\u662f table\uff1a</p> <pre><code>create function get_employee()\nreturns table(name varchar, department varchar)\nbegin\n    return table(\n        select name, department\n        from employee\n    );\nend\n</code></pre>"},{"location":"cs/database/review/#procedural-constructs","title":"Procedural Constructs \u8fc7\u7a0b\u5316\u7ed3\u6784","text":"<ul> <li>while \u5faa\u73af     <pre><code>begin\n    declare count integer;\n    set count = 0;\n    while count &lt; 10 do\n        set count = count + 1;\n    end while;\nend\n</code></pre></li> <li>repeat \u5faa\u73af\uff0c\u76f8\u5f53\u4e8e do while     <pre><code>begin\n    declare count integer;\n    set count = 0;\n    repeat\n        set count = count + 1;\n    until count = 10\n    end repeat;\nend\n</code></pre></li> <li>for \u5faa\u73af\uff0c\u679a\u4e3e\u67e5\u8be2\u7ed3\u679c\u7684\u6bcf\u4e00\u884c     <pre><code>begin\n    declare sum integer;\n    for r as select * from table_name do\n        set sum = sum + r.column_name;\n    end for;\nend\n</code></pre></li> </ul>"},{"location":"cs/database/review/#_14","title":"\u89e6\u53d1\u5668","text":"<p>ECA rule:</p> <ul> <li>event \u4e8b\u4ef6\uff0c\u89e6\u53d1\u5668\u7684\u89e6\u53d1\u4e8b\u4ef6\uff0c\u6bd4\u5982 insert, update, delete</li> <li>condition \u6761\u4ef6\uff0c\u89e6\u53d1\u5668\u7684\u6267\u884c\u6761\u4ef6</li> <li>action \u52a8\u4f5c\uff0c\u89e6\u53d1\u5668\u89e6\u53d1\u540e\u6267\u884c\u7684\u52a8\u4f5c</li> </ul> <pre><code>create trigger trigger_name\nafter update of column_name on table_name -- event\nreferencing new row as nrow\nreferencing old row as orow\nfor each row\nwhen (nrow.column_name &lt;&gt; orow.column_name) -- condition\nbegin -- action\n    insert into log_table values (nrow.column_name);\nend\n</code></pre>"},{"location":"cs/database/review/#entity-relationship-model","title":"Entity-Relationship Model","text":""},{"location":"cs/database/review/#er","title":"ER \u6a21\u578b","text":"<p>\u7531\u5173\u7cfb\u548c\u5b9e\u4f53\u7ec4\u6210\u3002</p> <ul> <li>entity \u5b9e\u4f53\uff1a\u7531\u957f\u65b9\u5f62\u8868\u793a\uff0cprimary key \u7528\u4e0b\u5212\u7ebf\u8868\u793a</li> <li>relationship \u5173\u7cfb\uff1a\u7531\u83f1\u5f62\u8868\u793a\uff0c\u8fde\u63a5\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u7684\u5b9e\u4f53</li> <li>constraint \u7ea6\u675f<ul> <li>\u6620\u5c04\u57fa\u6570\uff1a\u4e00\u5bf9\u4e00\u3001\u4e00\u5bf9\u591a\u3001\u591a\u5bf9\u4e00\u3001\u591a\u5bf9\u591a<ul> <li>\u7bad\u5934\u8868\u793a\u4e00\uff0c\u76f4\u7ebf\u8868\u793a\u591a</li> <li>\u4e09\u5143\u5173\u7cfb\u4e2d\u7bad\u5934\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21</li> <li>\u76f4\u7ebf\u4e0a\u6807\u6ce8 <code>x...y</code> \u8868\u793a\u6700\u5c11 x \u4e2a\uff0c\u6700\u591a y \u4e2a\u5143\u7d20\u53c2\u4e0e\u5173\u7cfb\uff0c<code>*</code> \u8868\u793a\u4efb\u610f\u4e2a</li> </ul> </li> <li>\u53c2\u4e0e\u5ea6\u7ea6\u675f\uff1a\u5982\u679c\u5168\u90e8\u53c2\u4e0e\u5230\u5173\u7cfb\u4e2d\uff0c\u8981\u7528\u4e24\u6761\u7ebf</li> </ul> </li> <li>\u5f31\u5b9e\u4f53\u96c6 weak entity set<ul> <li>\u6ca1\u6709 primary key\uff0c\u4f9d\u8d56\u4e8e\u5176\u4ed6\u5b9e\u4f53\u5b58\u5728\uff0c\u5b9e\u4f53\u96c6\u5185\u5c5e\u6027\u7528\u865a\u7ebf\u8868\u793a</li> <li>\u4e0e\u5176\u4f9d\u8d56\u7684\u5b9e\u4f53\u4e4b\u95f4\u7684\u5173\u7cfb\u7528\u53cc\u83f1\u5f62\u8868\u793a\uff0c\u79f0\u4e3a identifying relationship \u6807\u8bc6\u578b\u5173\u7cfb</li> <li>\u6bd4\u5982\uff1a\u4e00\u4e2a course \u4e0b\u4f1a\u6709\u591a\u4e2a section\uff0csection \u4f9d\u8d56\u4e8e course \u7684\u5b58\u5728\uff0c\u6240\u4ee5 section \u662f weak entity</li> </ul> </li> </ul>"},{"location":"cs/database/review/#er_1","title":"ER \u6a21\u578b\u8f6c\u6362\u4e3a\u5173\u7cfb\u6a21\u578b","text":"<ul> <li>\u5f3a\u5b9e\u4f53\u96c6\uff1a\u6bcf\u4e2a\u5b9e\u4f53\u96c6\u8f6c\u6362\u4e3a\u4e00\u4e2a\u8868\uff0c\u6bcf\u4e2a\u5c5e\u6027\u8f6c\u6362\u4e3a\u4e00\u4e2a\u5217     <code>course(course_id, title, dept_name)</code></li> <li>\u5f31\u5b9e\u4f53\u96c6\uff1a\u6bcf\u4e2a\u5b9e\u4f53\u96c6\u8f6c\u6362\u4e3a\u4e00\u4e2a\u8868\uff0c\u6bcf\u4e2a\u5c5e\u6027\u8f6c\u6362\u4e3a\u4e00\u4e2a\u5217\uff0c\u52a0\u4e0a\u4e00\u4e2a\u6307\u5411\u6807\u8bc6\u578b\u5173\u7cfb\u7684\u5916\u952e     <code>section(course_id, sec_id, semester, year, building, room_number)</code></li> <li>\u591a\u5bf9\u591a\u5173\u7cfb\uff1a\u8f6c\u6362\u4e3a\u4e00\u4e2a\u65b0\u7684\u8868\uff0c\u5305\u542b\u4e24\u4e2a\u5b9e\u4f53\u96c6\u7684 primary key \u548c\u5176\u4ed6\u5c5e\u6027     <code>takes(student_id, course_id, sec_id)</code></li> <li>\u591a\u5bf9\u4e00\u5173\u7cfb\uff1a\u53ef\u4ee5\u4e0d\u8f6c\u6362\uff0c\u76f4\u63a5\u5728\u591a\u7684\u4e00\u65b9\u52a0\u4e0a\u4e00\u4e2a\u5916\u952e\u6307\u5411\u4e00\u7684\u4e00\u65b9</li> </ul>"},{"location":"cs/database/review/#_15","title":"\u6cdb\u5316\u5173\u7cfb","text":"<ul> <li>\u6982\u5316 generalization\uff1a\u5c06\u591a\u4e2a\u5b9e\u4f53\u96c6\u5408\u5e76\u4e3a\u4e00\u4e2a\u66f4\u9ad8\u5c42\u6b21\u7684\u5b9e\u4f53\u96c6\uff0c\u4ece\u4e0b\u5f80\u4e0a     \u76f8\u5f53\u4e8e\u4ece\u5b50\u7c7b\u5408\u5e76\u5230\u7236\u7c7b</li> <li>\u7279\u5316 specialization\uff1a\u5c06\u4e00\u4e2a\u5b9e\u4f53\u96c6\u5206\u4e3a\u591a\u4e2a\u66f4\u4f4e\u5c42\u6b21\u7684\u5b9e\u4f53\u96c6\uff0c\u4ece\u4e0a\u5f80\u4e0b     \u76f8\u5f53\u4e8e\u4ece\u7236\u7c7b\u7ee7\u627f\u5230\u5b50\u7c7b<ul> <li>partial specialization \u90e8\u5206\u7279\u5316\uff1a\u5b50\u7c7b\u7684\u5b9e\u4f53\u96c6\u4e0d\u5305\u542b\u7236\u7c7b\u7684\u6240\u6709\u5c5e\u6027\uff0c\u5c06\u5b50\u7c7b\u548c\u7236\u7c7b\u8fdb\u884c\u8fde\u63a5\u624d\u662f\u6240\u6709\u4fe1\u606f</li> <li>total specialization \u5168\u90e8\u7279\u5316\uff1a\u5b50\u7c7b\u7684\u5b9e\u4f53\u96c6\u5305\u542b\u7236\u7c7b\u7684\u6240\u6709\u5c5e\u6027</li> </ul> </li> </ul> <p>\u7ea6\u675f\uff1a</p> <ul> <li>overlap \u7ea6\u675f\uff1a\u5b50\u7c7b\u7684\u5b9e\u4f53\u96c6\u4e4b\u95f4\u53ef\u4ee5\u6709\u91cd\u53e0</li> <li>disjoint \u7ea6\u675f\uff1a\u5b50\u7c7b\u4e4b\u95f4\u4e0d\u91cd\u53e0</li> </ul>"},{"location":"cs/database/review/#_16","title":"\u5173\u7cfb\u6570\u636e\u5e93\u8bbe\u8ba1","text":""},{"location":"cs/database/review/#lossless-join-decomposition","title":"Lossless-join Decomposition \u65e0\u635f\u5206\u89e3","text":"<p>\u4e00\u4e2a\u5173\u7cfb R \u88ab\u5206\u89e3\u4e3a R1 \u548c R2\uff0c\u5982\u679c R1 \u548c R2 \u7684 natural join \u7b49\u4e8e R\uff0c\u90a3\u4e48\u79f0\u4e3a\u65e0\u635f\u5206\u89e3\u3002</p> <p>\u5982\u679c\u516c\u5171\u5c5e\u6027\u662f\u5176\u4e2d\u4e00\u4e2a\u5173\u7cfb\u7684 primary key\uff0c\u90a3\u4e48\u4e00\u5b9a\u662f\u65e0\u635f\u5206\u89e3\u3002\\(R_1 \\cap R_2 \\rightarrow R_1\\) \u6216\u8005 \\(R_1 \\cap R_2 \\rightarrow R_2\\)\u3002</p>"},{"location":"cs/database/review/#functional-dependency","title":"Functional Dependency \u51fd\u6570\u4f9d\u8d56","text":"<p>\\(A \\rightarrow B\\) \u8868\u793a \\(A\\)\u552f\u4e00\u786e\u5b9a \\(B\\)</p> <ul> <li>trival: \u5168\u96c6\u51b3\u5b9a\u5b50\u96c6\uff0c\u5bf9\u4e8e\u6240\u6709\u5173\u7cfb\u6a21\u5f0f\u90fd\u6210\u7acb</li> <li>\u95ed\u5305\uff1a\u5c5e\u6027\u96c6\u5408\u80fd\u63a8\u5bfc\u51fa\u6765\u7684\u6240\u6709\u5c5e\u6027\u6784\u6210\u7684\u96c6\u5408\u3002\\(A\\) \u7684\u5c5e\u6027\u95ed\u5305\u8868\u793a\u4e3a \\(A^+\\)</li> </ul>"},{"location":"cs/database/review/#dependency-preservation","title":"Dependency Preservation \u4f9d\u8d56\u4fdd\u6301","text":"<p>\u4e00\u4e2a\u5173\u7cfb R \u88ab\u5206\u89e3\u4e3a R1 \u548c R2\uff0c\u5982\u679c \\(F_1\\) \u548c \\(F_2\\) \u7684\u95ed\u5305\u80fd\u63a8\u5bfc\u51fa \\(F\\) \u7684\u95ed\u5305\uff0c\u90a3\u4e48\u79f0\u4e3a\u4f9d\u8d56\u4fdd\u6301\u3002</p>"},{"location":"cs/database/review/#normal-form","title":"Normal Form \u8303\u5f0f","text":"<ul> <li>1NF\uff1a\u5c5e\u6027\u662f\u539f\u5b50\u7684\uff0c\u4e0d\u53ef\u518d\u5206</li> <li>BCNF\uff1a\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u51fd\u6570\u4f9d\u8d56 \\(X \\rightarrow Y\\)\uff0c\u8981\u4e48\u662f\u5e73\u51e1\u7684\uff0c\u8981\u4e48 \\(X\\)\u662f super key     \u8ba1\u7b97 \\(X\\)\u7684\u5c5e\u6027\u95ed\u5305\uff0c\u5982\u679c\u95ed\u5305\u5305\u542b\u4e86\u6240\u6709\u5c5e\u6027\uff0c\u90a3\u4e48\u6ee1\u8db3 BCNF<ul> <li>Decomposing a Schema into BCNF<ol> <li>\u9009\u62e9\u4e00\u4e2a\u4e0d\u6ee1\u8db3 BCNF \u7684\u51fd\u6570\u4f9d\u8d56\uff0c\u5c06\u5176\u5355\u72ec\u4f5c\u4e3a\u4e00\u4e2a\u5173\u7cfb</li> <li>\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u76f4\u5230\u6240\u6709\u5173\u7cfb\u90fd\u6ee1\u8db3 BCNF</li> <li>\u5c06\u53ef\u5408\u5e76\u7684\u5173\u7cfb\u8fdb\u884c\u5408\u5e76</li> </ol> </li> </ul> </li> <li>3NF\uff1a\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u51fd\u6570\u4f9d\u8d56 \\(X \\rightarrow Y\\)\uff0c\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u4e4b\u4e00<ul> <li>\u4f9d\u8d56\u662f\u5e73\u51e1\u7684</li> <li>\\(X\\)\u662f super key</li> <li>\u5bf9\u4e8e\u6bcf\u4e2a \\(Y - X\\) \u4e2d\u7684\u5c5e\u6027\uff0c\u90fd\u5305\u542b\u5728\u4e00\u4e2a candidate key \u4e2d</li> </ul> </li> </ul>"},{"location":"cs/database/review/#canonical-cover","title":"Canonical Cover \u6b63\u5219\u8986\u76d6","text":"<ul> <li> <p>\u65e0\u5173\u5c5e\u6027\uff1a\u5bf9\u4e8e \\(F\\) \u4e2d\u7684\u51fd\u6570\u4f9d\u8d56 \\(\\alpha \\rightarrow \\beta\\)</p> <ul> <li> <p>\\(\\alpha\\) \u4e2d\u7684\u5c5e\u6027 \\(A\\) \u662f\u591a\u4f59\u7684\uff0c\u5982\u679c \\(\\alpha - A\\) \u4e5f\u80fd\u63a8\u5bfc\u51fa \\(\\beta\\)</p> <p>\u5982\u679c \\((\\alpha - A)^+\\) \u5305\u542b \\(\\beta\\)\uff0c\u90a3\u4e48 \\(A\\) \u662f\u591a\u4f59\u7684</p> </li> <li> <p>\\(\\beta\\) \u4e2d\u7684\u5c5e\u6027 \\(B\\) \u662f\u591a\u4f59\u7684\uff0c\u5982\u679c\u5c06 \\(\\alpha \\rightarrow \\beta\\) \u66ff\u6362\u4e3a \\(\\alpha \\rightarrow \\beta - B\\)\uff0c\\(\\alpha^+\\) \u5305\u542b \\(B\\)</p> </li> </ul> </li> <li> <p>\u8ba1\u7b97\u6700\u5c0f\u8986\u76d6</p> <ol> <li>\u7528 union rule \u5c06\u6ee1\u8db3 \\(\\alpha \\rightarrow \\beta_1 \\land \\alpha \\rightarrow \\beta_2\\) \u7684\u51fd\u6570\u4f9d\u8d56\u5408\u5e76\u4e3a \\(\\alpha \\rightarrow \\beta_1 \\beta_2\\)</li> <li>\u53bb\u9664\u91cd\u590d\u5c5e\u6027</li> <li>\u91cd\u590d a, b \u4e24\u6b65\uff0c\u76f4\u5230\u4e0d\u80fd\u5408\u5e76\u4e3a\u6b62</li> </ol> </li> </ul>"},{"location":"cs/database/review/#_17","title":"\u6570\u636e\u5e93\u8bbe\u8ba1\u7406\u8bba","text":""},{"location":"cs/database/review/#storage-hierarchy","title":"Storage Hierarchy \u5b58\u50a8\u5c42\u6b21","text":"<ul> <li>\u6613\u5931\u5b58\u50a8 volatile storage</li> <li>\u975e\u6613\u5931\u5b58\u50a8 nonvolatile storage</li> </ul>"},{"location":"cs/database/review/#magnetic-disk","title":"\u78c1\u76d8\u5b58\u50a8 Magnetic Disk","text":"<ul> <li>\u8bfb\u5199\u5934 read/write head</li> <li>\u78c1\u9053 tracks\uff0c\u6bcf\u4e2a\u786c\u76d8\u6709\u591a\u4e2a\u78c1\u9053</li> <li>\u6247\u533a sector\uff0c\u7531\u78c1\u9053\u5212\u5206\uff0c\u6bcf\u4e2a\u6247\u533a 512 \u5b57\u8282</li> </ul> <p>\u6027\u80fd\u8bc4\u4f30\uff1a</p> <ul> <li>access time = seek time + rotational delay<ul> <li>seek time \u5bfb\u9053\u65f6\u95f4\uff0c\u8bfb\u5199\u5934\u79fb\u52a8\u5230\u6b63\u786e\u7684\u78c1\u9053\u4e0a\u7684\u65f6\u95f4</li> <li>rotational delay \u65cb\u8f6c\u5ef6\u8fdf\uff0c\u7b49\u5f85\u6247\u533a\u65cb\u8f6c\u5230\u8bfb\u5199\u5934\u4e0b\u7684\u65f6\u95f4</li> </ul> </li> <li>data transfer rate \u6570\u636e\u4f20\u8f93\u901f\u7387\uff0c\u8bfb\u5199\u6570\u636e\u7684\u901f\u7387</li> <li>MTTF\uff1a\u51fa\u73b0\u6545\u969c\u7684\u5e73\u5747\u65f6\u95f4</li> </ul>"},{"location":"cs/database/review/#buffer-management","title":"Buffer Management \u7f13\u51b2\u7ba1\u7406","text":"<p>\u89c1 minisql</p>"},{"location":"cs/database/review/#index","title":"Index \u7d22\u5f15","text":"<ul> <li>primary index \u4e3b\u7d22\u5f15\uff0c\u7d22\u5f15\u7684 key \u662f primary key\uff0c\u5728\u6587\u4ef6\u4e2d\u6309\u7167 key \u7684\u987a\u5e8f\u5b58\u50a8</li> <li>secondary index \u8f85\u52a9\u7d22\u5f15\uff0c\u7d22\u5f15\u987a\u5e8f\u548c\u6587\u4ef6\u4e2d\u7684\u987a\u5e8f\u4e0d\u4e00\u5b9a\u76f8\u540c\uff0c\u4e0d\u4e00\u5b9a\u662f\u552f\u4e00\u7684</li> </ul> <p>\u8861\u91cf\u6307\u6807\uff1a</p> <ul> <li>point query \u5355\u70b9\u67e5\u8be2</li> <li>range query \u8303\u56f4\u67e5\u8be2</li> </ul> <p>B+ \u6811\u8282\u70b9\u6570\u4f30\u8ba1</p> <p>\u5bf9\u4e8e schema\uff1a <pre><code>person(pid char(18) primary key,\n       name char(8),\n       age smallint,\n       address char(40));\n</code></pre> block size \u4e3a 4KB\uff0c\u5171\u6709 \\(10^6\\) \u6761\u8bb0\u5f55</p> <ul> <li>person record size: \\(18 + 8 + 2 + 40 = 68 bytes\\)</li> <li>\u6bcf\u4e2a block \u53ef\u4ee5\u5b58\u50a8 \\(\\lfloor 4096 / 68 \\rfloor = 60\\) \u6761\u8bb0\u5f55</li> <li>\u5b58\u50a8\u6240\u6709\u8bb0\u5f55\u9700\u8981 \\(\\lceil 10^6 / 60 \\rceil = 16667\\) \u4e2a block</li> <li>B+ \u6811 fan-out\uff1a\u7d22\u5f15\u9879\u4e3a 18 bytes\uff0c\u6307\u9488\u4e3a 4 bytes\uff0c\u6bcf\u4e2a\u8282\u70b9\u4e2d\u6307\u9488\u6bd4\u7d22\u5f15\u9879\u591a 1\uff0c\u6240\u4ee5 fan-out \u4e3a \\(\\lfloor (4096 - 4) / (18 + 4) \\rfloor + 1 = 187\\)\u3002<ul> <li>\u5bf9\u4e8e\u5185\u90e8\u8282\u70b9\uff0c\u6700\u591a\u6709 187 \u4e2a\u5b50\u8282\u70b9\uff0c\u6700\u5c11\u6709 94 \u4e2a\u5b50\u8282\u70b9</li> <li>\u5bf9\u4e8e\u53f6\u5b50\u8282\u70b9\uff0c\u6700\u591a\u6709 186 \u4e2a\u7d22\u5f15\u9879\uff0c\u6700\u5c11\u6709 93 \u4e2a\u7d22\u5f15\u9879</li> </ul> </li> <li> <p>\u4e0d\u540c\u5c42\u6570 b+ \u6811\u7684\u8282\u70b9\u6570\uff1a</p> <ul> <li>2-level: min=\\(2 \\times 93 = 186\\), max=\\(187 \\times 186 = 34782\\)</li> <li>3-level: min=\\(2 \\times 94 \\times 93 = 17484\\), max=\\(187 \\times 187 \\times 186 = 6504234\\)</li> <li>4-level: min=\\(2 \\times 94 \\times 94 \\times 93 = 1643496\\), max=\\(187 \\times 187 \\times 187 \\times 186\\)</li> </ul> <p>\u5f97\u5230 \\(10^6\\) \u6761\u8bb0\u5f55\u7684\u7d22\u5f15\u6811\u6709 3 \u5c42\u3002</p> </li> </ul> <p>LSM \u6811\uff1a\u5c06\u7d22\u5f15\u7ed3\u6784\u5206\u4e3a\u82e5\u5e72\u5c42\uff0c\u8d8a\u5e95\u5c42\u7684\u7d22\u5f15\u8d8a\u5927\u3002</p> <ul> <li>\u63d2\u5165\uff1a\u5f53\u4e0a\u5c42\u7684\u7d22\u5f15\u6ee1\u4e86\u4e4b\u540e\uff0c\u5c06\u6570\u636e\u5408\u5e76\u5230\u4e0b\u5c42\u3002</li> <li>\u67e5\u627e\uff1a\u4ece\u4e0a\u5f80\u4e0b\u67e5\u627e\uff0c\u5982\u679c\u4e0a\u5c42\u6ca1\u6709\u627e\u5230\uff0c\u5c31\u53bb\u4e0b\u5c42\u67e5\u627e\u3002</li> </ul>"},{"location":"cs/database/review/#query-processing","title":"Query Processing \u67e5\u8be2\u5904\u7406","text":""},{"location":"cs/database/review/#_18","title":"\u57fa\u7840\u6b65\u9aa4","text":"<ul> <li>parsing and translation \u5c06\u67e5\u8be2\u8bed\u53e5\u8f6c\u6362\u4e3a\u5173\u7cfb\u4ee3\u6570\u8868\u8fbe\u5f0f</li> <li>optimization \u4f18\u5316\u67e5\u8be2\u8ba1\u5212\uff0c\u8f6c\u6362\u4e3a\u6267\u884c\u8ba1\u5212</li> <li>evaluation \u6267\u884c\u8ba1\u5212\uff0c\u83b7\u53d6\u7ed3\u679c</li> </ul>"},{"location":"cs/database/review/#_19","title":"\u4ee3\u4ef7\u4f30\u7b97","text":"<p>\u4f30\u7b97\u6307\u6807\uff1a</p> <ul> <li>number of seeks\uff1a\u78c1\u76d8\u5bfb\u627e\u6b21\u6570</li> <li>number of block transfers\uff1a\u78c1\u76d8\u8bfb\u5199\u6b21\u6570</li> </ul>"},{"location":"cs/database/review/#select-operation","title":"Select Operation","text":"<ol> <li>A1\uff08linear search\uff09\uff1a\u626b\u63cf\u6240\u6709\u8bb0\u5f55\uff0c\u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\u8bb0\u5f55<ul> <li>worst cost: \\(t_{seek} + b_r \\times t_{trans}\\)\uff0c\\(t_s\\) \u4e3a seek time\uff0c\\(b_r\\) \u4e3a\u8981\u4f20\u8f93\u7684\u5757\u6570\uff0c\\(t_t\\) \u4e3a\u4f20\u8f93\u4e00\u5757\u7684\u65f6\u95f4</li> <li>average cost: \\(t_s + (b_r / 2) \\times t_t\\)</li> </ul> </li> <li>A2\uff08B+ index search, on key\uff09\uff1a\u901a\u8fc7 B+ \u6811\u7d22\u5f15\u627e\u5230\u8bb0\u5f55\uff0cB+ \u6811\u4e2d\u7684 key \u552f\u4e00\u3002<ul> <li>cost: \\((h_i + 1) \\times (t_s + t_t)\\)\uff0c\\(h_i\\) \u4e3a B+ \u6811\u7684\u9ad8\u5ea6\uff0c\u5bf9\u4e8e\u6811\u4e0a\u67e5\u627e\u8def\u5f84\u7684\u6bcf\u4e00\u5757\u548c\u6700\u540e\u5b9e\u9645\u5b58\u653e\u8bb0\u5f55\u7684\u5757\u90fd\u8981\u8fdb\u884c seek \u548c transfer</li> </ul> </li> <li>A3\uff08B+ index search, on non-key\uff09\uff1a\u901a\u8fc7 B+ \u6811\u7d22\u5f15\u627e\u5230\u8bb0\u5f55\uff0cB+ \u6811\u4e2d\u7684 key \u4e0d\u552f\u4e00\u3002<ul> <li>cost: \\(h_i \\times (t_s + t_t) + t_s + b \\times t_t\\)\uff0cB+ \u6811\u4e2d\u5b58\u653e\u7684\u662f\u6bcf\u4e2a key \u9996\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u901a\u8fc7\u53f6\u8282\u70b9\u7684\u6307\u9488\u627e\u5230\u5b9e\u9645\u5b58\u653e\u8bb0\u5f55\u7684\u5757\uff0c\u7136\u540e\u626b\u63cf\u5757\u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\u8bb0\u5f55</li> </ul> </li> <li>A4\uff08secondary index search, equality on key\uff09\uff1a\u5efa\u7acb\u5728 key \u4e0a\u7684\u8f85\u52a9\u7d22\u5f15\uff0c\u548c\u4e3b\u7d22\u5f15\u7c7b\u4f3c<ul> <li>cost: \\((h_i + 1) \\times (t_s + t_t)\\)</li> </ul> </li> <li>A4'\uff08secondary index search, equality on non-key\uff09\uff1a\u5efa\u7acb\u5728\u975e key \u4e0a\u7684\u8f85\u52a9\u7d22\u5f15<ul> <li>\u53f6\u8282\u70b9\u5b58\u653e\u7684\u662f\u6307\u5411\u5b58\u653e\u6307\u5411\u5b9e\u9645\u8bb0\u5f55\u7684\u6307\u9488\u5757\u7684\u6307\u9488\uff0c\u627e\u5230\u53f6\u8282\u70b9\u540e\uff0c\u8981\u5728\u6307\u9488\u5757\u4e2d\u627e\u5230\u6307\u9488\uff0c\u518d\u627e\u5230\u5b9e\u9645\u8bb0\u5f55</li> <li>cost: \\((h_i + m + n) \\times (t_s + t_t)\\)\uff0cm \u4e3a\u6307\u9488\u5757\u7684\u6570\u91cf\uff0cn \u4e3a\u5b9e\u9645\u8bb0\u5f55\u7684\u6570\u91cf\uff0c\u6700\u574f\u60c5\u51b5\u4e0b\u6bcf\u4e2a\u8bb0\u5f55\u90fd\u5728\u4e0d\u540c\u7684\u5757\u4e2d</li> </ul> </li> <li>A5\uff08primary B+ index, comparison\uff09\uff1a\u4e3b\u7d22\u5f15\u4e0a\u7684\u6bd4\u8f83\u67e5\u627e\uff0c\u9700\u8981\u627e\u5230\u7b2c\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u8bb0\u5f55\uff0c\u5f80\u540e\u626b\u63cf<ul> <li>cost: \\(h_i \\times (t_s + t_t) + t_s + b \\times t_t\\)</li> </ul> </li> <li>A6\uff08secondary index, comparison\uff09\uff1a\u8f85\u52a9\u7d22\u5f15\u4e0a\u7684\u6bd4\u8f83\u67e5\u627e<ul> <li>\u4e00\u822c\u7528\u7ebf\u6027\u626b\u63cf</li> </ul> </li> </ol>"},{"location":"cs/database/review/#complex-selection","title":"Complex Selection","text":"<ol> <li>Conjunctive Selection\uff1a\u591a\u4e2a\u6761\u4ef6\u7684 and \\(\\sigma_{\\theta_1 \\land \\theta_2 \\land \\cdots \\land \\theta_n}(r)\\)<ul> <li>\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u6761\u4ef6\u6709\u7d22\u5f15\uff0c\u5c31\u7528\u7d22\u5f15\u627e\u5230\u8bb0\u5f55\uff0c\u7136\u540e\u518d\u8fdb\u884c\u5176\u4ed6\u6761\u4ef6\u7684\u5224\u65ad</li> <li>\u6709\u8054\u5408\u7d22\u5f15\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\u8054\u5408\u7d22\u5f15\u627e\u5230\u8bb0\u5f55</li> <li>\u5206\u522b\u7528\u7d22\u5f15\u627e\u5230\u8bb0\u5f55\uff0c\u7136\u540e\u53d6\u4ea4\u96c6</li> </ul> </li> <li>Disjunctive Selection\uff1a\u591a\u4e2a\u6761\u4ef6\u7684 or \\(\\sigma_{\\theta_1 \\lor \\theta_2 \\lor \\cdots \\lor \\theta_n}(r)\\)<ul> <li>\u7528\u7d22\u5f15\u627e\u5230\u8bb0\u5f55\uff0c\u7136\u540e\u53d6\u5e76\u96c6</li> <li>\u7ebf\u6027\u626b\u63cf</li> </ul> </li> <li>Not Selection\uff1a\\(\\sigma_{\\lnot \\theta}(r)\\)<ul> <li>\u76f4\u63a5\u4f7f\u7528\u7d22\u5f15</li> <li>\u7ebf\u6027\u626b\u63cf</li> </ul> </li> </ol>"},{"location":"cs/database/review/#external-sorting","title":"External Sorting","text":"<p>\u5047\u8bbe\u6709 M \u4e2a\u5185\u5b58\u5757</p> <ol> <li>\u521b\u5efa\u521d\u59cb\u5f52\u5e76\u6bb5 run<ul> <li>\u8bfb\u53d6 M \u4e2a\u5757\u5230\u5185\u5b58\u4e2d</li> <li>\u5bf9\u8fd9\u4e9b\u5757\u8fdb\u884c\u6392\u5e8f</li> <li>\u5199\u56de\u5230\u78c1\u76d8\u4e2d\uff0c\u5f97\u5230\u4e00\u4e2a run</li> <li>\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u76f4\u5230\u6240\u6709\u8bb0\u5f55\u90fd\u88ab\u8bfb\u53d6\uff0c\u603b\u5171\u7684 run \u6570\u4e3a \\(N = \\lceil b_r / M \\rceil\\)</li> </ul> </li> <li>\u5f52\u5e76<ul> <li>\u5982\u679c \\(N &lt; M\\)\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u4e00\u6b21 N \u8def\u5f52\u5e76\uff0c\u5c06\u5185\u5b58\u4e2d N \u5757\u4f5c\u4e3a\u8f93\u5165\u7f13\u51b2\uff0c1 \u5757\u4f5c\u4e3a\u8f93\u51fa\u7f13\u51b2<ul> <li>\u6bcf\u6b21\u5c06\u8f93\u5165\u7f13\u51b2\u4e2d\u6700\u5c0f\u7684\u8bb0\u5f55\u5199\u5165\u8f93\u51fa\u7f13\u51b2</li> <li>\u82e5\u8f93\u51fa\u7f13\u51b2\u6ee1\uff0c\u5199\u5165\u78c1\u76d8\uff0c\u6e05\u7a7a\u8f93\u51fa\u7f13\u51b2</li> <li>\u82e5\u8f93\u5165\u7f13\u51b2\u4e2d\u6709\u5757\u8bfb\u5b8c\uff0c\u8bfb\u53d6\u5bf9\u5e94 run \u7684\u4e0b\u4e00\u5757</li> </ul> </li> <li>\u5982\u679c \\(N \\geq M\\)\uff0c\u5219\u9700\u8981\u591a\u6b21 \\(M-1\\) \u8def\u5f52\u5e76\uff0c\u6bcf\u6b21\u5c06 \\(M-1\\) \u4e2a run \u5f52\u5e76\u4e3a\u4e00\u4e2a run\uff0c\u76f4\u5230\u6240\u6709 run \u5f52\u5e76\u4e3a\u4e00\u4e2a run<ul> <li>\u6bcf\u6b21 run \u7684\u4e2a\u6570\u4f1a\u51cf\u5c11\u5230\u539f\u6765\u7684 \\(\\frac{1}{M-1}\\)\uff0c\u603b\u5171\u9700\u8981 \\(\\lceil \\log_{M-1} N \\rceil\\) \u6b21\u5f52\u5e76</li> </ul> </li> </ul> </li> </ol> <p>Cost Analysis</p> <ul> <li>runs \u4e2a\u6570\uff1a\\(N = \\lceil b_r / M \\rceil\\)</li> <li>\u5f52\u5e76\u8f6e\u6570\uff1a\\(\\lceil \\log_{M-1} \\lceil b_r / M \\rceil \\rceil\\)</li> <li>transfer \u6b21\u6570<ul> <li>\u521b\u5efa\u521d\u59cb\u5f52\u5e76\u6bb5\u548c\u6bcf\u6b21\u5f52\u5e76\u9700\u8981 \\(2 \\times b_r\\) \u6b21 transfer\uff0c\u8bfb\u548c\u5199\u5404\u4e00\u6b21</li> <li>\u6700\u540e\u4e00\u6b21\u5f52\u5e76\u7684\u7ed3\u679c\u4e0d\u4e00\u5b9a\u9700\u8981\u5199\u5165\u78c1\u76d8\uff0c\u8fd9\u79cd\u60c5\u51b5\u603b\u5171\u9700\u8981 \\(2 b_r (\\lceil \\log_{M-1} \\lceil b_r / M \\rceil \\rceil + 1) - b_r = b_r \\times (2 \\times \\lceil \\log_{M-1} \\lceil b_r / M \\rceil \\rceil + 1)\\) \u6b21 transfer</li> </ul> </li> <li>seek \u6b21\u6570<ul> <li>\u521b\u5efa\u521d\u59cb\u5f52\u5e76\u6bb5\u9700\u8981 \\(2 \\times N\\) \u6b21 seek\uff0c\u6bcf\u4e2a run \u8bfb\u548c\u5199\u5404\u4e00\u6b21</li> <li>\u6bcf\u6b21\u5f52\u5e76\u9700\u8981 \\(2 \\times b_r\\) \u6b21 seek\uff0c\u56e0\u4e3a\u6570\u636e\u662f\u6309\u7167\u5757\u8bfb\u53d6\u5199\u56de\u7684</li> <li>\u6700\u540e\u4e00\u6b21\u5f52\u5e76\u7684\u7ed3\u679c\u4e0d\u4e00\u5b9a\u9700\u8981\u5199\u5165\u78c1\u76d8\uff0c\u8fd9\u79cd\u60c5\u51b5\u603b\u5171\u9700\u8981 \\(b_r (2 \\lceil \\log_{M-1} \\lceil b_r / M \\rceil \\rceil - 1) + 2 \\lceil b_r / M \\rceil\\) \u6b21 seek</li> </ul> </li> </ul> <p>\u5047\u5982\u5185\u5b58\u4e2d\u7ed9\u6bcf\u4e00\u8def\u5206\u914d\u4e86 \\(b_b\\) \u4e2a\u8f93\u5165\u7f13\u51b2\u5757\uff0c\u540c\u65f6\u8f93\u51fa\u7f13\u51b2\u5757\u4e5f\u662f \\(b_b\\) \u4e2a\uff0c\u90a3\u4e48</p> <ul> <li>\u5f52\u5e76\u8f6e\u6570\uff1a\\(\\lceil \\log_{M/b_b - 1} \\lceil b_r / M \\rceil \\rceil\\)</li> <li>transfer \u6b21\u6570\uff1a<ul> <li>\u521b\u5efa\u521d\u59cb\u5f52\u5e76\u6bb5\u548c\u6bcf\u6b21\u5f52\u5e76\u9700\u8981\u7684 transfer \u6b21\u6570\u4e0d\u53d8\uff0c\u4e3a \\(2 \\times b_r\\) \u6b21</li> <li>\u6700\u540e\u4e00\u6b21\u5f52\u5e76\u7684\u7ed3\u679c\u4e0d\u4e00\u5b9a\u9700\u8981\u5199\u5165\u78c1\u76d8\uff0c\u8fd9\u79cd\u60c5\u51b5\u603b\u5171\u9700\u8981 \\(b_r (2 \\lceil \\log_{M/b_b - 1} \\lceil b_r / M \\rceil \\rceil + 1)\\) \u6b21 transfer</li> </ul> </li> <li>seek \u6b21\u6570\uff1a<ul> <li>\u521b\u5efa\u521d\u59cb\u5f52\u5e76\u6bb5\u9700\u8981 \\(2 \\times N\\) \u6b21 seek</li> <li>\u6bcf\u6b21\u5f52\u5e76\u9700\u8981 \\(2 \\times \\lceil b_r / b_b \\rceil\\) \u6b21 seek</li> <li>\u6700\u540e\u4e00\u6b21\u5f52\u5e76\u7684\u7ed3\u679c\u4e0d\u4e00\u5b9a\u9700\u8981\u5199\u5165\u78c1\u76d8\uff0c\u8fd9\u79cd\u60c5\u51b5\u603b\u5171\u9700\u8981 \\(\\lceil b_r / b_b \\rceil (2 \\lceil \\log_{M/b_b - 1} \\lceil b_r / M \\rceil \\rceil - 1) + 2 \\lceil b_r / M \\rceil\\) \u6b21 seek</li> </ul> </li> </ul>"},{"location":"cs/database/review/#join-operation","title":"Join Operation","text":"<ol> <li>Nested-loop join\uff1a\u4e24\u91cd\u5faa\u73af\uff0c\u5916\u5faa\u73af r\uff0c\u5185\u5faa\u73af s<ul> <li>transfer \u6b21\u6570\uff1a\\(b_r + n_r \\times b_s\\)</li> <li>seek \u6b21\u6570\uff1a\\(n_r + b_r\\)</li> </ul> </li> <li>Block nested-loop join\uff1a\u5916\u5faa\u73af r \u7684\u5757\uff0c\u5185\u5faa\u73af s \u7684\u5757\uff0c\u6bcf\u6b21\u5bf9\u4e24\u4e2a\u5757\u505a nested-loop join<ul> <li>transfer \u6b21\u6570\uff1a\\(b_r + b_r \\times b_s\\)</li> <li>seek \u6b21\u6570\uff1a\\(2 \\times b_r\\)</li> <li>\u5c06\u8f83\u5c0f\u7684\u5173\u7cfb\u4f5c\u4e3a\u5916\u5173\u7cfb\u80fd\u51cf\u5c11\u4ee3\u4ef7\u3002</li> <li>\u5982\u679c\u5206\u914d \\(M - 2\\) \u5757\u7ed9 r\uff0c\\(1\\) \u5757\u7ed9 s\uff0c\u90a3\u4e48<ul> <li>transfer \u6b21\u6570\uff1a\\(b_r + \\lceil b_r / (M - 2) \\rceil \\times b_s\\)</li> <li>seek \u6b21\u6570\uff1a\\(2\\lceil b_r / (M - 2) \\rceil\\)</li> </ul> </li> </ul> </li> <li>Index nested-loop join\uff1a\u5982\u679c s \u4e0a\u6709\u7d22\u5f15\uff0c\u53ef\u4ee5\u7528\u7d22\u5f15\u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\u8bb0\u5f55<ul> <li>\u65f6\u95f4\u82b1\u8d39\uff1a\\(b_r(t_s + t_t) + n_r \\times c\\)\uff0c\\(c\\) \u4e3a\u6bcf\u6b21\u7d22\u5f15\u67e5\u627e\u82b1\u8d39\u7684\u65f6\u95f4</li> </ul> </li> <li>Merge join\uff1a\u4e24\u4e2a\u5173\u7cfb\u90fd\u6709\u5e8f\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fdb\u884c\u5f52\u5e76<ul> <li>transfer \u6b21\u6570\uff1a\\(b_r + b_s\\)</li> <li>seek \u6b21\u6570\uff1a\\(b_r + b_s\\) \u6700\u574f\u60c5\u51b5\u662f\u5728\u4e24\u4e2a\u5173\u7cfb\u4e2d\u5207\u6362</li> <li>\u5c06 M \u5757\u5185\u5b58\u5206\u4e3a \\(x_r + x_s\\) \u5757\uff0c\\(x_r\\) \u5757\u7528\u6765\u5b58\u50a8 r\uff0c\\(x_s\\) \u5757\u7528\u6765\u5b58\u50a8 s\uff0c\u90a3\u4e48<ul> <li>transfer \u6b21\u6570\uff1a\\(b_r + b_s\\)</li> <li>seek \u6b21\u6570\uff1a\\(\\lceil b_r / x_r \\rceil + \\lceil b_s / x_s \\rceil\\)</li> <li>\u9009\u62e9 \\(x_r = \\frac{\\sqrt{b_r}}{\\sqrt{b_r} + \\sqrt{b_s}} \\times M\\) \u548c \\(x_s = \\frac{\\sqrt{b_s}}{\\sqrt{b_r} + \\sqrt{b_s}} \\times M\\) \u53ef\u4ee5\u6700\u5c0f\u5316 seek \u6b21\u6570</li> </ul> </li> </ul> </li> <li>Hash join: \u5c06\u4e24\u4e2a\u5173\u7cfb\u7528\u76f8\u540c\u7684 hash \u51fd\u6570\u8fdb\u884c\u5212\u5206\uff0chash \u540e\u5c06\u539f\u6570\u636e\u5206\u4e3a \\(n\\) \u4e2a\u57df\uff0c\u7136\u540e\u5bf9\u6bcf\u4e2a\u57df\u8fdb\u884c join<ul> <li>\u9700\u8981\u6ee1\u8db3 \\(n \\geq \\lceil b_s / M \\rceil\\)\uff0c\u5373\u6bcf\u4e2a\u57df\u80fd\u4e00\u6b21\u6027\u653e\u5165\u5185\u5b58\u4e2d\u3002\u5982\u679c\u653e\u4e0d\u4e0b\uff0c\u53ef\u4ee5\u8fdb\u884c\u4e8c\u6b21\u5212\u5206</li> <li>s \u79f0\u4e3a build relation\uff0cr \u79f0\u4e3a probe relation</li> <li>\u8fc7\u7a0b\uff1a<ol> <li>\u5bf9 s \u8fdb\u884c hash \u5212\u5206\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5212\u5206\uff0c\u4e3a\u5176\u5728\u5185\u5b58\u4e2d\u5206\u914d\u4e00\u4e2a\u5757\u7528\u4e8e\u5199\u56de</li> <li>\u5bf9 r \u8fdb\u884c hash \u5212\u5206</li> <li>\u5bf9\u4e8e\u6bcf\u4e2a\u5212\u5206\uff1a<ol> <li>\u8bfb\u53d6 s \u7684\u4e00\u4e2a\u5212\u5206\u5230\u5185\u5b58\u4e2d\uff0c\u5728\u5185\u5b58\u4e2d\u5efa\u7acb hash \u7d22\u5f15</li> <li>\u5c06 r \u7684\u5212\u5206\u4e00\u5757\u4e00\u5757\u8bfb\u53d6\u5230\u5185\u5b58\u4e2d\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5757\u4e2d\u6bcf\u6761\u8bb0\u5f55\uff0c\u67e5\u627e hash \u7d22\u5f15\uff0c\u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\u8bb0\u5f55\u8fdb\u884c\u8f93\u51fa</li> </ol> </li> </ol> </li> <li>recursive partitioning\uff1a\u5982\u679c\u4e00\u4e2a\u57df\u4e0d\u80fd\u653e\u5165\u5185\u5b58\u4e2d\uff0c\u53ef\u4ee5\u8fdb\u884c\u4e8c\u6b21\u5212\u5206\uff0c\u76f4\u5230\u53ef\u4ee5\u653e\u5165\u5185\u5b58\u4e2d\uff0c\u6b64\u65f6 \\(M &gt; \\lceil b_s / n \\rceil + 1\\)\uff0c\u8fd1\u4f3c\u4e3a \\(M &gt; \\sqrt{b_s}\\)</li> <li>\u4ee3\u4ef7\u4f30\u7b97\uff1a<ul> <li>\u5982\u679c\u4e0d\u9700\u8981 recursive partitioning<ul> <li>transfer \u6b21\u6570\uff1a\\(2(b_r + b_s) + b_r + b_s = 3(b_r + b_s)\\)\uff0c\u5212\u5206\u65f6\u8bfb\u53d6\u5199\u5165\u5404\u4e00\u6b21\uff0cjoin \u65f6\u8bfb\u53d6\u4e00\u6b21\uff08\u5b9e\u9645\u53ef\u80fd\u6bd4\u8fd9\u4e2a\u503c\u5927\uff0c\u56e0\u4e3a\u53ef\u80fd\u6709\u4e9b\u5757\u4e0d\u6ee1\uff09</li> <li>seek \u6b21\u6570\uff1a\\(2 (\\lceil b_r / b_b \\rceil + \\lceil b_s / b_b \\rceil)\\)\uff0c\u5212\u5206\u65f6 seek \u4e00\u6b21\uff0cjoin \u65f6 seek \u4e00\u6b21</li> </ul> </li> <li>\u5982\u679c\u9700\u8981 recursive partitioning\uff0c\u4f1a\u8fdb\u884c \\(\\lceil \\log_{M/b_b - 1}\\lceil b_s / M \\rceil \\rceil\\) \u6b21\u5212\u5206<ul> <li>transfer \u6b21\u6570\uff1a\\(2(b_r+b_s)\\times \\lceil \\log_{M/b_b - 1}\\lceil b_s / M \\rceil \\rceil + b_r + b_s\\)</li> <li>seek \u6b21\u6570 \\(2 (\\lceil b_r / b_b \\rceil + \\lceil b_s / b_b \\rceil) \\times \\lceil \\log_{M/b_b - 1}\\lceil b_s / M \\rceil \\rceil\\)</li> </ul> </li> </ul> </li> </ul> </li> </ol>"},{"location":"cs/database/review/#query-optimization","title":"Query Optimization \u67e5\u8be2\u4f18\u5316","text":""},{"location":"cs/database/review/#equivalence-rules","title":"Equivalence Rules","text":"<ul> <li>Conjunctive Selection deconstruct\uff1a\\(\\sigma_{\\theta_1 \\land \\theta_2}(r) \\equiv \\sigma_{\\theta_1}(\\sigma_{\\theta_2}(r))\\)</li> <li>Selection commutativity\uff1a\\(\\sigma_{\\theta_1}(\\sigma_{\\theta_2}(r)) \\equiv \\sigma_{\\theta_2}(\\sigma_{\\theta_1}(r))\\)</li> <li>Projection omission\uff1a\\(\\Pi_{L_1}(\\Pi_{L_2}(...(\\Pi_{L_n}(r))...)) \\equiv \\Pi_{L_1}(r)\\)\uff0c\u53ea\u4fdd\u7559\u6700\u540e\u4e00\u4e2a projection</li> <li>\u9009\u62e9\u64cd\u4f5c\u548c\u7b1b\u5361\u5c14\u79ef\u5d4c\u5957\uff1a<ul> <li>\\(\\sigma_{\\theta}(r \\times s) \\equiv r \\bowtie_{\\theta} s\\)</li> <li>\\(\\sigma_{\\theta_1}(r \\bowtie_{\\theta_2} s) \\equiv r \\bowtie_{\\theta_2 \\land \\theta_1} s\\)</li> </ul> </li> <li>Theta join commutativity\uff1a\\(r \\bowtie_{\\theta} s \\equiv s \\bowtie_{\\theta} r\\)</li> <li>associativity\uff1a<ul> <li>Natural join associativity\uff1a\\(r \\bowtie s \\bowtie t \\equiv r \\bowtie (s \\bowtie t) \\equiv (r \\bowtie s) \\bowtie t\\)</li> <li>Theata join \u5728\u7279\u5b9a\u60c5\u51b5\u4e0b\u53ef\u7ed3\u5408\uff1a\\((r \\bowtie_{\\theta_1} s) \\bowtie_{\\theta_2 \\land \\theta_3} t \\equiv r \\bowtie_{\\theta_1 \\land \\theta_3} (s \\bowtie_{\\theta_2} t)\\)\uff0c\u5176\u4e2d \\(\\theta_2\\) \u53ea\u548c s \u548c t \u6709\u5173</li> </ul> </li> <li>\u6295\u5f71\u5728 theta join \u4e2d\u7684\u5206\u914d<ul> <li>\u5982\u679c \\(\\theta\\) \u53ea\u5305\u542b\u4e86 \\(L_1 \\cup L_2\\) \u4e2d\u7684\u5c5e\u6027     \\(\\Pi_{L_1 \\cup L_2}(r \\bowtie_{\\theta} s) \\equiv \\Pi_{L_1}(r) \\bowtie_{\\theta} \\Pi_{L_2}(s)\\)</li> <li>\u5426\u5219\uff0c\u8bbe \\(\\theta\\) \u5305\u542b\u4e86 \\(r\\) \u4e2d\u7684\u5c5e\u6027 \\(L_1 \\cup L_3\\)\uff0c\\(s\\) \u4e2d\u7684\u5c5e\u6027 \\(L_2 \\cup L_4\\)\uff0c\u90a3\u4e48     \\(\\Pi_{L_1 \\cup L_2}(r \\bowtie_{\\theta} s) \\equiv \\Pi_{L_1 \\cup L_2}(\\Pi_{L_1 \\cup L_3}(r) \\bowtie_{\\theta} \\Pi_{L_2 \\cup L_4}(s))\\)</li> </ul> </li> </ul>"},{"location":"cs/database/review/#cost-estimation","title":"Cost Estimation","text":"<p>Statics:</p> <ul> <li>\\(n_r\\)\uff1ar \u4e2d\u7684\u8bb0\u5f55\u6570</li> <li>\\(b_r\\)\uff1a\u5b58\u50a8 r \u7684\u5757\u6570</li> <li>\\(l_r\\)\uff1ar \u6bcf\u6761\u8bb0\u5f55\u7684\u5927\u5c0f</li> <li>\\(f_r\\)\uff1ablocking factor of r\uff0c\u6bcf\u4e2a\u5757\u4e2d\u7684\u8bb0\u5f55\u6570</li> <li> <p>\\(V(A, r)\\)\uff1ar \u4e2d\u5c5e\u6027 A \u7684\u4e0d\u540c\u503c\u7684\u6570\u91cf</p> </li> <li> <p>\\(\\sigma_{A = V}(r)\\)</p> <ul> <li>\u4f30\u8ba1\u9009\u4e2d\u7684\u8bb0\u5f55\u6570\uff1a\\(n_r / V(A, r)\\)</li> </ul> </li> <li>\\(\\sigma_{A \\leq V}(r)\\)<ul> <li>\u5982\u679c\u53ef\u4ee5\u83b7\u5f97 \\(\\min(A, r)\\) \u548c \\(\\max(A, r)\\)\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f30\u8ba1\u9009\u4e2d\u7684\u8bb0\u5f55\u6570<ul> <li>\u5982\u679c \\(V &lt; \\min(A, r)\\)\uff0c\u90a3\u4e48\u9009\u4e2d\u7684\u8bb0\u5f55\u6570\u4e3a \\(0\\)</li> <li>\u5982\u679c \\(V &gt; \\max(A, r)\\)\uff0c\u90a3\u4e48\u9009\u4e2d\u7684\u8bb0\u5f55\u6570\u4e3a \\(n_r\\)</li> <li>\u5426\u5219\uff0c\u9009\u4e2d\u7684\u8bb0\u5f55\u6570\u4e3a \\(\\frac{V - \\min(A, r)}{\\max(A, r) - \\min(A, r)} \\times n_r\\)</li> </ul> </li> <li>\u5982\u679c\u65e0\u6cd5\u83b7\u5f97\uff0c\u90a3\u4e48\u4f30\u8ba1\u9009\u4e2d\u7684\u8bb0\u5f55\u6570\u4e3a \\(n_r / 2\\)</li> </ul> </li> <li>\u8bbe\u6761\u4ef6 \\(\\theta_i\\) \u7684\u9009\u7387\u4e3a \\(s_i/n_r\\)\uff0c\u5047\u8bbe\u6761\u4ef6\u76f4\u63a5\u76f8\u4e92\u72ec\u7acb<ul> <li>\\(\\sigma_{\\theta_1 \\land \\cdots \\land \\theta_n}(r)\\)\uff0c\u9009\u4e2d\u7684\u8bb0\u5f55\u6570\u4e3a \\(n_r \\times \\prod_{i=1}^n s_i/n_r\\)</li> <li>\\(\\sigma_{\\theta_1 \\lor \\cdots \\lor \\theta_n}(r)\\)\uff0c\u9009\u4e2d\u7684\u8bb0\u5f55\u6570\u4e3a \\(n_r \\times (1 - \\prod_{i=1}^n (1 - s_i/n_r))\\)</li> </ul> </li> <li>\\(r \\bowtie_\\theta s\\)<ul> <li>\u5982\u679c \\(r \\cap s = \\emptyset\\)\uff0c\u90a3\u4e48\u9009\u4e2d\u7684\u8bb0\u5f55\u6570\u4e3a \\(n_r \\times n_s\\)</li> <li>\u5982\u679c\u8fde\u63a5\u5c5e\u6027\u662f r \u7684 key\uff0c\u90a3\u4e48\u9009\u4e2d\u7684\u8bb0\u5f55\u6570 \\(n \\leq n_s\\)</li> <li>\u5982\u679c\u8fde\u63a5\u5c5e\u6027\u662f s \u6307\u5411 r \u7684\u5916\u952e\uff0c\u90a3\u4e48\u9009\u4e2d\u7684\u8bb0\u5f55\u6570 \\(n = n_s\\)</li> <li>\u5426\u5219\u4f30\u8ba1\u4e3a \\(\\min(\\frac{n_r}{V(A, r)}\\times n_s, \\frac{n_s}{V(A, s)}\\times n_r)\\)</li> </ul> </li> <li>\\(\\Pi_{A}(r)\\)<ul> <li>\u9009\u4e2d\u7684\u8bb0\u5f55\u6570\u4e3a \\(V(A, r)\\)</li> </ul> </li> <li>\u805a\u5408 \\(_G \\mathcal{G}_{f(A)}(r)\\)<ul> <li>\u9009\u4e2d\u7684\u8bb0\u5f55\u6570\u4e3a \\(V(A, r)\\)</li> </ul> </li> </ul>"},{"location":"cs/database/review/#_20","title":"\u4e8b\u52a1","text":"<p>\u7b80\u5316\u4e3a\u53ea\u6709 read \u548c write \u64cd\u4f5c\u7684\u4e8b\u52a1\u3002</p>"},{"location":"cs/database/review/#transaction-state","title":"Transaction State","text":"<ul> <li>active\uff1a\u4e8b\u52a1\u6b63\u5728\u6267\u884c</li> <li>partially committed\uff1a\u4e8b\u52a1\u6267\u884c\u5b8c\u6210\uff0c\u4f46\u662f\u8fd8\u6ca1\u6709\u63d0\u4ea4</li> <li>committed\uff1a\u4e8b\u52a1\u6267\u884c\u5b8c\u6210\u5e76\u4e14\u63d0\u4ea4</li> <li>failed\uff1a\u4e8b\u52a1\u6267\u884c\u5931\u8d25</li> <li>aborted\uff1a\u4e8b\u52a1\u6267\u884c\u5931\u8d25\u5e76\u4e14\u56de\u6eda</li> </ul>"},{"location":"cs/database/review/#concurrency-execution","title":"Concurrency Execution","text":""},{"location":"cs/database/review/#_21","title":"\u5178\u578b\u9519\u8bef","text":"<ol> <li>Lost update: \u4e24\u4e2a\u4e8b\u52a1\u540c\u65f6\u8bfb\u53d6\u4e00\u4e2a\u503c\uff0c\u7136\u540e\u4fee\u6539\uff0c\u7136\u540e\u5199\u56de\uff0c\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u4e8b\u52a1\u7684\u4fee\u6539\u88ab\u53e6\u4e00\u4e2a\u4e8b\u52a1\u8986\u76d6\u3002</li> <li>Dirty read: \u4e00\u4e2a\u4e8b\u52a1\u8bfb\u53d6\u4e86\u53e6\u4e00\u4e2a\u4e8b\u52a1\u672a\u63d0\u4ea4\u7684\u6570\u636e\uff0c\u7136\u540e\u53e6\u4e00\u4e2a\u4e8b\u52a1\u56de\u6eda\uff0c\u5bfc\u81f4\u8bfb\u53d6\u7684\u6570\u636e\u662f\u810f\u6570\u636e\u3002</li> <li>Unrepeatable read: \u4e00\u4e2a\u4e8b\u52a1\u8bfb\u53d6\u4e86\u4e00\u4e2a\u503c\uff0c\u7136\u540e\u53e6\u4e00\u4e2a\u4e8b\u52a1\u4fee\u6539\u4e86\u8fd9\u4e2a\u503c\uff0c\u5bfc\u81f4\u7b2c\u4e00\u4e2a\u4e8b\u52a1\u518d\u6b21\u8bfb\u53d6\u65f6\u503c\u4e0d\u540c\u3002</li> <li>Phantom read: \u4e00\u4e2a\u4e8b\u52a1\u8bfb\u53d6\u4e86\u4e00\u4e2a\u8303\u56f4\u5185\u7684\u503c\uff0c\u7136\u540e\u53e6\u4e00\u4e2a\u4e8b\u52a1\u63d2\u5165\u4e86\u4e00\u4e2a\u65b0\u7684\u503c\uff0c\u5bfc\u81f4\u7b2c\u4e00\u4e2a\u4e8b\u52a1\u518d\u6b21\u8bfb\u53d6\u65f6\u8303\u56f4\u5185\u7684\u503c\u4e0d\u540c\u3002</li> </ol>"},{"location":"cs/database/review/#schedule","title":"Schedule","text":"<p>\u8c03\u5ea6\uff0c\u4e8b\u52a1\u6267\u884c\u987a\u5e8f\u3002</p> <ul> <li>\u4e32\u884c\u8c03\u5ea6\uff1a\u4e8b\u52a1\u6309\u7167\u987a\u5e8f\u6267\u884c\uff0c\u4e00\u4e2a\u4e8b\u52a1\u6267\u884c\u5b8c\u540e\u53e6\u4e00\u4e2a\u4e8b\u52a1\u518d\u6267\u884c\uff0c\u4e00\u5b9a\u662f\u9694\u79bb\u7684</li> <li>\u975e\u4e32\u884c\u8c03\u5ea6\uff1a\u4e8b\u52a1\u5e76\u53d1\u6267\u884c\uff0c\u4ea4\u53c9\u8c03\u5ea6\u3002\u5982\u679c\u80fd\u591f\u4ea4\u6362\u5355\u4e2a\u4e0d\u51b2\u7a81\u7684\u64cd\u4f5c\u7684\u6267\u884c\u987a\u5e8f\u4f7f\u5f97\u7ed3\u679c\u548c\u4e32\u884c\u8c03\u5ea6\u4e00\u81f4\uff0c\u90a3\u4e48\u6267\u884c\u7ed3\u679c\u548c\u4e32\u884c\u8c03\u5ea6\u4e00\u81f4\u3002</li> </ul>"},{"location":"cs/database/review/#serializability","title":"Serializability","text":"<p>\u5982\u679c\u4e00\u4e2a\u4ea4\u53c9\u8c03\u5ea6\u5982\u679c\u7b49\u4ef7\u4e8e\u4e00\u4e2a\u4e32\u884c\u8c03\u5ea6\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4ea4\u53c9\u8c03\u5ea6\u662f\u53ef\u4e32\u884c\u5316\u7684\u3002</p> <p>\u4e00\u5bf9\u51b2\u7a81\u7684\u64cd\u4f5c\u7684\u987a\u5e8f\u51b3\u5b9a\u53ef\u4e32\u884c\u5316\u7684\u4ea4\u53c9\u8c03\u5ea6\u7b49\u4ef7\u7684\u4e32\u884c\u8c03\u5ea6\u7684\u987a\u5e8f\uff1a\u5982\u679c \\(T_1\\) \u5148\u6267\u884c \\(\\mathrm{read}(Q)\\)\uff0c\u7136\u540e \\(T_2\\) \u6267\u884c \\(\\mathrm{write}(Q)\\)\uff0c\u90a3\u4e48\u7b49\u4ef7\u7684\u4e32\u884c\u8c03\u5ea6\u4e2d\uff0c\\(T_1\\) \u5728 \\(T_2\\) \u4e4b\u524d\u6267\u884c\u3002</p>"},{"location":"cs/database/review/#test-for-serializability","title":"Test for Serializability","text":"<p>precedence graph \u524d\u9a71\u56fe\uff1a\u5982\u679c \\(T_i\\) \u4e2d\u80fd\u591f\u627e\u5230\u4e00\u4e2a\u64cd\u4f5c\u9700\u8981\u5148\u4e8e \\(T_j\\) \u4e2d\u7684\u64cd\u4f5c\u6267\u884c\uff0c\u90a3\u4e48\u5728\u56fe\u4e2d\u6dfb\u52a0\u4e00\u6761\u8fb9 \\(T_i \\rightarrow T_j\\)\u3002</p> <p>\u5982\u679c\u627e\u5230\u4e00\u4e2a\u73af\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8c03\u5ea6\u662f\u4e0d\u53ef\u4e32\u884c\u5316\u7684\u3002</p>"},{"location":"cs/database/review/#different-forms","title":"Different Forms","text":"<ul> <li>conflict serializability\uff1a\u5982\u4e0a</li> <li>view serializability\uff1a\u5bf9\u4e8e\u975e\u4e32\u884c\u5316\u8c03\u5ea6\u548c\u4e32\u884c\u5316\u8c03\u5ea6\uff0c\u5982\u679c\u521d\u59cb\u503c\u7531\u540c\u4e00\u4e2a\u4e8b\u52a1\u8bfb\u53d6\uff0c\u4e2d\u95f4\u503c\u7531\u540c\u4e00\u4e2a\u4e8b\u52a1\u5199\u5165\uff0c\u518d\u7531\u540c\u4e00\u4e2a\u4e8b\u52a1\u8bfb\u53d6\uff0c\u6700\u7ec8\u503c\u7531\u540c\u4e00\u4e2a\u4e8b\u52a1\u5199\u5165\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8c03\u5ea6\u662f view serializable \u7684\u3002     \u51b2\u7a81\u53ef\u4e32\u884c\u5316\u90fd\u662f\u89c6\u56fe\u53ef\u4e32\u884c\u5316\u7684\uff0c\u53cd\u4e4b\u4e0d\u4e00\u5b9a\u3002</li> </ul>"},{"location":"cs/database/review/#recoverable-schedule","title":"Recoverable Schedule","text":"<p>\u5982\u679c\u4e8b\u52a1 \\(T_i\\) \u8bfb\u53d6\u4e86\u4e8b\u52a1 \\(T_j\\) \u7684\u810f\u6570\u636e\uff0c\u90a3\u4e48 \\(T_j\\) \u5fc5\u987b\u5728 \\(T_i\\) \u4e4b\u524d\u63d0\u4ea4\u3002</p>"},{"location":"cs/database/review/#cascading-rollback","title":"Cascading Rollback","text":"<p>\u5982\u679c\u4e8b\u52a1 \\(T_i\\) \u8bfb\u53d6\u4e86\u4e8b\u52a1 \\(T_j\\) \u7684\u810f\u6570\u636e\uff0c\u7136\u540e \\(T_k\\) \u8bfb\u53d6\u4e86 \\(T_i\\) \u7684\u810f\u6570\u636e\uff0c\u90a3\u4e48 \\(T_j\\) \u56de\u6eda\uff0c\\(T_i, T_k\\) \u9700\u8981\u7ea7\u8054\u56de\u6eda\u3002</p> <p>\u8981\u907f\u514d\u53d1\u751f\u7ea7\u8054\u56de\u6eda\uff0c\u5426\u5219\u5f00\u9500\u4f1a\u5f88\u5927\u3002</p>"},{"location":"cs/database/review/#transaction-isolation-level","title":"Transaction Isolation Level","text":"<ol> <li>Serializable\uff1a\u9ed8\u8ba4\u7ea7\u522b\uff0c\u6700\u9ad8\u7ea7\u522b\uff0c\u4fdd\u8bc1\u4e8b\u52a1\u4e32\u884c\u6267\u884c</li> <li>Repeatable read\uff1a\u4fdd\u8bc1\u6ca1\u6709\u91cd\u590d\u8bfb</li> <li>Read committed\uff1a\u4fdd\u8bc1\u4e0d\u8bfb\u53d6\u810f\u6570\u636e</li> <li>Read uncommitted\uff1a\u5141\u8bb8\u8bfb\u53d6\u810f\u6570\u636e</li> </ol>"},{"location":"cs/database/review/#concurrent-control","title":"Concurrent Control","text":"<p>\u5e76\u53d1\u63a7\u5236\u534f\u8bae</p> <ul> <li>Lock-based protocol\uff1a\u52a0\u9501</li> <li>Timestamp-based protocol\uff1a\u65f6\u95f4\u6233\uff0c\u4e8b\u52a1\u6309\u7167\u65f6\u95f4\u6233\u987a\u5e8f\u6267\u884c</li> <li>Validation-based protocol\uff1a\u4e8b\u52a1\u6267\u884c\u5b8c\u540e\u9a8c\u8bc1\u662f\u5426\u53ef\u4e32\u884c\u5316</li> </ul>"},{"location":"cs/database/review/#lock-based-protocol","title":"Lock-based Protocol","text":""},{"location":"cs/database/review/#lock","title":"Lock","text":"<ul> <li>exclusive lock (X)\uff1a\u6392\u4ed6\u9501\uff0c\u53ef\u4ee5\u8bfb\u5199</li> <li>shared lock (S)\uff1a\u5171\u4eab\u9501\uff0c\u7528\u4e8e\u8bfb\u64cd\u4f5c</li> </ul> <p>S \u4e0e S \u517c\u5bb9\uff0cS \u4e0e X \u4e0d\u517c\u5bb9\uff0cX \u4e0e X \u4e0d\u517c\u5bb9\u3002</p>"},{"location":"cs/database/review/#two-phase-locking-protocol","title":"Two-phase Locking Protocol","text":"<p>\u4e00\u4e2a\u4e8b\u52a1\u5206\u4e3a\u4e24\u4e2a\u9636\u6bb5\uff1a</p> <ol> <li>growing phase\uff1a\u4e8b\u52a1\u53ef\u4ee5\u83b7\u53d6\u9501\uff0c\u4f46\u662f\u4e0d\u80fd\u91ca\u653e\u9501</li> <li>shrinking phase\uff1a\u4e8b\u52a1\u53ef\u4ee5\u91ca\u653e\u9501\uff0c\u4f46\u662f\u4e0d\u80fd\u83b7\u53d6\u9501</li> </ol> <p>\u83b7\u5f97\u6700\u540e\u4e00\u4e2a\u9501\u7684\u65f6\u95f4\u70b9\u79f0\u4e3a\u4e8b\u52a1\u7684 lock point\u3002\u6309\u7167 lock point \u7684\u987a\u5e8f\u6267\u884c\u4e8b\u52a1\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u53ef\u4e32\u884c\u5316\u3002</p> <p>\u57fa\u672c\u4e24\u9636\u6bb5\u5c01\u9501\u4e0d\u80fd\u4fdd\u8bc1\u53ef\u6062\u590d\u6027\u548c\u907f\u514d\u7ea7\u8054\u56de\u6eda\u3002</p> <ul> <li>Strict two-phase locking protocol \u4e25\u683c\u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae\uff1a\u5728\u4e8b\u52a1\u63d0\u4ea4\u4e4b\u524d\u4e0d\u80fd\u91ca\u653e X \u9501\uff0c\u4fdd\u8bc1\u53ef\u4e32\u884c\u5316\u548c\u53ef\u6062\u590d\u6027</li> <li>Rigorous two-phase locking protocol \u5f3a\u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae\uff1a\u5728\u4e8b\u52a1\u63d0\u4ea4\u4e4b\u524d\u4e0d\u80fd\u91ca\u653e\u4efb\u4f55\u9501\u3002</li> </ul>"},{"location":"cs/database/review/#lock-conversion","title":"Lock Conversion","text":"<ul> <li>First phase: lock upgrade\uff0c\u7b2c\u4e00\u9636\u6bb5\u53ef\u4ee5\u7533\u8bf7\u9501\u6216\u8005\u5347\u7ea7\u9501</li> <li>Second phase: lock downgrade\uff0c\u7b2c\u4e8c\u9636\u6bb5\u53ef\u4ee5\u964d\u7ea7\u9501\u6216\u8005\u91ca\u653e\u9501</li> </ul>"},{"location":"cs/database/review/#implementation-of-lock-based-protocol","title":"Implementation of Lock-based Protocol","text":"<p>lock table\uff1a\u7528 hash \u8868\u7684\u5f62\u5f0f\uff0c\u5bf9\u8bb0\u5f55 id \u5efa\u7acb hash \u8868\uff0c\u6bcf\u4e2a\u8bb0\u5f55\u4e0b\u6709\u4e00\u4e2a\u9501\u961f\u5217\u3002</p>"},{"location":"cs/database/review/#deadlock","title":"Deadlock","text":"<p>\u89e3\u51b3\u6b7b\u9501\u7684\u65b9\u6cd5\uff1a</p> <ul> <li>\u4e00\u6b21\u6027\u5206\u914d\u6240\u6709\u9501</li> <li>Impose partial order\uff1a\u5bf9\u6570\u636e\u8bbf\u95ee\u987a\u5e8f\u8fdb\u884c\u9650\u5236</li> <li>Timeout-based scheme\uff1a\u8d85\u65f6\u56de\u6eda</li> </ul>"},{"location":"cs/database/review/#deadlock-detection","title":"Deadlock Detection","text":"<p>\u5b9a\u671f\u68c0\u6d4b\u6b7b\u9501\uff0c\u7136\u540e\u56de\u6eda\u4e00\u4e2a\u4e8b\u52a1\u3002</p> <p>\u5efa\u7acb\u7b49\u5f85\u56fe\uff0c\u5982\u679c\u4e8b\u52a1 \\(T_i\\) \u7b49\u5f85\u4e8b\u52a1 \\(T_j\\) \u7684\u9501\uff0c\u90a3\u4e48\u5728\u56fe\u4e2d\u6dfb\u52a0\u4e00\u6761\u8fb9 \\(T_i \\rightarrow T_j\\)\u3002</p>"},{"location":"cs/database/review/#graph-based-protocol","title":"Graph-based Protocol","text":"<p>\u5047\u5982\u77e5\u9053\u6570\u636e\u6309\u7167\u504f\u5e8f\u8bbf\u95ee\uff0c\u90a3\u4e48\u53ef\u4ee5\u901a\u8fc7\u56fe\u6765\u6267\u884c\u4e8b\u52a1\u3002</p>"},{"location":"cs/database/review/#tree-protocol","title":"Tree Protocol","text":"<ul> <li>\u53ea\u6709 X \u9501</li> <li>\u7b2c\u4e00\u4e2a\u9501\u53ef\u4ee5\u653e\u5728\u4efb\u610f\u4f4d\u7f6e\uff0c\u540e\u7eed\u7684\u9501\u5fc5\u987b\u5728\u7236\u8282\u70b9\u9501\u4e0a\u65f6\u624d\u80fd\u4e0a\u9501</li> <li>\u53ef\u4ee5\u5728\u4efb\u610f\u65f6\u523b\u91ca\u653e\u9501</li> <li>\u91ca\u653e\u9501\u540e\u4e0d\u80fd\u518d\u4e0a\u9501</li> </ul> <p>\u6ca1\u6709\u6b7b\u9501\uff0c\u51b2\u7a81\u53ef\u4e32\u884c\u5316\u3002\u4e0d\u80fd\u4fdd\u8bc1\u53ef\u6062\u590d\u6027\u3002</p>"},{"location":"cs/database/review/#multiple-granularity","title":"Multiple Granularity","text":"<p>\u53ef\u4ee5\u5bf9\u8bb0\u5f55\u4e0a\u9501\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u8868\u4e0a\u9501\u3002\u9501\u53ef\u4ee5\u52a0\u5728\uff1a</p> <ul> <li>database</li> <li>area</li> <li>table</li> <li>record</li> </ul>"},{"location":"cs/database/review/#intention-lock-mode","title":"Intention Lock Mode","text":"<p>\u610f\u5411\u9501</p> <ul> <li>\u5982\u679c\u8bb0\u5f55\u4e0a\u52a0 X \u9501\uff0c\u90a3\u4e48\u5728\u8868\u4e0a\u8981\u52a0\u610f\u5411\u6392\u4ed6\u9501 IX</li> <li>\u5982\u679c\u8bb0\u5f55\u4e0a\u52a0 S \u9501\uff0c\u90a3\u4e48\u5728\u8868\u4e0a\u8981\u52a0\u610f\u5411\u6392\u4ed6\u9501 IS</li> <li>\u5982\u679c\u8868\u4e2d\u8bb0\u5f55\u6709 X \u9501\uff0c\u4f46\u662f\u8981\u5bf9\u8868\u4e0a S \u9501\uff0c\u90a3\u4e48\u8981\u52a0\u5171\u4eab\u610f\u5411\u6392\u4ed6\u9501 SIX</li> </ul> <p>\u76f8\u5bb9\u8868\uff1a</p> IS IX S SIX X IS T T T T F IX T T F F F S T F T F F SIX T F F F F X F F F F F"},{"location":"cs/database/review/#recovery-system","title":"Recovery System","text":""},{"location":"cs/database/review/#failure-classification","title":"Failure Classification","text":"<ul> <li>Transaction failure\uff1a\u4e8b\u52a1\u6267\u884c\u5931\u8d25\uff0c\u5e38\u7528\u65b9\u6cd5 undo</li> <li>System crash\uff1a\u7cfb\u7edf\u5d29\u6e83\uff0c\u5df2\u7ecf\u63d0\u4ea4\u7684\u4e8b\u52a1\u8981 redo\uff0c\u672a\u63d0\u4ea4\u7684\u4e8b\u52a1\u8981 undo</li> <li>Disk failure\uff1a\u4ecb\u8d28\u6545\u969c\uff0c\u8981\u8fdb\u884c\u5907\u4efd</li> </ul> <p>\u8981\u5c06\u65e5\u5fd7\u5199\u5165 stable storage\uff0c\u4fdd\u8bc1\u5373\u4f7f\u7cfb\u7edf\u5d29\u6e83\uff0c\u65e5\u5fd7\u4e5f\u4e0d\u4f1a\u4e22\u5931\u3002</p>"},{"location":"cs/database/review/#log-records","title":"Log Records","text":"<ul> <li><code>&lt;Ti start&gt;</code> \u4e8b\u52a1\u5f00\u59cb</li> <li><code>&lt;Ti X V1 V2&gt;</code> \u4e8b\u52a1 \\(T_i\\) \u5bf9 \\(X\\) \u4ece \\(V_1\\) \u4fee\u6539\u4e3a \\(V_2\\)</li> <li><code>&lt;Ti commit&gt;</code> \u4e8b\u52a1\u63d0\u4ea4</li> <li><code>&lt;Ti abort&gt;</code> \u4e8b\u52a1\u56de\u6eda</li> <li><code>&lt;Ti X V&gt;</code> \u4e8b\u52a1 \\(T_i\\) \u5bf9 \\(X\\) \u4fee\u6539\u4e3a \\(V\\)\uff0c\u7528\u4e8e\u56de\u6eda</li> </ul>"},{"location":"cs/database/review/#write-ahead-logging","title":"Write-ahead Logging","text":"<p>\u5148\u5199\u65e5\u5fd7\u539f\u5219\u3002\u6570\u636e\u4fee\u6539\u4e4b\u524d\uff0c\u548c\u6570\u636e\u6709\u5173\u7684\u8bb0\u5f55\u8981\u5148\u5199\u5165\u65e5\u5fd7\u3002</p>"},{"location":"cs/database/review/#transaction-commit","title":"Transaction Commit","text":"<p>\u65e5\u5fd7\u5199\u5165\u4ee3\u8868\u4e8b\u52a1\u63d0\u4ea4\uff0c\u5177\u4f53\u6570\u636e\u4e0d\u4e00\u5b9a\u5199\u5165\u78c1\u76d8\u3002</p>"},{"location":"cs/database/review/#checkpoint","title":"Checkpoint","text":"<p>\u91cd\u6f14\u65f6\uff0c\u4ece\u6700\u8fd1\u7684 checkpoint \u5f00\u59cb\u91cd\u6f14\u3002\u751f\u6210 checkpoint \u8fc7\u7a0b\uff1a</p> <ol> <li>\u65e5\u5fd7\u4ece\u5185\u5b58\u4e2d\u5199\u5165 stable storage</li> <li>\u628a buffer \u4e2d\u7684\u6570\u636e\u5168\u90e8\u5199\u5165\u78c1\u76d8</li> <li>\u5199\u4e00\u884c\u65e5\u5fd7 <code>&lt;checkpoint L&gt;</code>\uff0cL \u4e3a\u6d3b\u8dc3\u4e8b\u52a1\u8868</li> <li>\u751f\u6210 checkpoint \u65f6\u6240\u6709\u5176\u4ed6\u4e8b\u52a1\u90fd\u4f1a\u6682\u505c</li> </ol> <p>\u6839\u636e\u65e5\u5fd7\u91cf\u51b3\u5b9a\u4f55\u65f6\u751f\u6210 checkpoint\u3002</p>"},{"location":"cs/database/review/#log-record-buffering","title":"Log Record Buffering","text":"<p>\u5c06\u6570\u636e buffer \u4e2d\u7684\u5757\u5199\u5165\u78c1\u76d8\u65f6\uff0c\u8981\u5148\u5c06\u5bf9\u5e94\u7684\u65e5\u5fd7\u5199\u5165\u78c1\u76d8\u3002</p> <ul> <li>no-force policy: \u4e8b\u52a1 commit \u4e86\u4f46\u4e0d\u5f3a\u5236\u65e5\u5fd7\u5199\u5165\u78c1\u76d8</li> <li>steal policy: \u4e8b\u52a1\u672a commit \u4f46\u662f\u80fd\u5c06\u810f\u6570\u636e\u5199\u5165\u78c1\u76d8\uff08\u540c\u65f6\u5bf9\u5e94\u65e5\u5fd7\u4e5f\u5199\u5165\u78c1\u76d8\uff09</li> </ul>"},{"location":"cs/database/review/#fuzzy-checkpoint","title":"Fuzzy Checkpoint","text":"<p>\u505a checkpoint \u65f6\uff0c\u4e0d\u4e00\u6b21\u5c06\u6240\u6709\u810f\u6570\u636e\u5199\u5165\u78c1\u76d8\u3002\u800c\u662f\u8bb0\u5f55\u810f\u6570\u636e\u4f4d\u7f6e\uff0c\u5728\u4e4b\u540e\u6162\u6162\u5199\u5165\uff0c\u5f53\u810f\u6570\u636e\u5168\u90e8\u5199\u5165\u540e\uff0c\u518d\u8ba4\u5b9a\u8be5 checkpoint \u6709\u6548\u3002</p>"},{"location":"cs/database/review/#failure-with-loss-of-nonvolatile-storage","title":"Failure with Loss of Nonvolatile Storage","text":"<p>\u5982\u679c\u53d1\u751f\u4e86\u4ecb\u8d28\u6545\u969c\uff0c\u8981\u8fdb\u884c\u6062\u590d\u3002\u57fa\u672c\u64cd\u4f5c\u662f\u505a backup\u3002</p> <p>\u53d1\u751f\u6545\u969c\u65f6\u505a\u5feb\u7167\uff0c\u7136\u540e\u6162\u6162\u5907\u4efd\u3002</p>"},{"location":"cs/database/review/#aries-recovery-algorithm","title":"ARIES Recovery Algorithm","text":"<ul> <li>LSN\uff1alog sequence number\uff0c\u65e5\u5fd7\u5e8f\u5217\u53f7\u3002</li> <li>Page LSN\uff1a\u6bcf\u4e00\u4e2a\u6570\u636e\u5757\u8bb0\u5f55\u4e00\u4e2a LSN\uff0c\u8bb0\u5f55\u8fd9\u4e2a\u5757\u53cd\u6620\u4e86\u6700\u8fd1\u65e5\u5fd7\u7684\u4fee\u6539\u7ed3\u679c</li> <li>Dirty Page Table\uff1a\u8bb0\u5f55 checkpoint \u65f6\u7684\u810f\u6570\u636e\u5757<ul> <li>\u8bb0\u5f55 PageLSN \u548c RecLSN\uff0cRecLSN \u4ee3\u8868\u4ece\u6b64 LSN \u5f00\u59cb\u7684\u65e5\u5fd7\u8bb0\u5f55\u90fd\u6ca1\u6709\u53cd\u6620\u5230\u78c1\u76d8\u4e0a\uff08\u5373\u54ea\u6761\u65e5\u5fd7\u8bb0\u5f55\u5bfc\u81f4\u4e86\u8fd9\u4e2a\u810f\u6570\u636e\u5757\uff09</li> </ul> </li> </ul>"},{"location":"cs/database/review/#recovery-process","title":"Recovery Process","text":"<ol> <li>Analysis\uff1a\u5206\u6790\u65e5\u5fd7\uff0c\u627e\u5230\u6700\u8fd1\u7684 checkpoint<ul> <li>undo-list\uff1a\u5f97\u5230\u54ea\u4e9b\u4e8b\u52a1\u9700\u8981\u56de\u6eda\uff0c\u6839\u636e\u6d3b\u8dc3\u4e8b\u52a1\u8868\uff0c\u518d\u6839\u636e\u65e5\u5fd7\u627e\u5230\u54ea\u4e9b\u4e8b\u52a1\u9700\u8981\u56de\u6eda</li> <li>dirty page table\uff1a\u5f97\u5230\u6700\u65b0\u7684 dirty page table</li> <li>redoLSN\uff1aredo \u9700\u8981\u4ece\u54ea\u6761\u65e5\u5fd7\u5f00\u59cb\uff0c\u53ef\u80fd\u5728 checkpoint \u4e4b\u524d\uff0cdirty page table \u4e2d RecLSN \u7684\u6700\u5c0f\u503c</li> </ul> </li> <li>Redo\uff1a\u91cd\u6f14\u65e5\u5fd7\uff1a\u4ece redoLSN \u5f00\u59cb\uff0c\u91cd\u6f14\u65e5\u5fd7</li> <li>Undo\uff1a\u56de\u6eda\u4e8b\u52a1\uff1a\u6839\u636e undo-list \u56de\u6eda\u4e8b\u52a1</li> </ol>"},{"location":"cs/fds/","title":"\u6570\u636e\u7ed3\u6784\u57fa\u7840","text":"<p>Info</p> <p>\u672c\u6587\u6863\u4e3a\u6570\u636e\u7ed3\u6784\u57fa\u7840\u7684\u5b66\u4e60\u7b14\u8bb0\uff0c\u6388\u8bfe\u6559\u5e08\u4e3a \u6768\u5b50\u797a \u3002</p> <ul> <li>Algorithm Analysis</li> <li>Lists, Stacks and Queues</li> <li>Trees<ul> <li>Binary Trees</li> <li>Sreach Tree</li> <li>Priority Queue</li> </ul> </li> <li>Union and Find</li> <li>Graph<ul> <li>Topological Sort</li> <li>Shortest Path</li> <li>Network Flow</li> <li>MST</li> <li>DFS</li> </ul> </li> <li>Sorting</li> <li>Hashing</li> </ul>"},{"location":"cs/fds/chapter1/","title":"Agorithm Analysis","text":""},{"location":"cs/fds/chapter1/#definition-of-algorithm","title":"Definition of Algorithm","text":"<p>All algorithms must satisfy the following criteria:</p> <ul> <li>Input: zero or more externally supplied values \u5916\u90e8\u63d0\u4f9b\u7684\u8f93\u5165</li> <li>Output: at least one value \u4e00\u4e2a\u6216\u591a\u4e2a\u8f93\u51fa</li> <li>Definiteness: each instruction must be clear and unambiguous \u6bcf\u6761\u6307\u4ee4\u90fd\u5fc5\u987b\u6e05\u6670\u660e\u786e</li> <li>Finiteness: if we trace out the instructions of an algorithm, then for all cases the algorithm will terminate after a finite number of steps \u5bf9\u4e8e\u6240\u6709\u60c5\u51b5\uff0c\u7b97\u6cd5\u5c06\u5728\u6709\u9650\u6b65\u9aa4\u540e\u7ec8\u6b62</li> <li>Effectiveness: every instruction must be basic enough to be carried out \u6bcf\u6761\u6307\u4ee4\u90fd\u5fc5\u987b\u8db3\u591f\u57fa\u672c\uff0c\u80fd\u591f\u88ab\u8ba1\u7b97\u673a\u6267\u884c</li> </ul> <p>program</p> <p>A program is written in some programming language, and does not have to be finite.</p> <p>\u7a0b\u5e8f\u662f\u7528\u67d0\u79cd\u7f16\u7a0b\u8bed\u8a00\u7f16\u5199\u7684\uff0c\u4e0d\u4e00\u5b9a\u6709\u9650\u3002</p>"},{"location":"cs/fds/chapter1/#algorithm-analysis","title":"Algorithm Analysis","text":""},{"location":"cs/fds/chapter1/#_1","title":"\u5206\u6790\u5185\u5bb9","text":"<ul> <li>run times\uff1a\u8fd0\u884c\u65f6\u95f4</li> <li>time and space complexity\uff1a\u65f6\u95f4\u548c\u7a7a\u95f4\u590d\u6742\u5ea6</li> </ul> <p>\u4e00\u822c\u5206\u6790 \\(T_{avg}(N)\\) \u548c \\(T_{worst}(N)\\) \uff0c\u5373\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u3002</p>"},{"location":"cs/fds/chapter1/#asymptotic-notation","title":"Asymptotic Notation","text":"<ul> <li>\\(T(N) = O(f(N)) \\Rightarrow T(N) \\leq cf(N)\\)</li> <li>\\(T(N) = \\Omega(f(N)) \\Rightarrow T(N) \\geq cf(N)\\)</li> <li>\\(T(N) = \\Theta(f(N)) \\Rightarrow T(N) = O(f(N)) \\land T(N) = \\Omega(f(N))\\)</li> <li>\\(T(N) = o(f(N)) \\Rightarrow T(N) = O(f(N)) \\land T(N) \\neq \\Omega(f(N))\\)</li> </ul> <p>Rules:</p> <ul> <li>\u5982\u679c \\(T_1(N) = O(f(N))\\) \u4e14 \\(T_2(N) = O(g(N))\\) \uff0c\u5219<ul> <li>\\(T_1(N) + T_2(N) = \\max(O(f(N)), O(g(N)))\\)</li> <li>\\(T_1(N) \\cdot T_2(N) = O(f(N) \\cdot g(N))\\)</li> </ul> </li> <li>\u5982\u679c \\(T(N)\\) \u662f\u4e00\u4e2a \\(k\\) \u6b21\u591a\u9879\u5f0f\uff0c\u5219 \\(T(N) = \\Theta(N^k)\\)</li> <li>\\(\\log_k N = O(N)\\)\uff0clogarithms grow very slowly \u5bf9\u6570\u589e\u957f\u975e\u5e38\u7f13\u6162</li> </ul>"},{"location":"cs/fds/chapter1/#logarithms","title":"Logarithms","text":"<p>Eucild's Algorithm</p> <pre><code>int gcd(int a, int b) {\n    if (b == 0) return a;\n    else return gcd(b, a%b);\n}\n</code></pre> <p>Expontentiation \u5feb\u901f\u5e42</p> <p>\u9012\u5f52\u7248\u672c\uff08\u65e0\u8bb0\u5fc6\u5316\uff09\uff1a</p> <pre><code>int mypow(int a, int b) {\n    if (b == 0) return 1;\n    else if (b &amp; 1) return a * mypow(a, b-1);\n    else return mypow(a, b/2) * mypow(a, b/2);\n}\n</code></pre> <p>\u8fed\u4ee3\u7248\u672c\uff1a</p> <pre><code>int mypow(int a, int b) {\n    int res = 1;\n    while (b) {\n        if (b &amp; 1) res *= a;\n        a *= a;\n        b &gt;&gt;= 1;\n    }\n    return res;\n}\n</code></pre>"},{"location":"cs/fds/chapter1/#checking-analysis","title":"Checking Analysis","text":"<ul> <li> <p>\u82e5 \\(T(N) = O(N^k)\\) \uff0c\u5219\u6709</p> \\[\\frac{T(2N)}{T(N)} \\approx 2^k\\] </li> <li> <p>\u82e5 \\(T(N) = O(f(N))\\) \uff0c\u5219\u6709</p> \\[\\lim_{N \\to \\infty} \\frac{T(N)}{f(N)} = constant\\] </li> </ul>"},{"location":"cs/fds/chapter1/#_2","title":"\u9519\u9898\u6574\u7406","text":"<p>Question 1</p> <p>The recurrent equations for the time complexities of programs P1 and P2 are:</p> <ul> <li>P1: \\(T(1)=1,T(N)=T(N/3)+1\\)</li> <li>P2: \\(T(1)=1,T(N)=3T(N/3)+1\\)</li> </ul> <p>Then the correct conclusion about their time complexities is ______</p> <p>Answer</p> <ul> <li> <p>P1: </p> \\[ \\begin{aligned} T(N) &amp;= T(N/3) + 1 \\\\ &amp;= T(N/9) + 2 \\\\ &amp;= T(1) + \\log_3 N \\\\ &amp;= O(\\log_3 N) \\end{aligned} \\] </li> <li> <p>P2:</p> \\[ \\begin{aligned} T(N) &amp;= 3T(N/3) + 1 \\\\ &amp;= 9T(N/9) + 3 + 1 \\\\ &amp;= 3^{\\left\\lfloor \\log_3 N \\right\\rfloor} T(1) + 3^{\\left\\lfloor \\log_3 N \\right\\rfloor - 1} + \\cdots + 3^0 \\\\ &amp;= O(N)  \\end{aligned}    \\] </li> </ul>"},{"location":"cs/fds/chapter2/","title":"Lists, Stacks and Queues","text":""},{"location":"cs/fds/chapter2/#abstract-data-type-adt","title":"Abstract Data Type (ADT)","text":"<p>Definition: \\(\\text{Data Type} = \\{\\text{Objects}\\} \\cup \\{\\text{Operations}\\}\\)</p> <p>\u5c06\u6570\u636e\u5b9a\u4e49\u4e3a\u62bd\u8c61\u7684\u5bf9\u8c61\u96c6\u5408\uff0c\u4e0d\u8003\u8651 object \u548c operation \u5185\u90e8\u5177\u4f53\u5b9e\u73b0\u7ec6\u8282\u3002</p>"},{"location":"cs/fds/chapter2/#the-list-adt","title":"The List ADT","text":""},{"location":"cs/fds/chapter2/#adt","title":"ADT","text":"<ul> <li>Objects: \\((\\text{item}_0, \\text{item}_1, \\cdots, \\text{item}_{N-1})\\)</li> <li>Operations: Find length, Print, Make empty list, Find k-th, Insert, Delete, ...</li> </ul>"},{"location":"cs/fds/chapter2/#array-implementation","title":"Array Implementation","text":"<p>\\(\\text{array}[i] = \\text{item}_i\\)</p> <ul> <li>MaxSize: has to be estimate \u9700\u8981\u9884\u4f30\u6700\u5927\u957f\u5ea6</li> <li>Find k-th: \\(O(1)\\)</li> <li>Insert and Delete: \\(O(N)\\)</li> </ul>"},{"location":"cs/fds/chapter2/#linked-list","title":"Linked List","text":"<ul> <li> <p>Insert:</p> <p><pre><code>// Insert x after p\nnewnode = malloc(sizeof(struct Node));\nnewnode-&gt;item = x;\nnewnode-&gt;next = p-&gt;next;\np-&gt;next = newnode;\n</code></pre> - Delete:</p> <pre><code>// Delete node p-&gt;next\nq = p-&gt;next;\np-&gt;next = q-&gt;next;\nfree(q);\n</code></pre> </li> </ul> <p>Double Linked List</p> <pre><code>struct Node {\n    Item item;\n    struct Node *llink;\n    struct Node *rlink;\n};\n</code></pre>"},{"location":"cs/fds/chapter2/#applications","title":"Applications","text":""},{"location":"cs/fds/chapter2/#the-polynomial-adt","title":"The Polynomial ADT","text":"<p>Objects: pair \\(\\langle \\text{exponent}, \\text{coefficient} \\rangle\\)</p>"},{"location":"cs/fds/chapter2/#multilists","title":"Multilists","text":"<p>\u5b58\u50a8\u4e8c\u7ef4\u6570\u636e\u3002</p> <p>Linked List Matrix</p> <p>\u6bcf\u884c\u4e24\u4e2a\u94fe\u8868\u5b58\u50a8\u975e\u96f6\u5143\u7d20\u548c\u5217\u5730\u5740\u3002</p>"},{"location":"cs/fds/chapter2/#cursor-implementation","title":"Cursor Implementation","text":"<p>\u6e38\u6807\u5b9e\u73b0\uff0c\u5373\u6570\u7ec4\u6a21\u62df\u94fe\u8868\u3002</p>"},{"location":"cs/fds/chapter2/#the-stack-adt","title":"The Stack ADT","text":""},{"location":"cs/fds/chapter2/#adt_1","title":"ADT","text":"<p>LIFO: Last In First Out</p>"},{"location":"cs/fds/chapter2/#implimentation","title":"Implimentation","text":"<ul> <li>Linked List</li> <li>Array</li> </ul>"},{"location":"cs/fds/chapter2/#applications_1","title":"Applications","text":"<ul> <li>\u62ec\u53f7\u5339\u914d</li> <li>postfix evaluation \u540e\u7f00\u8868\u8fbe\u5f0f\u6c42\u503c</li> <li>infix to postfix \u4e2d\u7f00\u8868\u8fbe\u5f0f\u8f6c\u540e\u7f00\u8868\u8fbe\u5f0f</li> <li>Function calls \u51fd\u6570\u8c03\u7528\uff0c\u7cfb\u7edf\u6808</li> </ul>"},{"location":"cs/fds/chapter2/#the-queue-adt","title":"The Queue ADT","text":""},{"location":"cs/fds/chapter2/#adt_2","title":"ADT","text":"<p>FIFO: First In First Out</p>"},{"location":"cs/fds/chapter2/#implementation","title":"Implementation","text":"<p>Array Implementation</p> <p>Circular Queue</p> <p>\u82e5\u4e0d\u5b58\u50a8\u961f\u5217\u957f\u5ea6\uff0c\u5219\u65e0\u6cd5\u5224\u65ad\u961f\u5217\u4e3a\u7a7a\u8fd8\u662f\u6ee1\u3002</p> <p>\u4e00\u822c\u505a\u6cd5\u4e3a\u6d6a\u8d39\u4e00\u4e2a\u7a7a\u95f4\u6216\u8005\u5b58\u50a8\u961f\u5217\u957f\u5ea6\u3002</p>"},{"location":"cs/fds/chapter2/#_1","title":"\u9519\u9898\u6574\u7406","text":"<p>Question 1</p> <p>To merge two singly linked ascending lists, both with N nodes, into one singly linked ascending list, the minimum possible number of comparisons is ______.</p> <p>Answer</p> <p>\\(N\\)</p>"},{"location":"cs/fds/chapter3/","title":"Trees","text":""},{"location":"cs/fds/chapter3/#tree","title":"Tree","text":""},{"location":"cs/fds/chapter3/#definition","title":"Definition","text":"<p>A tree is a collection of nodes. The collection can be empty; otherwise, a tree consists of</p> <ul> <li>root</li> <li>zero or more subtrees, each of whose roots are connected by a directed edge from the root.</li> </ul> <p>\u6811\u53ef\u4ee5\u4e3a\u7a7a\u3002\u5982\u679c\u4e0d\u4e3a\u7a7a\uff0c\u6811\u7531\u6839\u8282\u70b9\u548c\u82e5\u5e72\u5b50\u6811\u7ec4\u6210\uff0c\u6bcf\u4e2a\u5b50\u6811\u7684\u6839\u8282\u70b9\u901a\u8fc7\u4e00\u6761\u4ece\u6839\u51fa\u53d1\u7684\u6709\u5411\u8fb9\u4e0e\u6839\u8282\u70b9\u76f8\u8fde\u3002</p> <p>\u6982\u5ff5\u5b9a\u4e49\uff1a</p> <ul> <li>degree of a node: the number of its children</li> <li>degree of a tree: \\(\\displaystyle\\max_{v \\in V} \\deg(v)\\)</li> <li>parent: a node that has subtrees</li> <li>child: the roots of subtrees of a parent</li> <li>sibling: nodes that have the same parent</li> <li>leaf(terminal node): a node that has no children</li> <li>path from \\(n_1\\) to \\(n_k\\): a sequence of nodes \\(n_1, n_2, \\dots, n_k\\) such that \\(n_i\\) is the parent of \\(n_{i+1}\\) for \\(i = 1, 2, \\dots, k-1\\) \u4ece\u4e0a\u5230\u4e0b\u7684\u8def\u5f84</li> <li>path length: the number of edges on the path</li> <li>depth of a node: the path length from the root to the node \\(n\\) \u4ece\u6839\u5230\u8282\u70b9\u7684\u8def\u5f84\u957f\u5ea6</li> <li>height of a node: the path length from the node \\(n\\) to the deepest leaf \u4ece\u8282\u70b9\u5230\u6700\u6df1\u53f6\u5b50\u7684\u8def\u5f84\u957f\u5ea6</li> <li>height(depth) of a tree: the height of the root \u6811\u7684\u9ad8\u5ea6</li> <li>ancestor: all the nodes along the path from the node up to the root \u4ece\u8282\u70b9\u5230\u6839\u7684\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8282\u70b9</li> <li>descendant: all the nodes in the subtree</li> </ul>"},{"location":"cs/fds/chapter3/#implementation","title":"Implementation","text":""},{"location":"cs/fds/chapter3/#list-representation","title":"List Representation","text":"<pre><code>struct TreeNode {\n    ElementType Element;\n    PtrToNode LeftChild;\n    PtrToNode RightChild;\n};\n</code></pre>"},{"location":"cs/fds/chapter3/#first-child-next-sibling-representation","title":"First-Child Next-Sibling Representation","text":"<pre><code>struct TreeNode {\n    ElementType Element;\n    PtrToNode FirstChild;\n    PtrToNode NextSibling;\n};\n</code></pre>"},{"location":"cs/fds/chapter3/#binary-trees","title":"Binary Trees","text":""},{"location":"cs/fds/chapter3/#definition_1","title":"Definition","text":"<p>A binary tree is a tree in which no node can have more than two children.</p>"},{"location":"cs/fds/chapter3/#tree-traversals","title":"Tree Traversals","text":"<ul> <li> <p>Preorder</p> <pre><code>void preorder(PtrToNode T) {\n    if (T != NULL) {\n        visit(T);\n        preorder(T-&gt;LeftChild);\n        preorder(T-&gt;RightChild);\n    }\n}\n</code></pre> </li> <li> <p>Inorder</p> <pre><code>void inorder(PtrToNode T) {\n    if (T != NULL) {\n        inorder(T-&gt;LeftChild);\n        visit(T);\n        inorder(T-&gt;RightChild);\n    }\n}\n</code></pre> </li> <li> <p>Postorder</p> <pre><code>void postorder(PtrToNode T) {\n    if (T != NULL) {\n        postorder(T-&gt;LeftChild);\n        postorder(T-&gt;RightChild);\n        visit(T);\n    }\n}\n</code></pre> </li> <li> <p>Levelorder</p> <pre><code>void levelorder(PtrToNode T) {\n    enqueue(T);\n    while (!isEmpty()) {\n        T = dequeue();\n        visit(T);\n        if (T-&gt;LeftChild != NULL) enqueue(T-&gt;LeftChild);\n        if (T-&gt;RightChild != NULL) enqueue(T-&gt;RightChild);\n    }\n}\n</code></pre> </li> </ul>"},{"location":"cs/fds/chapter3/#threaded-binary-trees","title":"Threaded Binary Trees","text":"<p>\u4e8c\u53c9\u7ebf\u7d22\u6811\u3002\u5c06\u904d\u5386\u987a\u5e8f\u4fdd\u5b58\uff0c\u65b9\u4fbf\u4e4b\u540e\u7684\u904d\u5386\u3002</p> <p>Rules:</p> <ol> <li> <p>If a node has no left child, its left pointer points to its inorder predecessor.</p> <p>\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u6ca1\u6709\u5de6\u513f\u5b50\uff0c\u90a3\u4e48\u5b83\u7684\u5de6\u6307\u9488\u6307\u5411\u5b83\u7684\u4e2d\u5e8f\u524d\u9a71\u3002</p> </li> <li> <p>If a node has no right child, its right pointer points to its inorder successor.</p> <p>\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u6ca1\u6709\u53f3\u513f\u5b50\uff0c\u90a3\u4e48\u5b83\u7684\u53f3\u6307\u9488\u6307\u5411\u5b83\u7684\u4e2d\u5e8f\u540e\u7ee7\u3002</p> </li> <li> <p>\u9700\u8981\u589e\u52a0\u4e00\u4e2a head node\uff0c\u4f7f\u5f97 head-&gt;LeftChild \u6307\u5411\u6839\u8282\u70b9\uff0chead-&gt;RightChild \u6307\u5411\u81ea\u5df1\u3002</p> </li> </ol> <p>\u5efa\u7acb\u7ebf\u7d22\u4e8c\u53c9\u6811\uff1a</p> <pre><code>void ThreadTree(PtrToNode *p, PtrToNode **pre){\n    if(p == NULL) return;\n    ThreadTree(p-&gt;LeftChild, pre);\n    threadNode(p, pre);\n    ThreadTree(p-&gt;RightChild, pre);\n}\n</code></pre> <p>\u904d\u5386\u7ebf\u7d22\u4e8c\u53c9\u6811\uff1a</p> <pre><code>void InorderTraversal(PtrToNode T){\n    PtrToNode p = T-&gt;LeftChild;\n    while(p != T){\n        while(p-&gt;LeftTag == 0) p = p-&gt;LeftChild;\n        visit(p);\n        while(p-&gt;RightTag == 1 &amp;&amp; p-&gt;RightChild != T){\n            p = p-&gt;RightChild;\n            visit(p);\n        }\n        p = p-&gt;RightChild;\n    }\n}\n</code></pre>"},{"location":"cs/fds/chapter3/#properties-of-binary-trees","title":"Properties of Binary Trees","text":""},{"location":"cs/fds/chapter3/#_1","title":"\u5f62\u6001","text":"<ul> <li>full binary tree: every node has either zero or two children \u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\u6216\u8005\u6ca1\u6709\u5b50\u8282\u70b9</li> <li>complete binary tree: every level except possibly the last is completely filled, and all nodes in the last level are as far left as possible \u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\uff0c\u9664\u4e86\u6700\u540e\u4e00\u5c42\u7684\u8282\u70b9\uff0c\u6700\u540e\u4e00\u5c42\u7684\u8282\u70b9\u5c3d\u53ef\u80fd\u9760\u5de6</li> <li>perfect binary tree: a full binary tree in which all leaves are at the same level \u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\uff0c\u6240\u6709\u53f6\u5b50\u8282\u70b9\u90fd\u5728\u540c\u4e00\u5c42\u4e14\u586b\u6ee1\u6700\u540e\u4e00\u5c42</li> <li> <p>skewed binary tree: a binary tree in which all nodes have only one child \u6bcf\u4e2a\u8282\u70b9\u90fd\u53ea\u6709\u4e00\u4e2a\u5b50\u8282\u70b9 </p> <ul> <li>left skewed: every node has a left child, but no node has a right child \u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u5de6\u513f\u5b50\uff0c\u4f46\u662f\u6ca1\u6709\u53f3\u513f\u5b50</li> <li>right skewed: every node has a right child, but no node has a left child \u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u53f3\u513f\u5b50\uff0c\u4f46\u662f\u6ca1\u6709\u5de6\u513f\u5b50</li> </ul> </li> </ul>"},{"location":"cs/fds/chapter3/#_2","title":"\u6570\u91cf\u5173\u7cfb","text":"<ul> <li>level \\(i\\) \u7684\u8282\u70b9\u6570\u6700\u591a\u4e3a \\(2^{i-1}, \\quad i \\geq 1\\)</li> <li>depth \\(k\\) \u7684\u4e8c\u53c9\u6811\u6700\u591a\u6709 \\(2^k - 1\\) \u4e2a\u8282\u70b9\uff0c\u6700\u5c11\u6709 \\(k\\) \u4e2a\u8282\u70b9</li> <li>\u8bbe\u5ea6\u4e3a \\(\\deg\\) \u7684\u8282\u70b9\u603b\u6570\u4e3a \\(n_{\\deg}\\)\uff0c\u5219 \\(n_0 = n_2 + 1\\)</li> </ul>"},{"location":"cs/fds/chapter3/#the-search-tree-adt","title":"The Search Tree ADT","text":""},{"location":"cs/fds/chapter3/#definition_2","title":"Definition","text":"<p>\u5de6\u8282\u70b9\u7684\u503c\u5c0f\u4e8e\u6839\u8282\u70b9\uff0c\u53f3\u8282\u70b9\u7684\u503c\u5927\u4e8e\u6839\u8282\u70b9\u3002</p>"},{"location":"cs/fds/chapter3/#implementation_1","title":"Implementation","text":"<ul> <li>Find</li> <li>Insert</li> <li> <p>Delete</p> <ul> <li> <p>case 1: the node to be deleted is a leaf node</p> <p>\u76f4\u63a5\u5220\u9664</p> </li> <li> <p>case 2: the node to be deleted has only one child</p> <p>\u5c06\u5b50\u8282\u70b9\u63d0\u5347\u5230\u88ab\u5220\u9664\u8282\u70b9\u7684\u4f4d\u7f6e</p> </li> <li> <p>case 3: the node to be deleted has two children</p> <p>\u5c06\u53f3\u5b50\u6811\u7684\u6700\u5c0f\u8282\u70b9\u6216\u8005\u5de6\u5b50\u6811\u7684\u6700\u5927\u8282\u70b9\u63d0\u5347\u5230\u88ab\u5220\u9664\u8282\u70b9\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u5220\u9664\u8be5\u8282\u70b9</p> </li> </ul> </li> </ul>"},{"location":"cs/fds/chapter3/#priority-queues-heaps","title":"Priority Queues (Heaps)","text":""},{"location":"cs/fds/chapter3/#adt","title":"ADT","text":"<ul> <li>Operations: Insert, DeleteMin, FindMin, ...</li> </ul>"},{"location":"cs/fds/chapter3/#simple-implementation","title":"Simple Implementation","text":"<ul> <li>Array: \\(O(1)\\) for Insert, \\(O(n)\\) for FindMin and then \\(O(n)\\) for delete</li> <li>Linked List: \\(O(1)\\) for Insert, \\(O(n)\\) for FindMin and then \\(O(1)\\) for delete</li> <li>Ordered Array: \\(O(n)\\) for find the position and then \\(O(n)\\) for insert, \\(O(1)\\) for DeleteMin or DeleteMax</li> <li>Ordered Linked List: \\(O(n)\\) for find the position and then \\(O(1)\\) for insert, \\(O(1)\\) for DeleteMin or DeleteMax</li> </ul>"},{"location":"cs/fds/chapter3/#binary-heap","title":"Binary Heap","text":"<p>complete binary tree with the heap-order property</p> <p>\u4f7f\u7528\u6570\u7ec4\u5b58\u50a8\uff0c\u4ece 1 \u5f00\u59cb\u7f16\u53f7\uff0c\u5bf9\u4e8e\u8282\u70b9 \\(i\\)\uff0c\u5176\u7236\u8282\u70b9\u4e3a \\(i/2\\)\uff0c\u5de6\u513f\u5b50\u4e3a \\(2i\\)\uff0c\u53f3\u513f\u5b50\u4e3a \\(2i+1\\)\u3002</p> <p>Heap Order Property</p> <p>A min tree is a tree in which the key value in each node is no larger than the key values in its children (if any). A min heap is a complete binary tree that is also a min tree.</p> <ul> <li>\u6700\u5c0f\u5806\uff1a\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u90fd\u5c0f\u4e8e\u7b49\u4e8e\u5176\u5b50\u8282\u70b9\u7684\u503c\u3002</li> <li>\u6700\u5927\u5806\uff1a\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u90fd\u5927\u4e8e\u7b49\u4e8e\u5176\u5b50\u8282\u70b9\u7684\u503c\u3002</li> </ul>"},{"location":"cs/fds/chapter3/#operations","title":"Operations","text":"<p>\u4ee5\u6700\u5c0f\u5806\u4e3a\u4f8b\u3002</p> <p>\u5411\u4e0a\u8c03\u6574\u548c\u5411\u4e0b\u8c03\u6574\uff1a</p> <pre><code>void upAdjust(int p) {\n    if (p == 1) return;\n    if (heap[p] &lt; heap[p/2]) {\n        swap(heap[p], heap[p/2]);\n        upAdjust(p/2);\n    }\n}\nvoid downAdjust(int p) {\n    int minIndex = p;\n    if (p*2 &lt;= size &amp;&amp; heap[p*2] &lt; heap[minIndex]) minIndex = p*2;\n    if (p*2+1 &lt;= size &amp;&amp; heap[p*2+1] &lt; heap[minIndex]) minIndex = p*2+1;\n    if (minIndex != p) {\n        swap(heap[p], heap[minIndex]);\n        downAdjust(minIndex);\n    }\n}\n</code></pre> <ul> <li>Insert: \u653e\u5230\u6700\u540e\uff0c\u7136\u540e\u5411\u4e0a\u8c03\u6574\u3002</li> <li>Deletemin: \u5c06\u6839\u8282\u70b9\u4e0e\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u4ea4\u6362\uff0c\u7136\u540e\u5220\u9664\u6700\u540e\u4e00\u4e2a\u8282\u70b9\uff0c\u5411\u4e0b\u8c03\u6574\u6839\u8282\u70b9\u3002</li> <li>FindMin: \u6839\u8282\u70b9\u3002</li> <li> <p>BuildHeap: \u4ece\u6700\u540e\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u5f00\u59cb\uff0c\u5411\u4e0b\u8c03\u6574\u3002\u590d\u6742\u5ea6\u4e3a \\(O(n)\\)\u3002</p> <p>\u6240\u6709\u8282\u70b9\u9ad8\u5ea6\u4e4b\u548c</p> <p>\u5047\u8bbe\u6811\u7684\u9ad8\u5ea6\u4e3a \\(h\\)\uff0c\u5219\u9ad8\u5ea6\u4e3a \\(i\\) \u7684\u8282\u70b9\u6709 \\(2^{h-i}\\) \u4e2a\uff0c\u6240\u6709\u8282\u70b9\u9ad8\u5ea6\u4e4b\u548c\u4e3a</p> \\[ \\begin{aligned} S(n) &amp;= 2^{h-1} + 2^{h-2} \\times 2 + 2^{h-3} \\times 3 + \\dots + 2^{0} \\times h \\\\ &amp;= O(n - \\log_2(n+1)) \\\\ &amp;= O(n) \\end{aligned} \\] <p>\u6ce8\u610f\u5982\u679c\u5411\u4e0a\u8c03\u6574\uff0c\u590d\u6742\u5ea6\u4e3a \\(O(n \\log n)\\)\u3002</p> </li> </ul>"},{"location":"cs/fds/chapter3/#d-heaps","title":"d-Heaps","text":"<p>\u6bcf\u4e2a\u8282\u70b9\u6709 \\(d\\) \u4e2a\u5b50\u8282\u70b9\u3002</p> <p>\u5411\u4e0b\u8c03\u6574\u64cd\u4f5c\u9700\u8981\u6bd4\u8f83 \\(d\\) \u4e2a\u8282\u70b9\uff0c\u6240\u4ee5 DeleteMin \u64cd\u4f5c\u590d\u6742\u5ea6\u53d8\u4e3a \\(O(d \\log_d n)\\)\u3002</p>"},{"location":"cs/fds/chapter3/#_3","title":"\u9519\u9898\u6574\u7406","text":"<p>Question 1</p> <p>If a binary search tree of N nodes is complete, which one of the following statements is FALSE?</p> <p>False:</p> <ul> <li>the maximum key must be at a leaf node.</li> </ul> <p>\u6ce8\u610f\u6761\u4ef6\u3002</p>"},{"location":"cs/fds/chapter4/","title":"Union and Find","text":""},{"location":"cs/fds/chapter4/#the-disjoint-set-adt","title":"The Disjoint Set ADT","text":"<p>Relation \\(\\sim\\) is an equivalence relation iff its symmetric(\u5bf9\u79f0), reflexive(\u81ea\u53cd) and transitive(\u4f20\u9012).</p> <p>Two members \\(x, y\\) are said to be in the same equivalence class iff \\(x \\sim y\\).</p>"},{"location":"cs/fds/chapter4/#operations","title":"Operations","text":"<ul> <li>Union: combine two equivalence classes into one</li> <li>Find: determine which equivalence class a given element belongs to</li> </ul>"},{"location":"cs/fds/chapter4/#implementation","title":"Implementation","text":"<p><code>S[u]</code> \u4ee3\u8868\u8282\u70b9 <code>u</code> \u7684\u7236\u8282\u70b9\u3002</p>"},{"location":"cs/fds/chapter4/#implementation-1","title":"Implementation 1","text":"<p>\u6bcf\u4e2a\u96c6\u5408\u7684\u6839\u8282\u70b9\u4e0e\u4e00\u4e2a\u96c6\u5408\u7684\u7f16\u53f7\u5efa\u7acb\u53cc\u5411\u94fe\u8868\u3002</p>"},{"location":"cs/fds/chapter4/#implementation-2","title":"Implementation 2","text":"<p><code>S[root] = 0</code>\uff0c\u96c6\u5408\u7f16\u53f7\u4e3a\u6839\u8282\u70b9\u7f16\u53f7\u3002</p>"},{"location":"cs/fds/chapter4/#smart-union-algorithms","title":"Smart Union Algorithms","text":""},{"location":"cs/fds/chapter4/#union-by-size","title":"Union by Size","text":"<p>Let <code>S[root] = -size</code>\uff0c<code>size</code> \u4e3a\u96c6\u5408\u5927\u5c0f\u3002</p> <p>\u6bcf\u6b21 Union \u65f6\uff0c\u5c06\u5c0f\u96c6\u5408\u7684\u6839\u8282\u70b9\u6307\u5411\u5927\u96c6\u5408\u7684\u6839\u8282\u70b9\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(n\\) \u6b21 Union \u64cd\u4f5c\uff0c\\(m\\) \u6b21 Find \u64cd\u4f5c\uff0c\u590d\u6742\u5ea6 \\(O(n + m \\log n)\\)\u3002</p>"},{"location":"cs/fds/chapter4/#union-by-height","title":"Union by Height","text":"<p>\u6bcf\u6b21 <code>Union</code> \u65f6\uff0c\u5c06\u9ad8\u5ea6\u5c0f\u7684\u6839\u8282\u70b9\u6307\u5411\u9ad8\u5ea6\u5927\u7684\u6839\u8282\u70b9\u3002</p>"},{"location":"cs/fds/chapter4/#path-compression","title":"Path Compression","text":"<p>\u8def\u5f84\u538b\u7f29\u3002</p> <pre><code>int find(int x) {\n    if (isroot(x)) return x;\n    else return S[x] = find(S[x]);\n}\n</code></pre>"},{"location":"cs/fds/chapter4/#time-complexity","title":"Time Complexity","text":"<p>\\(O(\\alpha(n))\\)\uff0c\u5176\u4e2d \\(\\alpha(n)\\) \u4e3a Ackermann \u51fd\u6570\u7684\u53cd\u51fd\u6570\u3002</p>"},{"location":"cs/fds/chapter5/","title":"Graph","text":""},{"location":"cs/fds/chapter5/#definition","title":"Definition","text":"<p>\\(G(V,E)\\) is a graph, where \\(V\\) is the set of vertices and \\(E\\) is the set of edges.</p> <ul> <li>Undirected gragh: \\((v_i, v_j)=(v_j, v_i)\\)</li> <li>Directed graph: \\(\\langle v_i, v_j \\rangle \\neq \\langle v_j, v_i \\rangle\\)</li> <li> <p>Restrictions:</p> <ul> <li>No self loop</li> <li>Multigraph is not considered</li> </ul> </li> <li> <p>Complete graph: with maximum number of edges</p> </li> <li> <p>Adjacent:</p> <ul> <li>\\(v_i\\) and \\(v_j\\) are adjacent if \\((v_i, v_j) \\in E\\)</li> <li>\\(v_i\\) is adjacent to \\(v_j\\) if \\(\\langle v_i, v_j \\rangle \\in E\\)</li> </ul> </li> <li> <p>Length of a path: number of edges in the path</p> </li> <li>Simple path: \\(v_0, v_1, \\cdots, v_k\\) are distinct</li> <li>Cycle: simple path with \\(v_0 = v_k\\)</li> <li>Strongly connected directed graph: for every pair of vertices \\(v_i\\) and \\(v_j\\), there is a path from \\(v_i\\) to \\(v_j\\) and a path from \\(v_j\\) to \\(v_i\\)</li> <li>Strongly connected component: a maximal strongly connected subgraph</li> </ul>"},{"location":"cs/fds/chapter5/#topological-sort","title":"Topological Sort","text":""},{"location":"cs/fds/chapter5/#definition_1","title":"Definition","text":"<ul> <li>AOV Network: \u6709\u5411\u56fe\uff0c\u6709\u5411\u8fb9\u8868\u793a\u5173\u7cfb\u3002</li> <li>Partial order\uff1atransitive and irreflexive</li> </ul>"},{"location":"cs/fds/chapter5/#algorithm","title":"Algorithm","text":"<pre><code>void Topo(Graph G) {\n    Queue Q;\n    for (each vertex v) {\n        if (indegree[v] == 0) {\n            Enqueue(Q, v);\n        }\n    }\n    while (!IsEmpty(Q)) {\n        v = Dequeue(Q);\n        print v;\n        for (each w adjacent to v) {\n            if (--indegree[w] == 0) {\n                Enqueue(Q, w);\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"cs/fds/chapter5/#shortest-path","title":"Shortest Path","text":""},{"location":"cs/fds/chapter5/#dijkstras-algorithm","title":"Dijkstra's Algorithm","text":"<pre><code>void Dijkstra(Graph G, Vertex s) {\n    MinHeap H;\n    T[s].dist = 0;\n    Insert(H, s);\n    while (!IsEmpty(H)) {\n        Vertex v = DeleteMin(H);\n        T[v].known = true;\n        for (each w adjacent to v) {\n            if (!T[w].known) {\n                if (T[v].dist + weight &lt; T[w].dist) {\n                    T[w].dist = T[v].dist + weight;\n                    T[w].path = v;\n                    Insert(H, w);\n                }\n            }\n        }\n    }\n}\n</code></pre> <ul> <li>Time complexity: \\(O((|V| + |E|) \\log |V|)\\)</li> <li>Space complexity: \\(O(|V|)\\)</li> </ul>"},{"location":"cs/fds/chapter5/#bellman-ford-algorithm","title":"Bellman-Ford Algorithm","text":"<p>with negative weight</p> <pre><code>void SPFA(Graph G, Vertex s) {\n    Queue Q;\n    T[s].dist = 0;\n    Enqueue(Q, s);\n    while (!IsEmpty(Q)) {\n        Vertex v = Dequeue(Q);\n        T[v].inqueue = false;\n        for (each w adjacent to v) {\n            if (T[v].dist + weight &lt; T[w].dist) {\n                T[w].dist = T[v].dist + weight;\n                T[w].path = v;\n                if (!T[w].inqueue) {\n                    Enqueue(Q, w);\n                    T[w].inqueue = true;\n                }\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"cs/fds/chapter5/#acyclic-graph","title":"Acyclic Graph","text":"<p>Use topological sort (BFS)</p>"},{"location":"cs/fds/chapter5/#network-flow","title":"Network Flow","text":"<ul> <li> <p>\u6b8b\u5dee\u56fe\uff1a\u8bbe \\(f\\) \u4e3a\u6d41\u91cf\uff0c\u5219\u6b8b\u5dee\u4e3a\uff1a</p> \\[ c_f(u, v) = \\begin{cases} c(u, v) - f(u, v) &amp; \\text{if } (u, v) \\in E \\\\ f(v, u) &amp; \\text{if } (v, u) \\in E \\\\ 0 &amp; \\text{otherwise} \\end{cases} \\] </li> <li> <p>\u627e\u6b8b\u5dee\u56fe\u4e2d\u4ece\u6e90\u70b9\u5230\u6c47\u70b9\u7684\u4e00\u6761\u7b80\u5355\u8def\u5f84\uff0c\u79f0\u4e3a\u589e\u5e7f\u8def\uff08augmenting path\uff09\u3002</p> </li> <li>\u589e\u5e7f\u8def\u6bcf\u6b21\u80fd\u63a8\u9001\u7684\u6d41\u91cf\u4e3a\u8def\u5f84\u4e0a\u6700\u5c0f\u7684\u6b8b\u5dee\u3002</li> <li>\u66f4\u65b0\u6b8b\u5dee\u56fe\uff0c\u76f4\u5230\u627e\u4e0d\u5230\u589e\u5e7f\u8def\u4e3a\u6b62\u3002</li> </ul>"},{"location":"cs/fds/chapter5/#minimum-spanning-tree","title":"Minimum Spanning Tree","text":""},{"location":"cs/fds/chapter5/#prims-algorithm","title":"Prim's Algorithm","text":"<ul> <li>Start from set with one vertex</li> <li>Find the minimum edge connecting the set and the rest vertices.</li> <li>Add the adjacent vertex to the set.</li> <li>Repeat until all vertices are in the set.</li> </ul>"},{"location":"cs/fds/chapter5/#krukals-algorithm","title":"Krukal's Algorithm","text":"<p>Sort all edges by weight. Then add the edge to the tree if it doesn't form a cycle. (use union-find)</p>"},{"location":"cs/fds/chapter5/#dfs","title":"DFS","text":""},{"location":"cs/fds/chapter5/#biconnectivity","title":"Biconnectivity","text":"<ul> <li>Biconnectivity \u53cc\u8fde\u901a\uff1a\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u81f3\u5c11\u5b58\u5728\u4e24\u6761\u4e0d\u76f8\u4ea4\u7684\u8def\u5f84\u3002</li> <li>Articulation point \u5272\u70b9\uff1a\u5220\u9664\u8be5\u70b9\u540e\uff0c\u56fe\u4e0d\u518d\u8fde\u901a\u5206\u91cf\u6570\u91cf\u589e\u52a0\u4e86\u3002</li> <li>Bi-connected component \u53cc\u8fde\u901a\u5206\u91cf\uff1a\u6700\u5927\u7684\u53cc\u8fde\u901a\u5b50\u56fe\u3002</li> </ul>"},{"location":"cs/fds/chapter5/#tarjans-algorithm","title":"Tarjan's Algorithm","text":"<ul> <li><code>dfn[u]</code>\uff1a\u8282\u70b9 <code>u</code> \u7684 dfs \u5e8f\u3002</li> <li><code>low[u]</code>\uff1a\u8282\u70b9 <code>u</code> \u6216\u5176\u5b50\u6811\u80fd\u591f\u8ffd\u6eaf\u5230\u7684\u6700\u65e9\u7684\u7956\u5148\u8282\u70b9\u3002</li> </ul> <pre><code>void Tarjan(Graph G, Vertex u) {\n    dfn[u] = low[u] = ++cnt;\n    stack.push(u);\n    instack[u] = true;\n    for (each v adjacent to u) {\n        if (!dfn[v]) {\n            Tarjan(G, v);\n            low[u] = min(low[u], low[v]);\n        } else if (instack[v]) {\n            low[u] = min(low[u], dfn[v]);\n        }\n    }\n    if (dfn[u] == low[u]) {\n        ++bcc_cnt;\n        do {\n            v = stack.pop();\n            bcc[v] = bcc_cnt;\n            instack[v] = false;\n        } while (u != v);\n    }\n}\nvoid FindBCC(Graph G) {\n    for (each v) {\n        if (!dfn[v]) {\n            Tarjan(G, v);\n        }\n    }\n}\n</code></pre>"},{"location":"cs/fds/chapter5/#euler-circuits-and-paths","title":"Euler Circuits and Paths","text":"<ul> <li> <p>Euler Path\uff1a\u7ecf\u8fc7\u6240\u6709\u8fb9\u4e00\u6b21\u7684\u901a\u8def\u3002</p> <p>\u6761\u4ef6\uff1a\u6709\u4e14\u4ec5\u6709\u4e24\u4e2a\u8282\u70b9\u5ea6\u6570\u4e3a\u5947\u6570\uff0c\u5176\u4f59\u8282\u70b9\u5ea6\u6570\u4e3a\u5076\u6570\u3002</p> <p>Algorithm</p> <p>\u4ece\u5ea6\u6570\u4e3a\u5947\u6570\u7684\u8282\u70b9\u5f00\u59cb dfs\uff0c\u904d\u5386\u5b8c\u6240\u6709\u8fb9\u540e\uff0c\u6b27\u62c9\u8def\u4e3a dfs \u7684\u540e\u5e8f\u904d\u5386\u3002</p> </li> <li> <p>Euler Circuit\uff1a\u7ecf\u8fc7\u6240\u6709\u8fb9\u4e00\u6b21\u7684\u56de\u8def\u3002</p> <p>\u6761\u4ef6\uff1a\u6240\u6709\u8282\u70b9\u5ea6\u6570\u4e3a\u5076\u6570\u3002</p> <p>Algorithm</p> <p>Hierholzer's Algorithm</p> <p>\u4ece\u4e00\u6761\u56de\u8def\u5f00\u59cb\uff0c\u6bcf\u6b21\u5c06\u56de\u8def\u4e0a\u4efb\u610f\u8282\u70b9\u66ff\u6362\u4e3a\u5b50\u56de\u8def\uff0c\u76f4\u5230\u6240\u6709\u8fb9\u90fd\u88ab\u8bbf\u95ee\u3002</p> </li> <li> <p>Hamiltonian Path\uff1a\u7ecf\u8fc7\u6240\u6709\u8282\u70b9\u4e00\u6b21\u7684\u901a\u8def\u3002</p> </li> </ul>"},{"location":"cs/fds/chapter6/","title":"Sorting","text":""},{"location":"cs/fds/chapter6/#shell-sort","title":"Shell Sort","text":"<p>Define an increment sequence \\(1 = h_1 &lt; h_2 &lt; \\cdots &lt; h_t\\).</p> <p>Define \\(h\\)-sort: \u7528\u63d2\u5165\u6392\u5e8f\u6392\u5e8f\u539f\u6570\u7ec4\u7684\u5b50\u5e8f\u5217 \\((a_0, a_h, a_{2h}, \\cdots), (a_1, a_{1+h}, a_{1+2h}, \\cdots), \\cdots\\)</p> <p>Shell sort: \u6309\u7167 \\(k = t, t-1, \\cdots, 1\\) \u7684\u987a\u5e8f\uff0c\u5bf9\u6bcf\u4e2a \\(k\\) \u8fdb\u884c \\(h_k\\)-sort\u3002</p>"},{"location":"cs/fds/chapter6/#time-complexity","title":"Time Complexity","text":"<p>\u4e0e\u589e\u91cf\u5e8f\u5217\u6709\u5173\u3002</p>"},{"location":"cs/fds/chapter6/#shells-increment-sequence","title":"Shell's increment sequence","text":"<p>\\(h_t = \\lfloor \\frac{n}{2} \\rfloor, h_{k+1} = \\lfloor \\frac{h_k}{2} \\rfloor\\)</p> <p>\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709\u6700\u540e\u4e00\u6b21\u6392\u5e8f\u8fdb\u884c\u4e86\u4ea4\u6362\uff0c\u590d\u6742\u5ea6\u4e3a \\(O(n^2)\\)\u3002</p>"},{"location":"cs/fds/chapter6/#hibbards-increment-sequence","title":"Hibbard's increment sequence","text":"<p>\\(h_k = 2^k - 1\\)</p> <p>\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u590d\u6742\u5ea6\u4e3a \\(O(n^{3/2})\\)\u3002</p> <p>\u5e73\u5747\u60c5\u51b5\u4e0b\uff0c\u590d\u6742\u5ea6\u4e3a \\(O(n^{5/4})\\)\u3002</p>"},{"location":"cs/fds/chapter6/#heap-sort","title":"Heap Sort","text":"<p>\u4e24\u79cd\u5b9e\u73b0\uff1a</p> <ul> <li>\u5355\u72ec\u5efa\u5806\uff0c\u7136\u540e\u6bcf\u6b21\u53d6\u51fa\u6700\u5c0f\u503c\u3002</li> <li>\u5728\u539f\u6570\u7ec4\u4e0a\u5efa\u5806\uff0c\u6bcf\u6b21\u53d6\u51fa\u6700\u5c0f\u503c\u3002</li> </ul> <p>\u4e00\u822c\u91c7\u7528\u7b2c\u4e8c\u79cd\u5b9e\u73b0\u3002\u7b2c\u4e00\u79cd\u5b9e\u73b0\u7a7a\u95f4\u7ffb\u500d\u3002</p> <p>\u7b2c\u4e8c\u79cd\u5b9e\u73b0\u7684\u5e73\u5747\u6bd4\u8f83\u6b21\u6570\u4e3a \\(2n \\log n - O(n \\log \\log n)\\)\u3002</p>"},{"location":"cs/fds/chapter6/#merge-sort","title":"Merge Sort","text":"<p>Each merge step takes \\(O(n)\\) time. The number of merge steps is \\(O(\\log n)\\).</p> <p>The total time complexity is \\(O(n \\log n)\\).</p>"},{"location":"cs/fds/chapter6/#quick-sort","title":"Quick Sort","text":"<p>\u6bcf\u6b21\u9009\u53d6\u4e00\u4e2a\u5143\u7d20\u4f5c\u4e3a pivot\uff0c\u7136\u540e\u5c06\u6570\u7ec4\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5de6\u8fb9\u7684\u5143\u7d20\u90fd\u5c0f\u4e8e pivot\uff0c\u53f3\u8fb9\u7684\u5143\u7d20\u90fd\u5927\u4e8e pivot\u3002\u9012\u5f52\u8fdb\u884c\u6392\u5e8f\u3002</p> <p>\u590d\u6742\u5ea6\u53d6\u51b3\u4e8e pivot \u7684\u9009\u62e9\u3002</p> <ul> <li>Wrong choice: <code>pivot = a[0]</code></li> <li>Safe choice: <code>pivot = a[rand() % n]</code> \u4f46\u662f\u751f\u6210\u968f\u673a\u6570\u5b58\u5728\u989d\u5916\u5f00\u9500</li> <li>Better choice: <code>pivot = median(a[0], a[n/2], a[n-1])</code></li> </ul>"},{"location":"cs/fds/chapter6/#partitioning-strategy","title":"Partitioning Strategy","text":"<ol> <li>\u9009\u53d6 pivot\uff0c\u5c06\u5176\u653e\u5230\u6700\u540e\u3002</li> <li>\u4e24\u4e2a\u6307\u9488 <code>i</code> \u521d\u59cb\u6307\u5411\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c<code>j</code> \u521d\u59cb\u6307\u5411\u9664\u4e86 pivot \u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002</li> <li><code>i</code> \u4ece\u5de6\u5411\u53f3\u626b\u63cf\u627e\u5230\u7b2c\u4e00\u4e2a\u5c0f\u4e8e pivot \u7684\u5143\u7d20\uff0c<code>j</code> \u4ece\u53f3\u5411\u5de6\u626b\u63cf\u627e\u5230\u7b2c\u4e00\u4e2a\u5927\u4e8e pivot \u7684\u5143\u7d20\uff0c\u4ea4\u6362\u4e24\u4e2a\u5143\u7d20\u3002</li> <li>\u91cd\u590d 3 \u76f4\u5230 <code>j &lt; i</code>\uff0c\u6b64\u65f6 <code>i</code> \u6307\u5411\u7b2c\u4e00\u4e2a\u5927\u4e8e pivot \u7684\u5143\u7d20\uff0c\u4ea4\u6362 <code>a[i]</code> \u548c <code>a[n-1]</code>\u3002</li> <li>\u9012\u5f52\u6392\u5e8f <code>a[0..i-1]</code> \u548c <code>a[i+1..n-1]</code>\u3002</li> </ol> <p>\u82e5\u9047\u5230\u4e0e pivot \u76f8\u540c\u7684\u6570\uff0c\u5219 <code>i</code> \u548c <code>j</code> \u90fd\u4e0d\u79fb\u52a8\uff0c\u8fdb\u884c\u4ea4\u6362\uff0c\u4f7f\u5f97\u6700\u540e pivot \u5728\u4e2d\u95f4\u3002\u590d\u6742\u5ea6\u4e3a \\(O(n\\log n)\\)\u3002</p> <p>\u5982\u679c\u4e0d\u4ea4\u6362\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u6700\u574f\u60c5\u51b5\uff0c\u590d\u6742\u5ea6\u4e3a \\(O(n^2)\\)\u3002</p>"},{"location":"cs/fds/chapter6/#small-arrays","title":"Small Arrays","text":"<p>Cutoff\uff1a\u5728\u9012\u5f52\u8fc7\u7a0b\u4e2d\uff0c\u5bf9\u4e8e\u5c0f\u6570\u7ec4\uff0c\u4f7f\u7528\u63d2\u5165\u6392\u5e8f\uff0c\u5927\u6570\u7ec4\u4f7f\u7528\u5feb\u901f\u6392\u5e8f\u3002</p>"},{"location":"cs/fds/chapter6/#implementation","title":"Implementation","text":"<ul> <li>Median3: \u5c06\u5de6\u4e2d\u53f3\u4e09\u4e2a\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\uff0c\u53d6\u4e2d\u95f4\u503c\u4f5c\u4e3a pivot\u3002</li> <li>Qsort: \u9012\u5f52\u6392\u5e8f\u3002</li> </ul>"},{"location":"cs/fds/chapter6/#analysis","title":"Analysis","text":"\\[T(n) = T(i) + T(n-i-1) + O(n)\\] <ul> <li>Worsest Case: \\(T(n) = T(n-1) + O(n)\\)\uff0c\u590d\u6742\u5ea6\u4e3a \\(O(n^2)\\)\u3002</li> <li>Best Case: \\(T(n) = 2T(n/2) + O(n)\\)\uff0c\u590d\u6742\u5ea6\u4e3a \\(O(n \\log n)\\)\u3002</li> <li>Average: \\(T(n) = O(n \\log n)\\)\u3002</li> </ul> <p>Find the k-th</p> <p>\u6bcf\u6b21\u6392\u5e8f\u597d\u4e4b\u540e\uff0c\u80fd\u591f\u5f97\u51fa pivot \u662f\u7b2c\u51e0\u5927\u7684\u5143\u7d20\uff0c\u7136\u540e\u53ea\u5bf9\u5de6\u8fb9\u6216\u8005\u53f3\u8fb9\u8fdb\u884c\u6392\u5e8f\u3002</p>"},{"location":"cs/fds/chapter6/#sorting-large-structures","title":"Sorting Large Structures","text":"<p>\u7528\u6307\u9488\u6392\u5e8f\u3002</p> <p>Note</p> <p>\u53ea\u9700\u8981\u4e00\u4e2a\u591a\u4f59\u7684\u7a7a\u95f4\uff0c\u5373\u53ef\u5c06\u6700\u540e\u7684\u7ed3\u679c\u7684\u539f\u59cb\u6570\u636e\u5b58\u50a8\u5728\u6570\u7ec4\u4e2d\u3002</p>"},{"location":"cs/fds/chapter6/#general-lower-bound-for-sorting","title":"General Lower Bound for Sorting","text":"<p>Any algorithm that sorts by comparisons only must have a worst case computing time of \\(\\Omega(n \\log n)\\).</p>"},{"location":"cs/fds/chapter6/#bucket-sort","title":"Bucket Sort","text":"<p>\u6570\u636e\u7684\u8303\u56f4\u6709\u9650\uff0c\u5c06\u76f8\u540c\u6570\u636e\u6839\u636e\u6570\u636e\u5185\u5bb9\u5206\u914d\u5230\u4e0d\u540c\u7684\u6876\u4e2d\uff0c\u7136\u540e\u6309\u987a\u5e8f\u8f93\u51fa\u6876\u4e2d\u7684\u6570\u636e\u3002</p> <p>\u5047\u8bbe\u6570\u636e\u6709 \\(n\\) \u4e2a\uff0c\u8303\u56f4\u5927\u5c0f\u4e3a \\(m\\)\uff0c\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n + m)\\)\u3002</p>"},{"location":"cs/fds/chapter6/#radix-sort","title":"Radix Sort","text":"<p>\u5c06\u6570\u636e\u6309\u7167\u4f4d\u8fdb\u884c\u6392\u5e8f\u3002Sort according to the Least Significant Digit (LSD) first.</p> <p>\u5148\u6309\u7167\u4e2a\u4f4d\u6392\u5e8f\uff0c\u7136\u540e\u6309\u7167\u5341\u4f4d\u6392\u5e8f\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</p> <p>\u82e5\u6bcf\u4e2a\u4f4d\u7684\u8303\u56f4\u4e3a \\(b\\)\uff0c\u6570\u636e\u7684\u4f4d\u6570\u4e3a \\(p\\)\uff0c\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(p(n + b))\\)\u3002</p> <p>\u7b26\u53f7\u8868\u8fbe\uff1a</p> <ul> <li>\\(K_i^j\\): \u7b2c \\(i\\) \u4e2a\u5173\u952e\u5b57\u7684\u7b2c \\(j\\) \u4f4d</li> <li>\\(K_i^0\\): the most significant digit (MSD)</li> <li>\\(K_i^{p-1}\\): the least significant digit (LSD)</li> </ul> <p>\u4e0d\u540c\u6392\u5e8f\u987a\u5e8f\uff1a</p> <ul> <li>MSD (Most Significant Digit) sort: first sort \\(K^0\\)</li> <li>LSD (Least Significant Digit) sort: first sort \\(K^{p-1}\\)</li> </ul>"},{"location":"cs/fds/chapter6/#stablity","title":"Stablity","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u5e8f\u5217\uff0c\u5982\u679c\u5b58\u5728\u4e24\u4e2a\u76f8\u7b49\u7684\u5143\u7d20\uff0c</p> <ul> <li>\u6392\u5e8f\u540e\u5b83\u4eec\u7684\u76f8\u5bf9\u4f4d\u7f6e\u4e0d\u53d8\uff0c\u5219\u79f0\u8fd9\u4e2a\u6392\u5e8f\u7b97\u6cd5\u662f\u7a33\u5b9a\u7684</li> <li>\u6392\u5e8f\u540e\u5b83\u4eec\u7684\u76f8\u5bf9\u4f4d\u7f6e\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u5219\u79f0\u8fd9\u4e2a\u6392\u5e8f\u7b97\u6cd5\u662f\u4e0d\u7a33\u5b9a\u7684</li> </ul> <p>\u7a33\u5b9a\u6392\u5e8f\uff1a\u5192\u6ce1\u3001\u5f52\u5e76\u3001\u63d2\u5165\u3001\u57fa\u6570\u3001\u6876\u6392</p> <p>\u4e0d\u7a33\u5b9a\u6392\u5e8f\uff1a\u5feb\u6392\u3001\u5e0c\u5c14\u3001\u5806\u6392\u3001\u9009\u62e9</p>"},{"location":"cs/fds/chapter7/","title":"Hashing","text":""},{"location":"cs/fds/chapter7/#adt","title":"ADT","text":"<ul> <li>Objects: name-attribute pairs</li> <li>Operations: Insert, Delete, Find, ...</li> </ul>"},{"location":"cs/fds/chapter7/#hash-table","title":"Hash Table","text":"<ul> <li>Hash function: \\(f(x) = \\text{position of} \\; x \\; \\text{in ht[]}\\)</li> <li>\\(T\\): \\(x\\) \u6240\u6709\u53ef\u80fd\u53d6\u503c\u7684\u60c5\u51b5\u6570\u3002</li> <li>\\(n\\): total number of identifiers \u54c8\u5e0c\u8868\u4e2d\u6807\u8bc6\u7b26\u7684\u4e2a\u6570\u3002</li> <li>identifier density: \\(n/T\\)</li> <li>loading density: \\(n/\\text{size of table}\\)</li> <li>number of identifiers: \\(b\\) (TableSize)</li> <li>number slots of each identifiers: \\(s\\)</li> </ul>"},{"location":"cs/fds/chapter7/#hash-function","title":"Hash Function","text":"<ul> <li>\u5bb9\u6613\u8ba1\u7b97\uff0c\u5c3d\u91cf\u51cf\u5c11\u78b0\u649e\u3002</li> <li>\u5747\u5300\u5206\u5e03\uff0cuniform hash function\u3002</li> </ul> <p>\u82e5 \\(f(x) = x \\mod \\text{TableSize}\\)\uff0c\u5219 TableSize \u5e94\u8be5\u4e3a\u7d20\u6570\u3002</p>"},{"location":"cs/fds/chapter7/#saparate-chain","title":"Saparate Chain","text":"<p>\u6bcf\u4e2a identifier \u5bf9\u5e94\u4e00\u4e2a\u94fe\u8868\u3002</p> <p>\u6b64\u65f6\u5b9a\u4e49 loading density \u4e3a \\(n/b\\)\u3002</p>"},{"location":"cs/fds/chapter7/#open-addressing","title":"Open Addressing","text":"<p>\u5982\u679c\u53d1\u751f\u78b0\u649e\uff0c\u5219\u5bfb\u627e\u4e0b\u4e00\u4e2a\u7a7a\u7684\u4f4d\u7f6e\u3002\u4e0d\u65ad\u63a2\u6d4b\u5176\u540e\u7b2c \\(f(0), f(1), f(2), \\dots\\) \u4e2a\u4f4d\u7f6e\u662f\u5426\u4e3a\u6709\u4f4d\u7f6e\u3002</p> <p>\u8981\u6c42 loading density &lt; 0.5</p>"},{"location":"cs/fds/chapter7/#linear-probing","title":"Linear Probing","text":"<p>\\(f(i) = i\\)\uff0c\\(i = 0, 1, 2, \\dots\\)\u3002</p> <p>\u4f1a\u5bfc\u81f4 clustering\uff0c\u5373\u4e00\u65e6\u53d1\u751f\u78b0\u649e\uff0c\u540e\u9762\u7684\u78b0\u649e\u6982\u7387\u4f1a\u589e\u5927\u3002</p>"},{"location":"cs/fds/chapter7/#quadratic-probing","title":"Quadratic Probing","text":"<p>\\(f(i) = i^2\\)\uff0c\\(i = 0, 1, 2, \\dots\\)\u3002</p> <p>\u5f53 TableSize \u4e3a\u7d20\u6570\uff0c\u4e14 loading density &lt; 0.5 \u65f6\uff0c\u603b\u80fd\u627e\u5230\u7a7a\u4f4d\u7f6e\u3002</p>"},{"location":"cs/fds/chapter7/#double-hashing","title":"Double Hashing","text":"<p>\\(f(i) = i \\times hash_2(x)\\)\uff0c\\(i = 0, 1, 2, \\dots\\)\u3002</p> <p>\u4e00\u822c\u9009\u62e9 \\(hash_2(x) = R - (x \\% R)\\)\uff0c\u5176\u4e2d \\(R\\) \u4e3a\u7d20\u6570\uff0c\u4e14 \\(R &lt; \\text{TableSize}\\)\u3002</p>"},{"location":"cs/fds/chapter7/#rehashing","title":"Rehashing","text":"<p>\u65b0\u5efa\u4e00\u4e2a\u7ea6\u4e24\u500d\u5927\u5c0f\uff08\u4e00\u822c\u9009\u62e9 \\(\\text{next_prime}(2*n)\\)\uff09\u7684\u54c8\u5e0c\u8868\uff0c\u7136\u540e\u5c06\u539f\u6765\u7684\u6570\u636e\u63d2\u5165\u65b0\u7684\u54c8\u5e0c\u8868\u4e2d\u3002</p> <p>Rehashing \u7684\u65f6\u673a\uff1a</p> <ul> <li>\u5f53 loading density &gt; 0.5 \u65f6</li> <li>\u5f53 loading density \u8d85\u8fc7\u4e00\u5b9a\u503c\u65f6</li> <li>\u5f53\u63d2\u5165\u5931\u8d25\u65f6</li> </ul> <p>\u8bbe \\(n\\) \u4e3a\u5f53\u524d\u54c8\u5e0c\u8868\u4e2d\u7684\u6807\u8bc6\u7b26\u4e2a\u6570\uff0c\u5219 rehashing \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n)\\)\u3002</p>"},{"location":"cs/fds/chapter7/#_1","title":"\u9519\u9898\u6574\u7406","text":"<p>Question 1</p> <p>The average search time of searching a hash table with N elements is Can not be determined.</p> <p>Question 2</p> <p>Suppose that the numbers <code>{4371, 1323, 6173, 4199, 4344, 9679, 1989}</code> are hashed into a table of size 10 with the hash function \\(h(X)=X\\%10\\), and hence have indices <code>{1, 3, 4, 9, 5, 0, 2}</code>. What are their indices after rehashing using \\(h(X)=X\\%\\text{TableSize}\\) with linear probing?</p> <p>rehashing \u65b0\u5efa\u54c8\u5e0c\u8868\u5927\u5c0f\u4e3a 23.</p>"},{"location":"hpc/","title":"HPC","text":"<p>Abstract</p> <p>\u5f52\u6863 HPC \u7684\u4e00\u4e9b\u5b66\u4e60\u7b14\u8bb0</p>"},{"location":"hpc/cute/layout/","title":"Layout","text":""},{"location":"hpc/cute/layout/#layout_1","title":"Layout \u63cf\u8ff0","text":""},{"location":"hpc/cute/layout/#_1","title":"\u5386\u53f2\u9636\u6bb5","text":"<ul> <li>BLAS: row/column major + leading dimension</li> <li>Tensor: shape + stride</li> <li>Hierarchy Tensor</li> </ul>"},{"location":"hpc/cute/layout/#_2","title":"\u4e00\u7ef4\u5411\u91cf","text":"<p>shape(8), stride(1) \u8868\u793a\u5305\u62ec 8 \u4e2a\u903b\u8f91\u4f4d\u7f6e\uff0c\u903b\u8f91\u4f4d\u7f6e\u548c\u7269\u7406\u4f4d\u7f6e\u6620\u5c04\u65f6\u6bcf\u4e2a\u5143\u7d20\u4e4b\u95f4\u7684\u5dee\u4e3a 1</p> <p>\u5176\u8ba1\u7b97\u903b\u8f91\u4e3a \\(index_{physical} = index_{logical} * stride\\)</p> <pre><code>shape(8), stride(1)\nlogical:   0 1 2 3 4 5 6 7\nphysical:  0 1 2 3 4 5 6 7\n</code></pre> <pre><code>shape(8), stride(2)\nlogical:   0   1   2   3   4   5     6     7\nphysical:  0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\n</code></pre> <pre><code>shape(8), stride(0)\nlogical:   0 1 2 3 4 5 6 7\nphysical:  0\n</code></pre> <pre><code>shape(8), stride(-1)\nlogical:                        0 1 2 3 4 5 6 7\nphysical:  -7 -6 -5 -4 -3 -2 -1 0\n</code></pre>"},{"location":"hpc/cute/layout/#_3","title":"\u4e8c\u7ef4\u77e9\u9635","text":"<p>shape(2, 3), stride(3, 1) \u8868\u793a 2 \u884c 3 \u5217\u7684\u77e9\u9635\u3002\u5bf9\u4e8e\u6bcf\u884c\u4e4b\u95f4\uff0c\u903b\u8f91\u4f4d\u7f6e\u548c\u7269\u7406\u4f4d\u7f6e\u6620\u5c04\u65f6\u6bcf\u4e2a\u5143\u7d20\u4e4b\u95f4\u7684\u5dee\u4e3a 3\uff1b\u5bf9\u4e8e\u6bcf\u5217\u4e4b\u95f4\uff0c\u903b\u8f91\u4f4d\u7f6e\u548c\u7269\u7406\u4f4d\u7f6e\u6620\u5c04\u65f6\u6bcf\u4e2a\u5143\u7d20\u4e4b\u95f4\u7684\u5dee\u4e3a 1</p> <p>\u4e8c\u7ef4\u7a7a\u95f4\u7684\u5217\u4f18\u5148\u63cf\u8ff0\uff1ashape(3, 4), stride(1, 3) \uff1b\u884c\u4f18\u5148\u63cf\u8ff0\uff1ashape(3, 4), stride(4, 1)</p> <pre><code>shape(2, 3), stride(3, 1)\n\nlogical:   (0,0) (0,1) (0,2)\n           (1,0) (1,1) (1,2)\n\noffset:    0 1 2\n           3 4 5\n\npyhsical:  0 1 2 3 4 5\n</code></pre> <p>\u5176\u6620\u5c04\u5173\u7cfb\u4e3a \\(index_{physical} = \\sum_{i:dim} index_{logical,i} * stride_i\\)</p>"},{"location":"hpc/cute/layout/#layout_2","title":"\u6709\u5c42\u6b21\u7684 Layout","text":"<p>\u5176\u4e2d</p> <pre><code>A:\n(4, 8) &lt;- shape\n(1, 4) &lt;- stride\n</code></pre> <p>\u8868\u793a 4 \u884c 8 \u5217\uff0c\u6bcf\u884c\u7269\u7406\u4f4d\u7f6e\u4e4b\u5dee\u4e3a 1\uff0c\u6bcf\u5217\u7269\u7406\u4f4d\u7f6e\u4e4b\u5dee\u4e3a 4</p> <pre><code>C:\n[4, (2, 4)] &lt;- shape\n[2, (1, 8)] &lt;- stride\n</code></pre> <p>\u8868\u793a 4 \u884c 8 \u5217\u7684\u77e9\u9635\uff0c\u4e14\u5bf9\u5217\u8fdb\u884c\u5206\u5757\u5927\u5c0f\u4e3a 2 \u7684\u5206\u5757\uff0c\u6bcf\u884c\u7269\u7406\u4f4d\u7f6e\u4e4b\u5dee\u4e3a 1\uff0c\u6bcf\u5217\u4e2d\u5206\u5757\u5185\u76f8\u90bb\u5143\u7d20\u7269\u7406\u4f4d\u7f6e\u4e4b\u5dee\u4e3a 1\uff0c\u76f8\u90bb\u5206\u5757\u4e4b\u95f4\u7269\u7406\u4f4d\u7f6e\u4e4b\u5dee\u4e3a 8\u3002</p> <p>cute \u63d0\u4f9b\u4e86 <code>make_shape</code> \u548c <code>make_stride</code> \u4e24\u4e2a\u51fd\u6570\u6765\u6784\u9020\u5c42\u6b21\u7684 shape \u548c stride.</p> <p>\u5e38\u91cf shape\uff1a</p> <pre><code>auto shape = make_shape(Int&lt;2&gt;{}, Int&lt;3&gt;{});\nauto shape1 = make_shape(shape, Int&lt;3&gt;{});\n</code></pre> <p>\u53d8\u91cf shape\uff1a</p> <pre><code>auto shape = make_shape(m, n);\n</code></pre>"},{"location":"hpc/cute/layout/#layout_3","title":"Layout \u7684\u4ee3\u6570\u548c\u51e0\u4f55\u89e3\u91ca","text":""},{"location":"hpc/cute/layout/#_4","title":"\u57fa\u672c\u5c5e\u6027","text":"<p>\u5982\u4e0a Layout \uff0c\u57fa\u672c\u5c5e\u6027\u5982\u4e0b\u8868\uff1a</p> shape stride size rank depth coshape cosize ((2, 4), (3, 5)) ((3, 6), (1, 24)) 120 2 2 120 120 <ul> <li>shape \u548c stride \u8868\u793a layout \u7684\u903b\u8f91\u5f62\u72b6\u548c\u6bcf\u4e2a\u7ef4\u5ea6\u5728\u5730\u5740\u4e2d\u7684\u6b65\u957f</li> <li>size \u8868\u793a\u903b\u8f91\u7a7a\u95f4\u7684\u5927\u5c0f</li> <li>rank \u8868\u793a layout \u7684\u79e9\uff0c\u7b49\u4e8e shape \u7b2c\u4e00\u5c42\u7684\u5143\u7d20\u4e2a\u6570</li> <li>depth \u8868\u793a layout \u7684\u5d4c\u5957\u6df1\u5ea6\uff0c\u5b9a\u4e49\u975e\u5d4c\u5957 layout \u7684 depth \u4e3a 1</li> <li>coshape \u8868\u793a codomain \u7684\u7a7a\u95f4\u5927\u5c0f</li> <li>cosize \u8868\u793a\u5360\u7528\u7a7a\u95f4\u5927\u5c0f\uff0c\u5982\u679c stride \u4e0d\u7d27\u51d1\uff0c\u5219 cosize \u53ef\u80fd\u5927\u4e8e size</li> </ul>"},{"location":"hpc/cute/layout/#coordinate","title":"Coordinate \u5750\u6807","text":"<ul> <li>\u4e00\u5c42 layout\uff1a\u6307\u5b9a\u884c\u5217\u5750\u6807<code>auto coord = make_coord(1, 2);</code> </li> <li> <p>\u591a\u5c42\uff1a\u5c06 make_coord \u8fdb\u884c\u5d4c\u5957\uff1a</p> <pre><code>auto coord = make_coord(make_coord(1, 3), make_coord(2, 4));\n</code></pre> <p>\u6ce8\u610f make_coord \u53c2\u6570\u4ece\u5185\u5230\u5916\u3002\u4e0a\u8ff0\u6307\u5b9a\u7684\u5750\u6807\u5982\u4e0b\uff1a</p> <p></p> </li> </ul>"},{"location":"hpc/cute/layout/#slice","title":"Slice \u5207\u7247","text":"<p>cute \u63d0\u4f9b\u4e86 Underscore \u7c7b\u578b\u5bf9\u67d0\u4e2a\u7ef4\u5ea6\u8fdb\u884c\u5168\u9009\uff0c\u5bf9\u5e94\u53d8\u91cf\u4e3a <code>_</code>\uff0c\u7c7b\u4f3c python \u4e2d <code>:</code> \u3002</p>"},{"location":"hpc/cute/layout/#complement","title":"Complement \u8865\u96c6","text":"<p>\u5f53 codomain \u4e0d\u8fde\u7eed\u65f6\uff0c\u53ef\u4ee5\u6784\u9020\u539f layout \u7684\u8865\u96c6 layout2 \u8865\u4e0a codomain \u7a7a\u7f3a\u7684\u7a7a\u95f4\uff08\u6ce8\u610f\uff1alayout \u7684 codomain \u548c layout2 \u7684 codomain \u53ef\u80fd\u6709\u91cd\u5408\u90e8\u5206\uff09\uff0c\u4e3a\u4e86\u8868\u793a\u7684\u7b80\u6d01\u6027\uff0c\u8865\u96c6\u4f1a\u88ab\u538b\u7f29\u4e3a\u6700\u5c0f\u8868\u793a\uff0c\u5468\u671f\u6027\u91cd\u590d\u7684\u90e8\u5206\u4f1a\u88ab\u7ea6\u6389\u3002</p> <p></p>"},{"location":"hpc/cute/layout/#product","title":"Product \u4e58\u6cd5","text":""},{"location":"hpc/cute/tensor/","title":"Tensor","text":""},{"location":"hpc/cute/tensor/#tensor_1","title":"Tensor \u751f\u6210","text":"<pre><code>// \u6808\u4e0a\u5bf9\u8c61\uff1a\u9700\u540c\u65f6\u6307\u5b9a\u7c7b\u578b\u548cLayout\uff0clayout\u5fc5\u987b\u662f\u9759\u6001shape\nTensor make_tensor&lt;T&gt;(Layout layout);\n\n// \u5806\u4e0a\u5bf9\u8c61\uff1a\u9700\u6307\u5b9apointer\u548cLayout\uff0clayout\u53ef\u52a8\u53ef\u9759\nTensor make_tensor(Pointer pointer, Layout layout);\n\n// \u6808\u4e0a\u5bf9\u8c61\uff0ctensor\u7684layout\u5fc5\u987b\u662f\u9759\u6001\u7684\nTensor make_tensor_like(Tensor tensor); \n\n// \u6808\u4e0a\u5bf9\u8c61\uff0ctensor\u7684layout\u5fc5\u987b\u662f\u9759\u6001\u7684\nTensor make_fragment_like(Tensor tensor);\n</code></pre>"},{"location":"hpc/hpc101/","title":"HPC 101","text":"<p>Abstract</p> <p>\u5927\u4e00\u6691\u5047\u8d85\u7b97\u77ed\u5b66\u671f labs</p> <p>\u5b9e\u9a8c\u624b\u518c</p>"},{"location":"hpc/hpc101/cuda/","title":"NVIDIA CUDA C","text":"<p>Abstract</p> <p>GPU \u7f16\u7a0b\u539f\u7406\u4e0e NVIDIA CUDA C \u7f16\u7a0b\u5b9e\u9a8c</p>"},{"location":"hpc/hpc101/cuda/#gpu","title":"GPU \u7f16\u7a0b\u539f\u7406","text":""},{"location":"hpc/hpc101/cuda/#cpu-vs-gpu","title":"CPU vs. GPU","text":"CPU \uff1a <ul> <li>\u5c11\u91cf\u4e14\u590d\u6742\u7684\u6838\u5fc3</li> <li>\u4f4e\u5185\u5b58\u5ef6\u8fdf\u7684\u7f13\u5b58\uff08cache\uff09\u8f83\u5927</li> <li>\u5185\u5b58\u5927\u4f46\u6162</li> </ul> GPU \uff1a <ul> <li>\u5927\u91cf\u7b80\u5355\u6838\u5fc3</li> <li>\u4f4e\u5185\u5b58\u5ef6\u8fdf\u7684\u7f13\u5b58\uff08cache\uff09\u8f83\u5c0f</li> <li>\u5185\u5b58\u5c0f\u4f46\u5feb</li> </ul>"},{"location":"hpc/hpc101/cuda/#cuda-vs","title":"CUDA \u7f16\u7a0b\u6a21\u578b vs. \u786c\u4ef6\u6267\u884c\u6a21\u578b","text":""},{"location":"hpc/hpc101/cuda/#_1","title":"\u4f53\u7cfb\u7ed3\u6784\u7c7b\u522b\u548c\u7f16\u7a0b\u6a21\u578b","text":"<ul> <li>SISD\uff08Single instruction, single data\uff09\u5355\u6307\u4ee4\u6d41\u5355\u6570\u636e\u6d41\uff1a\u4f20\u7edf\u7684\u4e32\u884c\u8ba1\u7b97\u673a\u3002</li> <li>SIMD\uff08Single instruction, multiple data\uff09\u5355\u6307\u4ee4\u591a\u6570\u636e\u6d41\uff1aAVX\u3001SSE \u7b49\u6307\u4ee4\u96c6\u3002</li> <li>SPMD\uff08Single program, multiple data\uff09\u5355\u7a0b\u5e8f\u591a\u6570\u636e\u6d41\uff1a\u5bf9\u95ee\u9898\u8fdb\u884c\u5206\u89e3\uff0c\u518d\u8fdb\u884c\u5e76\u884c\u6c42\u89e3\u3002</li> </ul> <p>\u524d\u4e24\u4e2a\u662f\u4f53\u7cfb\u7ed3\u6784\u7c7b\u522b\uff0c\u6700\u540e\u4e00\u4e2a\u662f\u7f16\u7a0b\u6a21\u578b\u3002</p>"},{"location":"hpc/hpc101/cuda/#cuda-cc","title":"CUDA C/C++ \u7f16\u7a0b","text":"<p>\u7531 NVIDIA \u6df1\u5ea6\u5b66\u4e60\u57f9\u8bad\u4e2d\u5fc3 (DLI) \u63d0\u4f9b\u7684\u8bfe\u7a0b\uff0c\u5728\u7531 NVIDIA \u63d0\u4f9b\u7684\u4e91\u73af\u5883\u4e0a\u8fdb\u884c\u5b9e\u9a8c\u3002</p>"},{"location":"hpc/hpc101/cuda/#cuda-cc_1","title":"\u4f7f\u7528 CUDA C/C++ \u52a0\u901f\u7a0b\u5e8f","text":""},{"location":"hpc/hpc101/cuda/#_2","title":"\u52a0\u901f\u7cfb\u7edf","text":"<p>\u52a0\u901f\u7cfb\u7edf\u53c8\u79f0\u5f02\u6784\u7cfb\u7edf\uff0c\u7531 CPU \u548c GPU \u7ec4\u6210\u3002\u52a0\u901f\u7cfb\u7edf\u8fd0\u884c CPU \u7a0b\u5e8f\uff0c\u7531\u8fd9\u4e9b\u7a0b\u5e8f\u8c03\u5ea6\u8fd0\u884c\u4e8e GPU \u4e0a\u7684\u51fd\u6570\uff0c\u901a\u8fc7 GPU \u5b9e\u73b0\u51fd\u6570\u7684\u5e76\u884c\u8ba1\u7b97\u3002</p> <p>\u67e5\u8be2 GPU \u4fe1\u606f\u547d\u4ee4\uff1a</p> <pre><code>$ nvidia-smi\n</code></pre>"},{"location":"hpc/hpc101/cuda/#gpu_1","title":"GPU \u52a0\u901f\u539f\u7406","text":"<p>\u4e00\u4e2a\u7b80\u5355\u7684 GPU \u52a0\u901f\u5e94\u7528\u7a0b\u5e8f\u6267\u884c\u8fc7\u7a0b\uff1a</p> <p></p> <ul> <li><code>(1)</code> \u6bb5\uff1a\u6570\u636e\u7531 <code>cudaMallocManaged()</code> \u51fd\u6570\u5206\u914d\uff0c\u5e76\u80fd\u7531 CPU \u8bbf\u95ee\u5904\u7406\u3002</li> <li><code>(2)</code> \u6bb5\uff1a\u6570\u636e\u53ef\u88ab\u8fc1\u79fb\u81f3\u53ef\u6267\u884c\u5e76\u884c\u5de5\u4f5c\u7684 GPU \uff0c\u5e76\u7531 GPU \u6838\u51fd\u6570\u8bbf\u95ee\uff0c\u540c\u65f6 CPU \u53ef\u7ee7\u7eed\u6267\u884c\u5de5\u4f5c\uff08\u5f02\u6b65\u6267\u884c\uff09\u3002</li> <li>\u901a\u8fc7 <code>cudaDeviceSynchronize()</code> \uff0c\u5c06 CPU \u4e0e GPU \u7684\u5de5\u4f5c\u540c\u6b65\u3002</li> <li><code>(3)</code> \u6bb5\uff1a\u7ecf CPU \u8bbf\u95ee\u7684\u6570\u636e\u8fc1\u79fb\u56de CPU\u3002</li> </ul>"},{"location":"hpc/hpc101/cuda/#gpu_2","title":"GPU \u52a0\u901f\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199","text":"<p>CUDA \u52a0\u901f\u7a0b\u5e8f\u6587\u4ef6\u6269\u5c55\u540d\u4e3a <code>.cu</code> \uff0c\u4e00\u4e2a\u7b80\u5355\u4f8b\u5b50\uff1a</p> <pre><code>void CPUFunction()\n{\n  printf(\"This function is defined to run on the CPU.\\n\");\n}\n\n__global__ void GPUFunction()\n{\n  printf(\"This function is defined to run on the GPU.\\n\");\n}\n\nint main()\n{\n  CPUFunction();\n\n  GPUFunction&lt;&lt;&lt;1, 1&gt;&gt;&gt;();\n  cudaDeviceSynchronize();\n}\n</code></pre> <p>\u4e00\u4e9b\u8bed\u6cd5\uff1a</p> <p><code>__global__ void GPUFunction()</code></p> <ul> <li><code>__global__</code> \u5173\u952e\u5b57\u8868\u660e\u4ee5\u4e0b\u51fd\u6570\u5c06\u5728 GPU \u4e0a\u8fd0\u884c\u5e76\u53ef \u5168\u5c40 \u8c03\u7528\u3002</li> <li>\u901a\u5e38\uff0c\u5c06\u5728 CPU \u4e0a\u6267\u884c\u7684\u4ee3\u7801\u79f0\u4e3a \u4e3b\u673a (Host) \u4ee3\u7801\uff0c\u800c\u5c06\u5728 GPU \u4e0a\u8fd0\u884c\u7684\u4ee3\u7801\u79f0\u4e3a \u8bbe\u5907(Device) \u4ee3\u7801\u3002</li> <li>\u4f7f\u7528 <code>__global__</code> \u5173\u952e\u5b57\u5b9a\u4e49\u7684\u51fd\u6570\u9700\u8981\u8fd4\u56de <code>void</code> \u7c7b\u578b\u3002</li> </ul> <p><code>GPUFunction&lt;&lt;&lt;1, 1&gt;&gt;&gt;();</code></p> <ul> <li>\u901a\u5e38\uff0c\u5f53\u8c03\u7528\u8981\u5728 GPU \u4e0a\u8fd0\u884c\u7684\u51fd\u6570\u65f6\uff0c\u5c06\u6b64\u79cd\u51fd\u6570\u79f0\u4e3a \u5df2\u542f\u52a8 \u7684 \u6838\u51fd\u6570 \u3002</li> <li>\u542f\u52a8\u6838\u51fd\u6570\u65f6\uff0c\u5fc5\u987b\u63d0\u4f9b \u6267\u884c\u914d\u7f6e \uff0c\u5373\u5728\u5411\u6838\u51fd\u6570\u4f20\u9012\u53c2\u6570\u4e4b\u524d\u4f7f\u7528 <code>&lt;&lt;&lt;number_of_blocks, threads_per_block&gt;&gt;&gt;</code> \u8bed\u6cd5\u5b8c\u6210\u914d\u7f6e\u3002</li> <li>\u5728\u5b8f\u89c2\u5c42\u9762\uff0c\u53ef\u901a\u8fc7\u6267\u884c\u914d\u7f6e\u4e3a\u6838\u51fd\u6570\u542f\u52a8\u6307\u5b9a \u7ebf\u7a0b\u5c42\u6b21\u7ed3\u6784 \uff0c\u4ece\u800c\u5b9a\u4e49\u7ebf\u7a0b\u7ec4\uff08\u79f0\u4e3a \u7ebf\u7a0b\u5757 \uff09\u7684\u6570\u91cf <code>number_of_blocks</code> \uff0c\u4ee5\u53ca\u8981\u5728\u6bcf\u4e2a\u7ebf\u7a0b\u5757\u4e2d\u6267\u884c\u7684 \u7ebf\u7a0b \u6570\u91cf <code>threads_per_block</code> \u3002\u5982\u6837\u4f8b\u4ee3\u7801\u4e2d\uff0c\u4f7f\u7528\u4e86\u5305\u542b <code>1</code> \u7ebf\u7a0b\u7684 <code>1</code> \u7ebf\u7a0b\u5757\u542f\u52a8\u6838\u51fd\u6570\u3002</li> </ul> <p><code>cudaDeviceSynchronize();</code></p> <ul> <li>\u6838\u51fd\u6570\u542f\u52a8\u65b9\u5f0f\u4e3a \u5f02\u6b65 \uff1aCPU \u4ee3\u7801\u5c06\u7ee7\u7eed\u6267\u884c\uff0c\u65e0\u9700\u7b49\u5f85\u6838\u51fd\u6570\u5b8c\u6210\u542f\u52a8\u3002</li> <li>\u8c03\u7528 CUDA \u8fd0\u884c\u65f6\u63d0\u4f9b\u7684\u51fd\u6570 <code>cudaDeviceSynchronize</code> \u4f7f\u5f97\u4e3b\u673a (CPU) \u4ee3\u7801\u6682\u4f5c\u7b49\u5f85\uff0c\u76f4\u81f3\u8bbe\u5907 (GPU) \u4ee3\u7801\u6267\u884c\u5b8c\u6210\uff0c\u624d\u80fd\u5728 CPU \u4e0a\u6062\u590d\u6267\u884c\u3002</li> </ul> <p>\u7f16\u8bd1\u8fd0\u884c CUDA \u52a0\u901f\u7a0b\u5e8f</p> <p>\u4f7f\u7528 <code>nvcc</code> \u547d\u4ee4\u7f16\u8bd1\u548c\u8fd0\u884c\u7a0b\u5e8f\uff1a</p> <pre><code>$ nvcc -arch=sm_70 -o hello-gpu hello-gpu.cu -run\n</code></pre> <ul> <li><code>nvcc</code> \u4e3a\u7f16\u8bd1\u5668\u547d\u4ee4\u3002</li> <li><code>-arch</code> \u9009\u9879\u6307\u5b9a\u67b6\u6784\u7c7b\u578b\u3002</li> <li><code>-o</code> \u6307\u5b9a\u7f16\u8bd1\u7a0b\u5e8f\u7684\u8f93\u51fa\u6587\u4ef6\u3002</li> <li><code>-run</code> \u6807\u5fd7\u6267\u884c\u6210\u529f\u7f16\u8bd1\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002</li> </ul>"},{"location":"hpc/hpc101/cuda/#cuda","title":"CUDA \u7ebf\u6027\u5c42\u6b21\u7ed3\u6784","text":"<p>\u542f\u52a8\u6838\u51fd\u6570\u65f6\uff0c\u6838\u51fd\u6570\u4ee3\u7801\u7531\u6bcf\u4e2a\u5df2\u914d\u7f6e\u7684\u7ebf\u7a0b\u5757\u4e2d\u7684\u6bcf\u4e2a\u7ebf\u7a0b\u6267\u884c\u3002</p> <p>CUDA \u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u7ebf\u7a0b\u5c42\u6b21\u7ed3\u6784\u53d8\u91cf\uff1a</p> <ul> <li><code>gridDim.x</code> \u7f51\u683c\u4e2d\u5757\u6570\uff1b<code>blockDim.x</code> \u6bcf\u5757\u4e2d\u7ebf\u7a0b\u6570\u3002</li> <li><code>blockIdx.x</code> \u5f53\u524d\u7ebf\u7a0b\u6240\u5728\u7ebf\u7a0b\u5757\u7d22\u5f15\uff1b<code>threadIdx.x</code> \u5f53\u524d\u7ebf\u7a0b\u5728\u7ebf\u7a0b\u5757\u4e2d\u7684\u7d22\u5f15\u3002</li> </ul>"},{"location":"hpc/hpc101/cuda/#_3","title":"\u52a0\u901f\u5faa\u73af","text":"<p>\u6b65\u9aa4\uff1a</p> <ul> <li>\u5fc5\u987b\u7f16\u5199\u5b8c\u6210 \u5faa\u73af\u7684\u5355\u6b21\u8fed\u4ee3 \u5de5\u4f5c\u7684\u6838\u51fd\u6570\u3002</li> <li>\u7531\u4e8e\u6838\u51fd\u6570\u4e0e\u5176\u4ed6\u6b63\u5728\u8fd0\u884c\u7684\u6838\u51fd\u6570\u65e0\u5173\uff0c\u56e0\u6b64\u6267\u884c\u914d\u7f6e\u5fc5\u987b\u4f7f\u6838\u51fd\u6570\u6267\u884c\u6b63\u786e\u7684\u6b21\u6570\uff0c\u4f8b\u5982\u5faa\u73af\u8fed\u4ee3\u7684\u6b21\u6570\u3002\uff08\u6ce8\u610f\uff1a\u5404\u4e2a\u7ebf\u7a0b\u6267\u884c\u987a\u5e8f\u4e0d\u5b9a\uff0c\u6545\u53ef\u52a0\u901f\u7684\u5faa\u73af\u9700\u8981\u5404\u6b21\u8fed\u4ee3\u65e0\u5173\u8054\u4e14\u987a\u5e8f\u65e0\u5f71\u54cd\uff09</li> </ul> <p>\u4f8b\u5b50\uff1a</p> <p>\u52a0\u901f\u524d\uff1a</p> <pre><code>for (int i = 0; i &lt; N; ++i)\n{\n  printf(\"%d\\n\", i);\n}\n</code></pre> <p>\u52a0\u901f\u540e\uff1a\u4f7f\u7528\u6838\u51fd\u6570\u5b9e\u73b0\u5355\u8bcd\u8fed\u4ee3</p> <pre><code>__global__ void loop() {\n    int idx = threadIdx.x + blockIdx.x * blockDim.x;\n    if (idx &lt; N)\n        printf(\"%d\\n\", idx);\n}\n</code></pre> <p>\u5e76\u8c03\u7528</p> <pre><code>loop&lt;&lt;&lt;number_of_blocks, threads_per_block&gt;&gt;&gt;();\n</code></pre> <p>\u6b64\u5904\u5fc5\u987b\u6709 <code>number_of_blocks * threads_per_block &gt;= N</code> \u3002</p>"},{"location":"hpc/hpc101/cuda/#_4","title":"\u5206\u914d\u5185\u5b58","text":"<p>\u56de\u5fc6\u4e00\u822c\u7684 CPU \u7a0b\u5e8f\u5206\u914d\u5e76\u91ca\u653e\u5185\u5b58\u7684\u65b9\u5f0f\uff1a</p> <pre><code>int *a;\na = (int *)malloc(size);\n...\nfree(a);\n</code></pre> <p>\u8981\u5206\u914d\u548c\u91ca\u653e\u5185\u5b58\uff0c\u5e76\u83b7\u53d6\u53ef\u5728\u4e3b\u673a\u548c\u8bbe\u5907\u4ee3\u7801\u4e2d\u5f15\u7528\u7684\u6307\u9488\uff0c\u5219\u9700\u8981\u4f7f\u7528 CUDA \u63d0\u4f9b\u7684\u51fd\u6570 <code>cudaMallocManaged()</code> \u548c <code>cudaFree()</code> \uff1a</p> <pre><code>int *a;\ncudaMallocManaged(&amp;a, size);\n...\ncudaFree(a);\n</code></pre> <p>\u5176\u4ed6\u4e00\u4e9b\u7528\u4e8e\u624b\u52a8\u5185\u5b58\u7ba1\u7406\u7684 CUDA \u547d\u4ee4\uff1a</p> <ul> <li><code>cudaMalloc</code> \u547d\u4ee4\u5c06\u76f4\u63a5\u4e3a\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u7684 GPU \u5206\u914d\u5185\u5b58\u3002\u8fd9\u53ef\u9632\u6b62\u51fa\u73b0\u6240\u6709 GPU \u5206\u9875\u9519\u8bef\uff0c\u800c\u4ee3\u4ef7\u662f\u4e3b\u673a\u4ee3\u7801\u5c06\u65e0\u6cd5\u8bbf\u95ee\u8be5\u547d\u4ee4\u8fd4\u56de\u7684\u6307\u9488\u3002</li> <li><code>cudaMallocHost</code> \u547d\u4ee4\u5c06\u76f4\u63a5\u4e3a CPU \u5206\u914d\u5185\u5b58\u3002\u8be5\u547d\u4ee4\u53ef\u56fa\u5b9a\u5185\u5b58\uff08pinned memory\uff09\u6216\u9875\u9501\u5b9a\u5185\u5b58\uff08page-locked memory\uff09\u3002\u5141\u8bb8\u5c06\u5185\u5b58\u5f02\u6b65\u62f7\u8d1d\u81f3 GPU \u6216\u4ece GPU \u5f02\u6b65\u62f7\u8d1d\u81f3\u5185\u5b58\u3002\u4f46\u56fa\u5b9a\u5185\u5b58\u8fc7\u591a\u4f1a\u5e72\u6270 CPU \u6027\u80fd\uff0c\u56e0\u6b64\u9700\u907f\u514d\u65e0\u7aef\u4f7f\u7528\u8be5\u547d\u4ee4\u3002\u91ca\u653e\u56fa\u5b9a\u5185\u5b58\u65f6\u5e94\u4f7f\u7528 <code>cudaFreeHost</code> \u547d\u4ee4\u3002</li> <li><code>cudaMemcpy</code> \u547d\u4ee4\u53ef\u62f7\u8d1d\u5185\u5b58\u3002\u793a\u4f8b   <pre><code>// \u4ece host \u5411 device \u62f7\u8d1d\u5185\u5b58\ncudaMemcpy(device_a, host_a, size, cudaMemcpyHostToDevice);\n// \u4ece device \u5411 host \u62f7\u8d1d\u5185\u5b58\ncudaMemcpy(host_a, device_a, size, cudaMemcpyDeviceToHost);\n</code></pre></li> </ul>"},{"location":"hpc/hpc101/cuda/#_5","title":"\u8de8\u7f51\u683c\u5faa\u73af","text":"<p>\u5f53\u6570\u636e\u96c6\u6bd4\u7f51\u683c\u5927\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4f7f\u6bcf\u4e2a\u7ebf\u7a0b\u5904\u7406\u591a\u4e2a\u6570\u636e\uff1a</p> <pre><code>__global__ void kernel(int *a, int N)\n{\n  int idx = threadIdx.x + blockIdx.x * blockDim.x;\n  int stride = gridDim.x * blockDim.x;\n\n  for (int i = idx; i &lt; N; i += stride)\n  {\n    // do work on a[i];\n  }\n}\n</code></pre>"},{"location":"hpc/hpc101/cuda/#_6","title":"\u9519\u8bef\u5904\u7406","text":"<ul> <li>\u8bb8\u591a CUDA \u51fd\u6570\u4f1a\u8fd4\u56de\u7c7b\u578b\u4e3a <code>cudaError_t</code> \u7684\u503c\uff0c\u53ef\u7528\u4e8e\u68c0\u67e5\u8c03\u7528\u662f\u5426\u51fa\u9519\u3002</li> <li>\u4e3a\u68c0\u67e5\u542f\u52a8\u6838\u51fd\u6570\u65f6\u662f\u5426\u53d1\u751f\u9519\u8bef\uff0cCUDA \u63d0\u4f9b\u4e86 <code>cudaGetLastError</code> \u51fd\u6570\uff0c\u8fd4\u56de\u7c7b\u578b\u4e3a <code>cudaError_t</code> \u7684\u503c\u3002</li> <li>\u4e3a\u6355\u6349\u5f02\u6b65\u9519\u8bef\uff08\u4f8b\u5982\uff0c\u5728\u5f02\u6b65\u6838\u51fd\u6570\u6267\u884c\u671f\u95f4\uff09\uff0c\u9700\u8981\u68c0\u67e5\u540e\u7eed\u540c\u6b65 CUDA \u8fd0\u884c\u65f6 API \u8c03\u7528\u6240\u8fd4\u56de\u7684\u72b6\u6001\uff08\u4f8b\u5982 <code>cudaDeviceSynchronize</code> \uff09\uff0c\u5982\u679c\u4e4b\u524d\u542f\u52a8\u7684\u5176\u4e2d\u4e00\u4e2a\u6838\u51fd\u6570\u5931\u8d25\uff0c\u5219\u5c06\u8fd4\u56de\u9519\u8bef\u3002</li> </ul> <p>\u9519\u8bef\u5927\u81f4\u53ef\u5206\u4e3a\u540c\u6b65\u9519\u8bef <code>synError</code> \u548c\u5f02\u6b65\u9519\u8bef <code>asynError</code> \u3002</p> <p>\u5bf9\u4e8e <code>cudaError_t</code> \u503c\uff0c\u5c06\u5176\u4e0e CUDA \u63d0\u4f9b\u7684 <code>cudaSuccess</code> \u8fdb\u884c\u6bd4\u8f83\uff0c\u5373\u53ef\u5224\u65ad\u662f\u5426\u51fa\u9519\uff0c\u540c\u65f6\u53ef\u4ee5\u4f7f\u7528\u51fd\u6570 <code>cudaGetErrorString()</code> \u83b7\u5f97\u9519\u8bef\u4fe1\u606f\u3002</p> <p>\u4e00\u4e2a\u5305\u88c5 CUDA \u51fd\u6570\u8c03\u7528\u7684\u5b8f\uff1a</p> <pre><code>inline cudaError_t checkCuda(cudaError_t result)\n{\n  if (result != cudaSuccess) {\n    fprintf(stderr, \"CUDA Runtime Error: %s\\n\", cudaGetErrorString(result));\n    assets(result == cudaSuccess);\n  }\n  return result;\n}\n\nint main()\n{\n\n/*\n * The macro can be wrapped around any function returning\n * a value of type `cudaError_t`.\n */\n\n  checkCuda( cudaDeviceSynchronize() )\n}\n</code></pre>"},{"location":"hpc/hpc101/cuda/#-","title":"\u8fdb\u9636\u5185\u5bb9 - \u591a\u7ef4\u7f51\u683c\u548c\u5757","text":"<p>\u53ef\u4ee5\u5c06\u7f51\u683c\u548c\u7ebf\u7a0b\u5757\u5b9a\u4e49\u4e3a\u6700\u591a\u5177\u6709 3 \u4e2a\u7ef4\u5ea6\uff0c CUDA \u63d0\u4f9b <code>dim3</code> \u7c7b\u578b\u5b9a\u4e49\u591a\u7ef4\u7f51\u683c\u548c\u5757\uff1a</p> <pre><code>dim3 threads_per_block(block_dim_x, block_dim_y, block_dim_z);\ndim3 number_of_blocks(grid_dim_x, grid_dim_y, grid_dim_z);\nsomeKernel&lt;&lt;&lt;number_of_blocks, threads_per_block&gt;&gt;&gt;();\n</code></pre> <p>\u5728\u6838\u51fd\u6570\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>threadIdx.y</code> \u53ca\u7c7b\u4f3c\u5f62\u5f0f\u83b7\u5f97\u76f8\u5173\u7d22\u5f15\u548c\u7ef4\u5ea6\u3002</p>"},{"location":"hpc/hpc101/cuda/#nsys","title":"\u7edf\u4e00\u5185\u5b58\u4f7f\u7528\u4e0e\u4f7f\u7528 nsys \u7ba1\u7406\u5185\u5b58","text":""},{"location":"hpc/hpc101/cuda/#nsys_1","title":"nsys \u4f7f\u7528","text":"<p>\u4f7f\u7528 <code>nsys profile</code> \u5206\u6790\u7f16\u8bd1\u597d\u7684\u53ef\u6267\u884c\u6587\u4ef6</p> <pre><code>$ nsys profile --stats=true ./test\n</code></pre> <p><code>nsys profile</code> \u5c06\u751f\u6210\u4e00\u4e2a <code>qdrep</code> \u62a5\u544a\u6587\u4ef6\uff0c\u4f7f\u7528 <code>--stats = true</code> \u6807\u5fd7\u8868\u793a\u5e0c\u671b\u6253\u5370\u8f93\u51fa\u6458\u8981\u7edf\u8ba1\u4fe1\u606f\u3002</p>"},{"location":"hpc/hpc101/cuda/#streaming-multiprocessors","title":"\u6d41\u591a\u5904\u7406\u5668\uff08Streaming Multiprocessors\uff09","text":"<p>GPU \u5177\u6709\u79f0\u4e3a\u6d41\u591a\u5904\u7406\u5668\uff08\u6216 SM\uff09\u7684\u5904\u7406\u5355\u5143\u3002\u5728\u6838\u51fd\u6570\u6267\u884c\u671f\u95f4\uff0c\u5c06\u7ebf\u7a0b\u5757\u63d0\u4f9b\u7ed9 SM \u4ee5\u4f9b\u5176\u6267\u884c\u3002SM \u540c\u65f6\u8c03\u5ea6\u6267\u884c\u7684\u7ebf\u7a0b\u5757\u53d6\u51b3\u4e8e warp \u5927\u5c0f\uff08\u4e00\u822c\u4e3a 32\uff09\u3002</p> <p>\u901a\u5e38\u53ef\u4ee5\u9009\u62e9\u7ebf\u7a0b\u6570\u91cf\u6570\u500d\u4e8e 32 \u7684\u7ebf\u7a0b\u5757\u5927\u5c0f\u6765\u63d0\u5347\u6027\u80fd\u3002</p>"},{"location":"hpc/hpc101/cuda/#gpu_3","title":"\u67e5\u8be2 GPU \u5c5e\u6027","text":"<pre><code>int deviceId;\ncudaGetDevice(&amp;deviceId);\n\ncudaDeviceProp props;\ncudaGetDeviceProperties(&amp;props, deviceId);\n</code></pre> <p><code>props</code> \u4e2d\u5305\u542b\u4e86 GPU \u8bbe\u5907\u5c5e\u6027\uff0c\u4e3b\u8981\u7528\u5230 warp \u5927\u5c0f <code>props.warpSize</code> \u3002</p>"},{"location":"hpc/hpc101/cuda/#um","title":"\u7edf\u4e00\u5185\u5b58\uff08UM\uff09\u884c\u4e3a","text":"<p>\u5206\u914d UM \u65f6\uff0c\u5185\u5b58\u5c1a\u672a\u9a7b\u7559\u5728\u4e3b\u673a\u6216\u8bbe\u5907\u4e0a\u3002\u4e3b\u673a\u6216\u8bbe\u5907\u5c1d\u8bd5\u8bbf\u95ee\u5185\u5b58\u65f6\u4f1a\u53d1\u751f\u9875\u9519\u8bef\uff08Page Fault\uff09\uff0c\u6b64\u65f6\u4e3b\u673a\u6216\u8bbe\u5907\u4f1a\u6279\u91cf\u8fc1\u79fb\u6240\u9700\u7684\u6570\u636e\u3002\u540c\u7406\uff0c\u5f53 CPU \u6216\u52a0\u901f\u7cfb\u7edf\u4e2d\u7684\u4efb\u4f55 GPU \u5c1d\u8bd5\u8bbf\u95ee\u5c1a\u672a\u9a7b\u7559\u5728\u5176\u4e0a\u7684\u5185\u5b58\u65f6\uff0c\u4f1a\u53d1\u751f\u9875\u9519\u8bef\u5e76\u89e6\u53d1\u8fc1\u79fb\u3002</p> <p>\u7a00\u758f\u8bbf\u95ee\u6570\u636e\u65f6\uff0c\u89e6\u53d1\u9875\u9519\u8bef\u5e76\u6309\u9700\u8fc1\u79fb\u5185\u5b58\u4f1a\u6709\u663e\u8457\u4f18\u52bf\u3002</p> <p>\u800c\u9700\u8981\u5927\u91cf\u8fde\u7eed\u7684\u5185\u5b58\u5757\u65f6\uff0c\u901a\u8fc7\u5f02\u6b65\u9884\u53d6\u5185\u5b58\u53ef\u4ee5\u6709\u6548\u89c4\u907f\u9875\u9519\u8bef\u548c\u6309\u9700\u6570\u636e\u8fc1\u79fb\u6240\u4ea7\u751f\u7684\u5f00\u9500\u3002</p>"},{"location":"hpc/hpc101/cuda/#_7","title":"\u5f02\u6b65\u5185\u5b58\u9884\u53d6","text":"<p>CUDA \u53ef\u901a\u8fc7 <code>cudaMemPrefetchAsync</code> \u51fd\u6570\uff0c\u5c06\u6258\u7ba1\u5185\u5b58\u5f02\u6b65\u9884\u53d6\u5230 GPU \u8bbe\u5907\u6216 CPU\uff1a</p> <pre><code>int deviceId;\ncudaGetDevice(&amp;deviceId);\n\n// Prefetch to GPU device.\ncudaMemPrefetchAsync(pointerToSomeUMData, size, deviceId);\n// Prefetch to host.\ncudaMemPrefetchAsync(pointerToSomeUMData, size, cudaCpuDeviceId); \n</code></pre>"},{"location":"hpc/hpc101/cuda/#cuda_1","title":"\u5e76\u53d1 CUDA \u6d41","text":"<p>\u6d41\u662f\u7531\u6309\u987a\u5e8f\u6267\u884c\u7684\u4e00\u7cfb\u5217\u547d\u4ee4\u6784\u6210\u3002\u5728 CUDA \u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u6838\u51fd\u6570\u7684\u6267\u884c\u4ee5\u53ca\u4e00\u4e9b\u5185\u5b58\u4f20\u8f93\u5747\u5728 CUDA \u6d41\u4e2d\u8fdb\u884c\u3002\u672a\u4f5c\u7279\u6b8a\u58f0\u660e\u7684\u6838\u51fd\u6570\u5728\u9ed8\u8ba4\u6d41\u4e2d\u6267\u884c\u3002</p> <p>\u6b64\u5916\uff0c\u7a0b\u5e8f\u53ef\u4ee5\u521b\u5efa\u975e\u9ed8\u8ba4\u6d41\uff0c\u5728\u4e0d\u540c\u7684\u6d41\u4e2d\u5e76\u53d1\u6267\u884c\u591a\u4e2a\u6838\u51fd\u6570\u3002</p> <p>\u9ed8\u8ba4\u6d41\u4f1a\u963b\u6b62\u5176\u4ed6\u6d41\u4e2d\u7684\u6240\u6709\u6838\u51fd\u6570\u3002\u5f53\u5176\u4ed6\u6d41\u4e2d\u7684\u6240\u6709\u6838\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u4e4b\u540e\uff0c\u9ed8\u8ba4\u6d41\u4e2d\u7684\u6838\u51fd\u6570\u624d\u5f00\u59cb\u6267\u884c\uff1b\u5f53\u9ed8\u8ba4\u6d41\u4e2d\u7684\u6838\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\uff0c\u5176\u4ed6\u6d41\u4e2d\u7684\u6838\u51fd\u6570\u624d\u53ef\u4ee5\u5f00\u59cb\u6267\u884c\u3002</p> <p></p> <p>\u521b\u5efa\u975e\u9ed8\u8ba4\u6d41\uff0c\u5e76\u5728\u975e\u9ed8\u8ba4\u6d41\u4e2d\u542f\u52a8\u6838\u51fd\u6570\uff1a</p> <pre><code>cudaStream_t stream;\ncudaStreamCreate(&amp;stream);\n\nsomeKernel&lt;&lt;&lt;number_of_blocks, threads_per_block, 0, stream&gt;&gt;&gt;();\n\ncudaStreamDestroy(stream);\n</code></pre>"},{"location":"labs/cnn/","title":"lab5 \u7b80\u5355\u795e\u7ecf\u7f51\u7edc\u8bad\u7ec3\u4e0e\u52a0\u901f","text":""},{"location":"labs/cnn/#_1","title":"\u5b9e\u9a8c\u8fc7\u7a0b","text":"<p>\u8be5\u90e8\u5206\u5b8c\u6574\u4ee3\u7801\u4f4d\u4e8e <code>./code/letnet5.py</code></p>"},{"location":"labs/cnn/#_2","title":"\u6570\u636e\u96c6\u5bfc\u5165\u4e0e\u52a0\u8f7d","text":"<p>\u4f7f\u7528 <code>torchvision.datasets.MNIST</code> \u5bfc\u5165\u6570\u636e\u3002</p> <p>\u5176\u4e2d\u4f7f\u7528 <code>torchvision.transforms.ToTensor()</code> \u5c06 PIL image \u8f6c\u6362\u4e3a Tensor \u3002</p> <pre><code># Load MNIST\ntrain_dataset = torchvision.datasets.MNIST('./data', \n                    train=True, \n                    transform=torchvision.transforms.ToTensor(), \n                    target_transform=None, \n                    download=True)\ntest_dataset =  torchvision.datasets.MNIST('./data', \n                    train=False, \n                    transform=torchvision.transforms.ToTensor(), \n                    target_transform=None, \n                    download=True)\n</code></pre> <p>\u4f7f\u7528 <code>torch.utils.data.DataLoader</code> \u52a0\u8f7d\u6570\u636e\uff0c<code>batch_size=64</code> \u8bbe\u7f6e\u4e00\u6b21\u8bad\u7ec3\u53ca\u6d4b\u8bd5\u6293\u53d6\u7684\u6570\u636e\u6837\u672c\u6570\u91cf\u4e3a 64 \uff0c\u5e76\u4e14\u8bad\u7ec3\u65f6\u5c06\u6570\u636e\u6253\u4e71\u3002</p> <pre><code># Data Loader\ntrain_loader = torch.utils.data.DataLoader(train_dataset, \n                    batch_size=64, shuffle=True)\ntest_loader = torch.utils.data.DataLoader(test_dataset, \n                    batch_size=64, shuffle=False)\n</code></pre>"},{"location":"labs/cnn/#_3","title":"\u6a21\u578b\u7f16\u5199","text":""},{"location":"labs/cnn/#_4","title":"\u7f51\u7edc\u7ed3\u6784","text":"<p>\u7ee7\u627f <code>torch.nn.Module</code> \u5b9a\u4e49\u6a21\u578b\uff0c\u5c06\u7f51\u7edc\u7ed3\u6784\u4ee5\u7c7b\u4fdd\u5b58\u3002</p> <p>\u6839\u636e LetNet-5 \u7684\u7ed3\u6784\uff0c\u5b9a\u4e49\u6a21\u578b\u4e2d\u5404\u4e2a\u5c42\u3002</p> <pre><code>import torch.nn as nn\nimport torch.nn.functional as F\n\nclass LeNet_5(nn.Module):\n    def __init__(self):\n        super(LeNet_5, self).__init__()\n        # \u5377\u79ef\u5c42\n        self.conv1 = nn.Conv2d(1, 6, 5, stride=1)   \n        self.conv2 = nn.Conv2d(6, 16, 5, stride=1)\n        # \u6c60\u5316\u5c42\n        self.pool = nn.AvgPool2d(2, stride=2)\n        # \u5168\u8fde\u63a5\u5c42\n        self.full1 = nn.Linear(16 * 4 * 4, 120)\n        self.full2 = nn.Linear(120, 84)\n        self.full3 = nn.Linear(84, 10)\n    def forward(self, x):\n        x = F.gelu(self.conv1(x))\n        x = F.gelu(self.pool(x))\n        x = F.gelu(self.conv2(x))\n        x = F.gelu(self.pool(x))\n        x = x.view(-1, 16 * 4 * 4) # \u5f97\u5230\u4e00\u7ef4\u5411\u91cf\n        x = F.gelu(self.full1(x))\n        x = F.gelu(self.full2(x))\n        x = self.full3(x)\n        return x\n</code></pre>"},{"location":"labs/cnn/#_5","title":"\u635f\u5931\u51fd\u6570\u53ca\u4f18\u5316\u5668","text":"<p>\u635f\u5931\u51fd\u6570\u4f7f\u7528\u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570 <code>torch.nn.CrossEntropyLoss()</code> \u3002</p> <p>\u4f7f\u7528 NAdam \u4f18\u5316\u5668\uff0c\u7ecf\u591a\u6b21\u6d4b\u8bd5\uff0c\u9009\u7528 \\(3 \\times 10^{-3}\\) \u7684\u5b66\u4e60\u7387\u3002</p> <pre><code>criterion = nn.CrossEntropyLoss()\noptimizer = torch.optim.NAdam(model.parameters(), lr=3e-3)\n</code></pre>"},{"location":"labs/cnn/#_6","title":"\u624b\u52a8\u8fc1\u79fb\u6a21\u578b\u53ca\u6570\u636e","text":"<p>\u5b9a\u4e49 <code>device</code> \u53d8\u91cf\uff0c\u5c06\u6a21\u578b\u548c\u6570\u636e\u8fc1\u79fb\u81f3 GPU \uff0c\u82e5\u65e0 GPU \u53ef\u7528\uff0c\u5219\u8fc1\u79fb\u81f3 CPU \u8bad\u7ec3\u3002</p> <pre><code>device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n\nmodel = model.to(device)\n</code></pre>"},{"location":"labs/cnn/#_7","title":"\u8bad\u7ec3\u8fc7\u7a0b","text":"<p>\u603b\u5171\u5728\u8bad\u7ec3\u96c6\u4e0a\u8fdb\u884c\u5341\u6b21\u8bad\u7ec3\uff0c\u6bcf\u6b21\u8bad\u7ec3\u65f6\u4e0d\u65ad\u4ece <code>Dataloader</code> \u4e2d\u53d6\u51fa\u6570\u636e\uff0c\u5e76\u4e14\u8f93\u51fa\u6bcf\u6b21\u8bad\u7ec3\u7684\u5e73\u5747\u635f\u5931\u3002</p> <pre><code>model.train()\n\nrunning_loss = 0.0\nfor batch_idx, (images, labels) in enumerate(train_loader):\n    # \u53d6\u51fa\u6570\u636e\uff0c\u5c06\u6570\u636e\u8fc1\u79fb\u81f3 device\n    images, labels = images.to(device), labels.to(device)\n    # \u5bf9\u6570\u636e\u8fdb\u884c\u6b63\u5411\u4f20\u64ad\n    outputs = model(images)\n    # \u4f7f\u7528\u635f\u5931\u51fd\u6570\u8ba1\u7b97\u8be5\u6b21\u8bad\u7ec3\u7684\u635f\u5931\n    loss = criterion(outputs, labels)\n    # \u53cd\u5411\u4f20\u64ad\u524d\u5c06\u68af\u5ea6\u6e05\u96f6\n    optimizer.zero_grad(set_to_none=True)\n    # \u53cd\u5411\u4f20\u64ad\n    loss.backward()\n    # \u53cd\u5411\u4f20\u64ad\u540e\u66f4\u65b0\u4f18\u5316\u5668\u53c2\u6570\n    optimizer.step()\n    # \u7edf\u8ba1\u635f\u5931\n    running_loss += loss.item()\n# \u8f93\u51fa\u5e73\u5747\u635f\u5931\nprint('Epoch: [{}], Average Loss: {:.6f}'.format(epoch + 1, \n                            running_loss / len(train_loader)))\n</code></pre>"},{"location":"labs/cnn/#_8","title":"\u6d4b\u8bd5\u8fc7\u7a0b","text":"<p>\u6bcf\u6b21\u8bad\u7ec3\u7ed3\u675f\u4e4b\u540e\uff0c\u8fdb\u884c\u4e00\u6b21\u6d4b\u8bd5\u3002\u8f93\u51fa\u6bcf\u6b21\u8bad\u7ec3\u4e4b\u540e\u7684\u51c6\u786e\u5ea6\u3002</p> <pre><code>model.eval()\n# \u7981\u7528\u68af\u5ea6\u8ba1\u7b97\nwith torch.no_grad():\n    corret = 0\n    total = 0\n    for batch_idx, (images, labels) in enumerate(test_loader):\n        # \u53d6\u51fa\u6570\u636e\uff0c\u5c06\u6570\u636e\u8fc1\u79fb\u81f3 device\n        images, labels = images.to(device), labels.to(device)\n        # \u5bf9\u6570\u636e\u8fdb\u884c\u6b63\u5411\u4f20\u64ad\n        outputs = model(images)\n        # \u8fd4\u56de\u6bcf\u4e00\u884c\u6700\u5927\u503c\u53ca\u5176\u7d22\u5f15\uff0c\u5373\u9884\u6d4b\u7ed3\u679c\n        predict, result = torch.max(outputs.data, 1)\n        # \u7d2f\u52a0\u6d4b\u8bd5\u6570\u636e\u6570\u91cf\n        total += labels.size(0) \n        # \u7d2f\u52a0\u9884\u6d4b\u6b63\u786e\u7684\u6570\u636e\u6570\u91cf\n        corret += (result == labels).sum().item()\n    # \u8f93\u51fa\u51c6\u786e\u7387\n    print('Test Accuracy: {:.2f}%'.format(100 * corret / total))\n</code></pre>"},{"location":"labs/cnn/#gpu","title":"GPU \u5360\u7528\u7387","text":"<p>\u4f7f\u7528 <code>nvidia-smi</code> \u67e5\u770b GPU \u5360\u7528\u7387\u5982\u56fe\u3002</p> <p></p>"},{"location":"labs/cnn/#tensorboard","title":"\u4f7f\u7528 Tensorboard","text":"<p>\u4f7f\u7528 Tensorboard \u8bb0\u5f55\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u7684\u635f\u5931\u548c\u51c6\u786e\u7387\u3002</p> <pre><code>from torch.utils.tensorboard import SummaryWriter\n\nwriter = SummaryWriter()\n...\nfor epoch in range(10):\n    ...\n    for batch_idx, (images, labels) in enumerate(train_loader):\n        ...\n        writer.add_scalar('Loss/Train', loss.item(),\n                    epoch * len(train_loader) + batch_idx)\n    writer.flush()\n    with torch.no_grad():\n        ...\n        for batch_idx, (images, labels) in enumerate(test_loader):\n            ...\n            writer.add_scalar('Accuracy/Test', \n                100 * (result == labels).sum().item() / labels.size(0), \n                epoch * len(test_loader) + batch_idx)\n    writer.flush()\n</code></pre> <p>\u8bad\u7ec3\u7ed3\u675f\u540e\uff0c\u6267\u884c</p> <pre><code>$ tensorboard --logdir=./path/to/the/folder\n</code></pre> <p>\u5176\u4e2d <code>./path/to/the/folder</code> \u4e3a Tensorboard \u751f\u6210\u7684\u6587\u4ef6\u8def\u5f84\u3002</p> <p>\u5f97\u5230\u635f\u5931\u66f2\u7ebf\uff1a</p> <p></p> <p>\u51c6\u786e\u7387\u66f2\u7ebf\uff1a</p> <p></p> <p>\u6700\u7ec8\u7684\u8bc6\u522b\u6b63\u786e\u7387\u7ea6\u4e3a 98.90 % \u3002</p>"},{"location":"labs/cnn/#_9","title":"\u81ea\u5b9a\u4e49\u7b97\u5b50","text":"\u8be5\u90e8\u5206\u5b8c\u6574\u4ee3\u7801\u4f4d\u4e8e <code>./code/mygelu.py</code> \uff1a\u81ea\u5b9a\u4e49 GELU \u7b97\u5b50\u53ca\u5176\u9a8c\u8bc1\u3002 <code>./code/mygelu.cpp</code> \uff1aC++ \u5b9e\u73b0 GELU \u7b97\u5b50\u3002 <code>./code/mygelu_cpp.py</code> \uff1apython \u8c03\u7528 C++ GELU \u7b97\u5b50\u9a8c\u8bc1\u6b63\u786e\u6027\u3002 <code>./code/letnet5_cpp.py</code> \uff1a\u4f7f\u7528\u81ea\u5b9a\u4e49 GELU \u7b97\u5b50\u8fdb\u884c LetNet-5 \u8bad\u7ec3\u3002"},{"location":"labs/cnn/#_10","title":"\u7b97\u5b50\u7f16\u5199","text":"<p>GELU \u7b97\u5b50\u516c\u5f0f\u4e3a\uff1a</p> \\[ \\begin{align}     \\mathrm{GELU}(x) &amp;= x \\cdot \\Phi(x) \\\\                    &amp;= \\frac{1}{2} x (1 + \\mathrm{erf}(\\frac{x}{\\sqrt{2}})) \\end{align} \\] <p>\u6c42\u5bfc\u5f97\uff1a</p> \\[ \\frac{\\mathrm{d}}{\\mathrm{d} x}\\mathrm{GELU}(x) = \\frac{1}{2} + \\frac{1}{2} \\mathrm{erf}(\\frac{x}{\\sqrt{2}}) + \\frac{\\frac{\\sqrt{2}}{2} x \\mathrm{e}^{-x^2 / 2}}{\\sqrt{\\pi}} \\] <p>\u4f7f\u7528 torch \u63d0\u4f9b\u7684\u51fd\u6570 <code>torch.erf()</code> \u5b9e\u73b0 GELU \u51fd\u6570\u53ca\u5176\u5bfc\u6570\u7684\u8ba1\u7b97\u3002</p> <p>\u7ee7\u627f <code>torch.autograd.Function</code> \u5e76\u5b9e\u73b0 <code>forward</code> \u548c <code>backward</code> \u51fd\u6570\u3002</p> <pre><code>import math\nimport torch\n\ndef GELU(x):\n    return 0.5 * x * (1.0 + torch.erf(x / math.sqrt(2)))\n\ndef GELU_gard(x):\n    return 0.5 + 0.5 * torch.erf(x / math.sqrt(2)) + \\\n        (0.5 * x * torch.exp(- x * x / 2) * math.sqrt(2)) / math.sqrt(math.pi)\n\nclass my_gelu(torch.autograd.Function):\n    @staticmethod\n    def forward(ctx, input):\n        # \u4fdd\u5b58 input \u4f9b backward() \u4f7f\u7528\n        ctx.save_for_backward(input)\n        return GELU(input)\n\n    @staticmethod\n    def backward(ctx, gard_output):\n        input = ctx.saved_tensors\n        # \u8ba1\u7b97\u68af\u5ea6\n        gard_input = gard_output * GELU_gard(input)\n        return gard_input\n</code></pre> <p>\u5c06\u81ea\u5b9a\u4e49\u7b97\u5b50\u4e0e <code>F.gelu</code> \u6bd4\u8f83\uff1a</p> <pre><code>import torch.nn.functional as F\n\nloss_func = nn.MSELoss()\nA = torch.randn(100)\nB = A.clone()\nA.requires_grad = True\nB.requires_grad = True\nc = torch.randn(100)\na = F.gelu(A)\nb = my_gelu.apply(B)\nloss1 = loss_func(a, c)\nloss2 = loss_func(b, c)\nloss1.backward()\nloss2.backward()\ngradA = A.grad\ngradB = B.grad\nerr = loss_func(gradA, gradB)\nprint(err.item())\n</code></pre> <p>\u8f93\u51fa\u8bef\u5dee\u7ea6\u4e3a \\(10^{-17}\\) \uff0c\u53ef\u4ee5\u5ffd\u7565\u3002</p>"},{"location":"labs/cnn/#c","title":"\u4f7f\u7528 C++","text":"<p>\u5728 C++ \u4e2d\u5b9e\u73b0 GELU \u7b97\u5b50\uff1a</p> <pre><code>#include &lt;torch/extension.h&gt;\n#define _USE_MATH_DEFINES\n#include &lt;cmath&gt;\nusing namespace std;\n\ntorch::Tensor GELU(torch::Tensor x) {\n    return 0.5 * x * (1.0 + torch::erf(x / sqrt(2)));\n}\n\ntorch::Tensor GELU_gard(torch::Tensor x) {\n    return 0.5 + 0.5 * torch::erf(x / sqrt(2)) +\n             (0.5 * x * torch::exp(- x * x / 2) * sqrt(2)) / sqrt(M_PI);\n}\n\ntorch::Tensor gelu_forward(torch::Tensor input) {\n    return GELU(input);\n}\n\ntorch::Tensor gelu_backward(torch::Tensor grad_output, torch::Tensor input) {\n    return grad_output * GELU_gard(input);\n}\n\nPYBIND11_MODULE(TORCH_EXTENSION_NAME, m) {\n    m.def(\"forward\", &amp;gelu_forward, \"GELU forward\");\n    m.def(\"backward\", &amp;gelu_backward, \"GELU backward\");\n}\n</code></pre> <p>\u4f7f\u7528 <code>torch.utils.cpp_extension.load</code> \u8c03\u7528 C++ \u5171\u4eab\u5e93\uff0c\u4f7f\u7528 python \u8c03\u7528\u7b97\u5b50\uff1a</p> <pre><code>from torch.utils.cpp_extension import load\n\ngelu_cpp = load(name=\"gelu_cpp\", sources=[\"mygelu.cpp\"])\n\nclass my_gelu(torch.autograd.Function):\n    @staticmethod\n    def forward(ctx, input):\n        ctx.save_for_backward(input)\n        output = gelu_cpp.forward(input)\n        return output\n\n    @staticmethod\n    def backward(ctx, grad_output):\n        input, = ctx.saved_tensors\n        grad_input = gelu_cpp.backward(grad_output, input)\n        return grad_input\n</code></pre> <p>\u518d\u6b21\u5c06\u81ea\u5b9a\u4e49\u7b97\u5b50\u4e0e <code>F.gelu</code> \u6bd4\u8f83\uff0c\u8bef\u5dee\u7ea6\u4e3a \\(10^{-18}\\) \uff0c\u53ef\u4ee5\u5ffd\u7565\u3002</p> <p>\u5c06\u81ea\u5b9a\u4e49\u7b97\u5b50\u7528\u4e8e LetNet-5 \u8bad\u7ec3\uff1a</p> <pre><code>from torch.utils.cpp_extension import load\n\ngelu_cpp = load(name=\"gelu_cpp\", sources=[\"mygelu.cpp\"])\n\nclass my_gelu(torch.autograd.Function):\n    @staticmethod\n    def forward(ctx, input):\n        ctx.save_for_backward(input)\n        output = gelu_cpp.forward(input)\n        return output\n\n    @staticmethod\n    def backward(ctx, grad_output):\n        input, = ctx.saved_tensors\n        grad_input = gelu_cpp.backward(grad_output, input)\n        return grad_input\n\nclass LeNet_5(nn.Module):\n    ...\n    def forward(self, x):\n        x = my_gelu.apply(self.conv1(x))\n        x = my_gelu.apply(self.pool(x))\n        x = my_gelu.apply(self.conv2(x))\n        x = my_gelu.apply(self.pool(x))\n        x = x.view(-1, 16 * 4 * 4)\n        x = my_gelu.apply(self.full1(x))\n        x = my_gelu.apply(self.full2(x))\n        x = self.full3(x)\n        return x\n...\n</code></pre> <p></p> <p>\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c\u3002</p>"},{"location":"labs/cnn/#reference","title":"Reference","text":"<ul> <li>CNN \u57fa\u7840\u77e5\u8bc6</li> <li>\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7ecf\u5178\u56de\u987e\u4e4bLeNet-5</li> <li>PYTORCH DOCUMENTATION</li> <li>PyTorch 74.\u81ea\u5b9a\u4e49\u64cd\u4f5ctorch.autograd.Function</li> </ul>"},{"location":"labs/cuda/","title":"lab3 GEMM \u901a\u7528\u77e9\u9635\u4e58\u6cd5","text":""},{"location":"labs/cuda/#_1","title":"\u5b9e\u9a8c\u6b65\u9aa4","text":""},{"location":"labs/cuda/#blocking-array-packing","title":"Blocking &amp; Array Packing","text":"<p>\u57fa\u51c6\u4ee3\u7801\u4e2d\uff0c\u6309\u5217\u8bbf\u95ee\u77e9\u9635\u5143\u7d20\u65f6\u5c40\u90e8\u6027\u4e0d\u9ad8\u3002\u901a\u8fc7\u5bf9\u77e9\u9635\u8fdb\u884c\u5206\u5757\uff0c\u8ba9\u6bcf\u4e2a\u5757\u4e2d\u5143\u7d20\u5728\u5185\u5b58\u4e2d\u8fde\u7eed\u6392\u5217\uff0c\u53ef\u4ee5\u63d0\u9ad8\u5c40\u90e8\u6027\u3002</p> <p>\u4f7f\u7528\u6838\u51fd\u6570 <code>BlockCudaKernel</code> \u5bf9\u77e9\u9635 A \u548c\u77e9\u9635 B \u8fdb\u884c\u5206\u5757\u5e76\u5b58\u50a8\u5728 <code>_a</code> \u548c <code>_b</code> \u4e2d\u3002</p> <pre><code>#define _a(_i, _j, _x, _y)                               \\\n  _a[((_i) * grid_size + (_j)) * block_size * block_size + ((_x) * block_size + (_y))]\n#define _b(_i, _j, _x, _y)                               \\\n  _b[((_i) * grid_size + (_j)) * block_size * block_size + ((_x) * block_size + (_y))]\n\n__global__ void BlockCudaKernel(double *__restrict__ _a,\n                                  const double *__restrict__ a,\n                                  double *__restrict__ _b,\n                                  const double *__restrict__ b)\n{\n  int grid_size = (size + block_size - 1) / block_size;\n  const int i = blockIdx.x * block_size + threadIdx.x;\n  const int j = blockIdx.y * block_size + threadIdx.y;\n  double a_res = 0, b_res = 0;\n  if (i &lt; size &amp;&amp; j &lt; size) {\n    a_res = a(i, j);\n    b_res = b(i, j);\n  }\n  _a(blockIdx.x, blockIdx.y, threadIdx.x, threadIdx.y) = a_res;\n  _b(blockIdx.x, blockIdx.y, threadIdx.x, threadIdx.y) = b_res;\n}\n</code></pre> <p>Note</p> <p>\u6b64\u5904\u5c06\u77e9\u9635\u5927\u5c0f\u8865\u5168\u4e3a <code>block_size</code> \u7684\u6574\u6570\u500d\uff0c\u65b9\u4fbf\u540e\u7eed\u8ba1\u7b97\u3002</p> <p>\u76f8\u5e94\u5730\u5bf9 <code>MultipleCudaKernel</code> \u6838\u51fd\u6570\u8fdb\u884c\u4fee\u6539\uff0c\u4ece\u5206\u5757\u540e\u7684\u77e9\u9635\u62ff\u53d6\u5143\u7d20\u8fdb\u884c\u8ba1\u7b97\u3002</p> <pre><code>__global__ void MultipleCudaKernel(const double *__restrict__ _a, \n                                     const double *__restrict__ _b, \n                                     double *__restrict__ result) \n{\n  int grid_size = (size + block_size - 1) / block_size;\n  const int i = blockIdx.x * block_size + threadIdx.x;\n  const int j = blockIdx.y * block_size + threadIdx.y;\n  if (i &lt; size &amp;&amp; j &lt; size) {\n    double res = 0;\n    for (int idx = 0; idx &lt; gridDim.x; ++idx) {\n      for (int k = 0; k &lt; block_size &amp;&amp; \n                      k &lt; size - idx * block_size; ++k) {\n        res += _a(blockIdx.x, idx, threadIdx.x, k) * \n               _b(idx, blockIdx.y, k, threadIdx.y);\n      }\n    }\n    result(i, j) = res;\n  }\n}\n</code></pre> <p>\u6838\u51fd\u6570\u8c03\u7528\u90e8\u5206\u4fee\u6539\uff1a</p> <pre><code>AdderCudaKernel&lt;&lt;&lt;grid, block&gt;&gt;&gt;(copy_kernel, b_kernel);\nCUDA_CALL(cudaDeviceSynchronize());\ndouble *a_block, *copy_block;\nCUDA_CALL(cudaMalloc(&amp;a_block, grid_size * grid_size * \n                               block_size * block_size * sizeof(double)));\nCUDA_CALL(cudaMalloc(&amp;copy_block, grid_size * grid_size * \n                               block_size * block_size * sizeof(double)));\nBlockCudaKernel&lt;&lt;&lt;grid, block&gt;&gt;&gt;(a_block, a_kernel, copy_block, copy_kernel);\nCUDA_CALL(cudaDeviceSynchronize());\n// Perform A * B -&gt; Result.\nMultipleCudaKernel&lt;&lt;&lt;grid, block&gt;&gt;&gt;(a_block, copy_block, result_kernel);\nCUDA_CALL(cudaDeviceSynchronize());\n// Swap pointers between A and Result.\ndouble *tmp = a_kernel;\na_kernel = result_kernel;\nresult_kernel = tmp;\n\ncudaFree(a_block);\ncudaFree(copy_block);\n</code></pre> <p>\u901a\u8fc7\u591a\u6b21\u8c03\u8bd5\uff0c\u91c7\u7528 <code>block_size = 8</code> \u80fd\u591f\u8fbe\u5230\u8f83\u5feb\u7684\u901f\u5ea6\u3002</p> <p>\u8fd0\u884c\u7ed3\u679c\u4e3a\uff1a</p> <pre><code>Correct\nCustom: 13634.3 milliseconds\ncuBLAS: 11508.2 milliseconds\n</code></pre> <p>\u6b64\u5916\uff0c\u901a\u8fc7\u6570\u7ec4\u5c01\u88c5\uff0c\u8ba9\u77e9\u9635 B \u5728\u5217\u65b9\u5411\u7684\u5b50\u5757\u5728\u5185\u5b58\u4e2d\u8fde\u7eed\u6392\u5217\uff0c\u80fd\u591f\u8fdb\u4e00\u6b65\u63d0\u9ad8\u5c40\u90e8\u6027\u3002\u5728\u4ee3\u7801\u4e2d\u53ea\u9700\u4fee\u6539 <code>_b</code> \u6570\u7ec4\u7684\u5185\u5b58\u6392\u5e03\u3002</p> <pre><code>#define _b(_i, _j, _x, _y) \\\n  _b[((_j) * grid_size + (_i)) * block_size * block_size + ((_y) * block_size + (_x))]\n</code></pre>"},{"location":"labs/cuda/#shared-memory-cooperative-fetching","title":"Shared Memory &amp; Cooperative Fetching","text":"<p>\u8ba1\u7b97\u76ee\u6807\u77e9\u9635 C \u65f6\uff0c\u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u5757\u8ba1\u7b97\u77e9\u9635 C \u7684\u4e00\u4e2a\u5b50\u5757\uff0c\u6709 \\(C_{ij}=\\sum _{k=0}^{N-1}A_{ik}B_{kj}\\) \u3002</p> <p>\u4e0a\u9762\u7684\u505a\u6cd5\u4e2d\uff0c\u6bcf\u6b21\u90fd\u9700\u8981\u4ece global memory \u4e2d\u62ff\u53d6\u77e9\u9635 A \u548c B \u4e2d\u7684\u5143\u7d20\uff0c\u901f\u5ea6\u8f83\u6162\u3002</p> <p>\u5728\u8ba1\u7b97\u4e4b\u524d\uff0c\u5c06 \\(A_{ik}\\) \u548c \\(B_{kj}\\) \u653e\u5165 shared memory \u4e2d\uff0c\u8ba1\u7b97\u65f6\u53ea\u9700\u4ece shared memory \u4e2d\u62ff\u53d6\u5143\u7d20\uff0c\u4ece\u800c\u964d\u4f4e\u8bbf\u5b58\u5ef6\u8fdf\u3002</p> <pre><code>#define a_shared(_x, _y) a_shared[(_x) * block_size + (_y)]\n#define b_shared(_x, _y) b_shared[(_x) * block_size + (_y)]\n\n/// \\brief Do Matrix Multiplication on GPU.\n__global__ void MultipleCudaKernel(const double *__restrict__ _a, \n                                     const double *__restrict__ _b, \n                                     double *__restrict__ result) \n{\n  int grid_size = (size + block_size - 1) / block_size;\n\n  __shared__ double a_shared[block_size * block_size];\n  __shared__ double b_shared[block_size * block_size];\n\n  const int i = blockIdx.x * block_size + threadIdx.x;\n  const int j = blockIdx.y * block_size + threadIdx.y;\n  const int x = threadIdx.x;\n  const int y = threadIdx.y;\n\n  double res = 0;\n  for (int idx = 0; idx &lt; gridDim.x; ++idx) {\n    // Load matrix to shared memory\n    a_shared(x, y) = _a(blockIdx.x, idx, x, y);\n    b_shared(x, y) = _b(idx, blockIdx.y, x, y);\n    __syncthreads();\n\n    for (int k = 0; k &lt; block_size; ++k) {\n      res += a_shared(x, k) * b_shared(k, y);\n    }\n    __syncthreads();\n  }\n  if (i &lt; size &amp;&amp; j &lt; size) {\n    result(i, j) = res;\n  }\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\u4e3a\uff1a</p> <pre><code>Correct\nCustom: 17235.6 milliseconds\ncuBLAS: 11489.1 milliseconds\n</code></pre> <p>\u6027\u80fd\u6709\u6240\u4e0b\u6ed1\uff0c\u63a8\u6d4b\u662f\u56e0\u4e3a bank conflict \u8f83\u591a\uff0c\u5bfc\u81f4\u8bbf\u5b58\u6548\u7387\u8f83\u4f4e\u3002</p>"},{"location":"labs/cuda/#bank-conflict","title":"Bank Conflict","text":"<p>\u5047\u8bbe\u5b58\u50a8\u5668\u6709 16 \u4e2a bank \uff0c\u4e14\u8fde\u7eed\u7684 16 \u4e2a\u77e9\u9635\u5143\u7d20\u88ab\u5206\u522b\u5b58\u50a8\u5230 16 \u4e2a bank \u4e2d\u3002</p> <p>\u5f53\u6bcf\u884c\u5143\u7d20\u5728\u5185\u5b58\u4e2d\u8fde\u7eed\u65f6\uff0cbank \u7684\u5206\u914d\u5982\u4e0b\u56fe\uff08\u5176\u4e2d\u7eff\u8272\u6570\u5b57\u4e3a\u5143\u7d20\u6240\u5728 bank \u7f16\u53f7\uff09\uff0c</p> <p></p> <p>\u82e5 <code>a_shared</code> \u91c7\u7528\u5982\u4e0a\u7684\u6570\u636e\u6392\u5e03\uff0c\u5219\u6bcf\u4e2a\u7ebf\u7a0b\u5757\u5bf9 <code>a_shared</code> \u7684\u8bbf\u95ee\u5982\u4e0b\u56fe\u3002</p> <p></p> <p>\u7531\u4e8e\u8ba1\u7b97 c(x, 0~7) \u65f6\u5404\u4e2a\u7ebf\u7a0b\u5747\u8bbf\u95ee\u76f8\u540c\u7684\u5730\u5740\uff0c\u901a\u8fc7\u5e7f\u64ad\u5219\u4e0d\u4f1a\u4ea7\u751f bank conflict \u3002\u6545\u4e3b\u8981\u4ea7\u751f bank conflict \u7684\u539f\u56e0\u662f\u4e0d\u540c\u884c\u7684\u7ebf\u7a0b\u8bbf\u95ee\u4e86\u540c\u4e00 bank \u7684\u4e0d\u540c\u4f4d\u7f6e\u3002</p> <p>\u901a\u8fc7\u5bf9\u5185\u5b58\u8fdb\u884c\u91cd\u65b0\u914d\u5e03\uff0c\u4f7f\u5f97\u6bcf\u4e00\u5217\u7684\u5143\u7d20\u5728\u5185\u5b58\u4e2d\u8fde\u7eed\u3002\u5982\u56fe\uff0c\u6b64\u65f6\u4e0d\u540c\u884c\u7684\u7ebf\u7a0b\u4e0d\u4f1a\u4ea7\u751f bank conflict \u3002</p> <p></p> <p>\u5bf9\u4e8e <code>b_shared</code> \u77e9\u9635\uff0c\u540c\u7406\u53ef\u77e5\u8ba9\u5176\u6bcf\u884c\u5143\u7d20\u5728\u5185\u5b58\u4e2d\u8fde\u7eed\uff0c\u5373\u53ef\u907f\u514d bank conflict \u3002</p> <p>\u4ee3\u7801\u4e2d\u53ea\u9700\u6539\u52a8 <code>a_shared</code> \u6570\u7ec4\u7684\u5185\u5b58\u5206\u5e03\uff1a</p> <pre><code>#define a_shared(_x, _y) a_shared[(_y) * block_size + (_x)]\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\uff1a</p> <pre><code>Correct\nCustom: 11333.5 milliseconds\ncuBLAS: 11484.9 milliseconds\n</code></pre> <p>\u4ee5\u4e0a\u90e8\u5206\u7684\u4ee3\u7801\u5728 <code>/code/baseline.cu</code> \u4e2d\uff0c\u7f16\u8bd1\u53c2\u6570\u4f4d\u4e8e <code>/code/Makefile</code> \uff0c\u8fd0\u884c\u53c2\u6570\u4e3a</p> <pre><code>srun -p 2080Ti -N 1 -n 1 --cpus-per-task=8 --gpus=1 gemm\n</code></pre>"},{"location":"labs/cuda/#tensor-core","title":"Tensor Core","text":"<p>\u4f7f\u7528 <code>nvcuda::wmma</code> \u4e2d\u7684 Tensor Core API \u8c03\u7528 Tensor Core \u8fdb\u884c\u77e9\u9635\u4e58\u6cd5\u3002</p> <p>\u7531\u4e8e\u5bf9\u4e8e\u6570\u636e\u7c7b\u578b <code>double</code> \uff0c\u53ea\u63d0\u4f9b\u4e86 8x8x4 \u7684 Matrix Size \uff0c\u6545\u5206\u5757\u8ba1\u7b97\u65f6\uff0c\u5c06 8x8x8 \u7684\u77e9\u9635\u4e58\u6cd5\u62c6\u5206\u6210\u4e24\u6b21 8x8x4 \u7684\u77e9\u9635\u4e58\u6cd5\uff0c\u8c03\u7528 Tensor Core \u8fdb\u884c\u8ba1\u7b97\u3002</p> <pre><code>#define a_shared(_x, _y) a_shared[(_y) * block_size + (_x)]\n#define b_shared(_x, _y) b_shared[(_x) * block_size + (_y)]\n#define c_shared(_x, _y) c_shared[(_x) * block_size + (_y)]\n\n/// \\brief Do Matrix Multiplication on GPU.\n__global__ void MultipleCudaKernel(const double *__restrict__ _a, \n                                     const double *__restrict__ _b, \n                                     double *__restrict__ result) \n{\n  int grid_size = (size + block_size - 1) / block_size;\n\n  __shared__ double a_shared[block_size * block_size];\n  __shared__ double b_shared[block_size * block_size];\n  __shared__ double c_shared[block_size * block_size];\n\n  wmma::fragment&lt;wmma::matrix_a, block_size, block_size, \n                block_size / 2, double, wmma::col_major&gt; a_frag;\n  wmma::fragment&lt;wmma::matrix_b, block_size, block_size, \n                block_size / 2, double, wmma::row_major&gt; b_frag;\n  wmma::fragment&lt;wmma::accumulator, block_size, block_size, \n                block_size / 2, double&gt; c_frag;\n\n  const int i = blockIdx.x * block_size + threadIdx.x;\n  const int j = blockIdx.y * block_size + threadIdx.y;\n  const int x = threadIdx.x;\n  const int y = threadIdx.y;\n\n  wmma::fill_fragment(c_frag, 0.0f);\n\n  for (int idx = 0; idx &lt; gridDim.x; ++idx) {\n    a_shared(x, y) = _a(blockIdx.x, idx, x, y);\n    b_shared(x, y) = _b(idx, blockIdx.y, x, y);\n    __syncthreads();\n\n    wmma::load_matrix_sync(a_frag, a_shared, block_size);\n    wmma::load_matrix_sync(b_frag, b_shared, block_size);\n    wmma::mma_sync(c_frag, a_frag, b_frag, c_frag);\n\n    wmma::load_matrix_sync(a_frag, \n            a_shared + block_size * block_size / 2, block_size);\n    wmma::load_matrix_sync(b_frag, \n            b_shared + block_size * block_size / 2, block_size);\n    wmma::mma_sync(c_frag, a_frag, b_frag, c_frag);\n    __syncthreads();\n  }\n\n  wmma::store_matrix_sync(c_shared, c_frag, \n                          block_size, wmma::mem_row_major);\n  __syncthreads();\n\n  if (i &lt; size &amp;&amp; j &lt; size) {\n    result(i, j) = c_shared(x, y);\n  }\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\u4e3a\uff1a</p> <pre><code>Correct\nCustom: 2127.59 milliseconds\ncuBLAS: 899.045 milliseconds\n</code></pre> <p>Bonus \u90e8\u5206\u4ee3\u7801\u4f4d\u4e8e <code>/code_tensor/baseline.cu</code> \u4e2d\uff0c\u7f16\u8bd1\u53c2\u6570\u4f4d\u4e8e <code>/code_tensor/Makefile</code> \u4e2d\uff0c\u8fd0\u884c\u53c2\u6570\u4e3a\uff1a</p> <pre><code>srun -p A100 -N 1 -n 1 --cpus-per-task=8 --gpus=1 ./gemm\n</code></pre>"},{"location":"labs/cuda/#reference","title":"Reference","text":"<ul> <li>How to optimize GEMM on CPU</li> <li>\u6df1\u5165\u6d45\u51faGPU\u4f18\u5316\u7cfb\u5217\uff1aGEMM\u4f18\u5316\uff08\u4e00\uff09</li> <li>\u4f20\u7edf CUDA GEMM \u4e0d\u5b8c\u5168\u6307\u5317</li> <li>\u94f6\u6cb3\u7cfbCUDA\u7f16\u7a0b\u6307\u5357(3)\u2014\u2014\u77e9\u9635\u4e58\u6cd5\u7684\u5206\u5757\u5b9e\u73b0</li> <li>CUDA C++ Programming Guide # Warp Matrix Functions</li> </ul>"},{"location":"labs/numpy/","title":"lab2 \u5411\u91cf\u5316\u8ba1\u7b97","text":""},{"location":"labs/numpy/#_1","title":"\u601d\u8def","text":""},{"location":"labs/numpy/#step-1","title":"Step 1","text":"<p>\u5148\u8003\u8651\u8ba1\u7b97\u5355\u5f20\u56fe\u7247\u7684\u60c5\u5f62\uff08 <code>N = 1</code> \uff09\u3002</p> <p>\u4e0b\u8bbe\u65b0\u7684 \\(H_2 \\times W_2\\) \u7684\u56fe\u4e2d \\((i,j)\\) \u5904\u50cf\u7d20\u6240\u60f3\u8981\u91c7\u6837\u7684 <code>a</code> \u56fe\u4e2d\u5bf9\u5e94\u70b9\u5750\u6807\u4e3a \\((x_{(i,j)}, y_{(i,j)})\\) \uff0c\u5373 <code>b[n, i, j]</code> \u5904\u6240\u5b58\u5750\u6807\u3002</p> <p>\u9605\u8bfb <code>baseline.py</code> \uff0c\u53ef\u77e5\u57fa\u51c6\u4ee3\u7801\u91c7\u7528\u4e86\u5982\u4e0b\u7b49\u5f0f\u8ba1\u7b97\u6bcf\u4e2a\u91c7\u6837\u70b9 <code>(x, y)</code> \u7684\u91c7\u6837\u7ed3\u679c\uff1a</p> \\[ \\begin{aligned}     f(x,y) \\approx     {\\frac {1}{(x_{2}-x_{1})(y_{2}-y_{1})}}      {\\big (}     &amp;f(Q_{11})(x_{2}-x)(y_{2}-y) + f(Q_{21})(x-x_{1})(y_{2}-y)\\\\     +&amp;f(Q_{12})(x_{2}-x)(y-y_{1}) + f(Q_{22})(x-x_{1})(y-y_{1})     {\\big )} \\end{aligned} \\] <p>\u5728\u672c\u6b21\u5b9e\u9a8c\u7ed9\u51fa\u7684\u60c5\u666f\u4e2d\uff0c \\(x_2 - x_1 = y_2 - y_1 = 1, x_1 = \\lfloor x \\rfloor, y_1 = \\lfloor y \\rfloor\\)  \uff0c\u8bb0  \\(x' = x - \\lfloor x \\rfloor\uff0c y' = y - \\lfloor y \\rfloor\\)  \uff0c\u4e0a\u8ff0\u7b49\u5f0f\u53ef\u7b80\u5316\u4e3a\uff1a</p> \\[ \\displaystyle \\begin{aligned}     f(x,y) \\approx      \\ &amp; f(Q_{11})(1 - x')(1 - y')+f(Q_{21})(x')(1 - y') \\\\     + \\ &amp; f(Q_{12})(1 - x')(y')+f(Q_{22})(x')(y') \\\\ \\end{aligned} \\] <p>\u7531\u4e8e\u6bcf\u4e2a\u91c7\u6837\u70b9\u7684\u8ba1\u7b97\u90fd\u662f\u72ec\u7acb\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u5982\u4e0b\u51e0\u4e2a\u77e9\u9635\uff0c</p> \\[ \\mathbf{F} = \\big( f(x_{(i,j)}, y_{(i,j)})\\big)_{H2 \\times W2}  \\] \\[ \\begin{aligned}     \\mathbf{F_{00}} = \\big( f(Q_{11})\\big)_{H2 \\times W2} \\quad     \\mathbf{F_{01}} = \\big( f(Q_{12})\\big)_{H2 \\times W2} \\\\     \\mathbf{F_{10}} = \\big( f(Q_{21})\\big)_{H2 \\times W2} \\quad     \\mathbf{F_{11}} = \\big( f(Q_{22})\\big)_{H2 \\times W2} \\\\ \\end{aligned} \\] \\[ \\begin{aligned}     \\mathbf{X'} = \\big( x'_{(i, j)} \\big)_{H2 \\times W2} \\\\     \\mathbf{Y'} = \\big( y'_{(i, j)} \\big)_{H2 \\times W2} \\end{aligned} \\] <p>\u4f7f\u7528\u9010\u5143\u7d20\u4e58\u6cd5\uff08 <code>*</code> \uff09\u548c\u77e9\u9635\u52a0\u6cd5\u5373\u53ef\u5b9e\u73b0\u5411\u91cf\u5316\u8ba1\u7b97\u77e9\u9635 \\(\\mathbf{F}\\) \u4e2d\u7684\u91c7\u6837\u4fe1\u606f\uff1a</p> \\[ \\begin{aligned}     \\mathbf{F}     &amp; = \\mathbf{F_{00}} * (1 - \\mathbf{X'}) * (1 - \\mathbf{Y'}) + \\mathbf{F_{10}} * \\mathbf{X'} * (1 - \\mathbf{Y'}) \\\\     &amp; + \\mathbf{F_{01}} * (1 - \\mathbf{X'}) * \\mathbf{Y'} + \\mathbf{F_{11}} * \\mathbf{X'} * \\mathbf{Y'}  \\end{aligned} \\] <p>\u636e\u6b64\u5373\u53ef\u4f7f\u7528\u5411\u91cf\u5316\u53bb\u6389\u5185\u5c42\u4e24\u5c42 <code>for</code> \u5faa\u73af\uff0c\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff1a</p> vectorize1.py<pre><code>def bilinear_interp_vectorized(a: np.ndarray, b: np.ndarray) -&gt; np.ndarray:\n    \"\"\"\n    This is the vectorized implementation of bilinear interpolation.\n    - a is a ND array with shape [N, H1, W1, C], dtype = int64\n    - b is a ND array with shape [N, H2, W2, 2], dtype = float64\n    - return a ND array with shape [N, H2, W2, C], dtype = int64\n    \"\"\"\n    # get axis size from ndarray shape\n    N, H1, W1, C = a.shape\n    N1, H2, W2, _ = b.shape\n    assets N == N1\n\n    # Do iteration\n    b = b.transpose(0, 3, 1, 2)\n    res = np.empty((N, H2, W2, C), dtype=int64)\n\n    for n in range(N):\n        X, Y = b[n]\n        X_idx , Y_idx = np.floor(X).astype(int64), np.floor(Y).astype(int64)\n        _X, _Y = X - X_idx, Y - Y_idx\n        A00 = a[n, X_idx, Y_idx].transpose(2, 0, 1)\n        A01 = a[n, X_idx, Y_idx + 1].transpose(2, 0, 1)\n        A10 = a[n, X_idx + 1, Y_idx].transpose(2, 0, 1)\n        A11 = a[n, X_idx + 1, Y_idx + 1].transpose(2, 0, 1)\n        res00 = A00 * (1 - _X) * (1 - _Y)\n        res10 = A10 * _X * (1 - _Y)\n        res01 = A01 * (1 - _X) * _Y\n        res11 = A11 * _X * _Y\n        res[n] = res00.transpose(1, 2, 0) + res01.transpose(1, 2, 0) + \\\n                 res10.transpose(1, 2, 0) + res11.transpose(1, 2, 0)\n    return res\n</code></pre> <p>Note</p> <p>\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86 <code>np.transpose</code> \u51fd\u6570\u8fdb\u884c\u77e9\u9635\u8f6c\u7f6e\uff0c\u4f7f\u5f97 <code>X, Y</code> \u80fd\u5bb9\u6613\u5730\u4ece <code>b</code> \u4e2d\u53d6\u51fa\uff0c\u5e76\u4e14\u4f7f\u5f97\u5728\u8fdb\u884c\u77e9\u9635\u9010\u5143\u7d20\u4e58\u6cd5\u65f6\u80fd\u6ee1\u8db3\u5e7f\u64ad\u89c4\u5219\uff0c\u540c\u65f6\u5bf9 <code>C</code> \u4e2a\u901a\u9053\u7684\u4fe1\u606f\u8fdb\u884c\u5904\u7406\u3002</p>"},{"location":"labs/numpy/#step-2","title":"Step 2","text":"<p>\u73b0\u5728\u8003\u8651\u540c\u65f6\u5bf9 <code>N</code> \u5f20\u56fe\u7247\u8fdb\u884c\u5904\u7406\u3002</p> <p>\u5bf9 <code>vectorize1.py</code> \u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u4fee\u6539\u3002</p> <p>\u6211\u4eec\u8981\u5c06 <code>N</code> \u5f20\u56fe\u7247\u7684\u4fe1\u606f\u8fdb\u884c\u6574\u5408\u5904\u7406\uff0c\u4e00\u4e2a\u53ef\u884c\u7684\u65b9\u6cd5\u4e3a\u5728 <code>X, Y</code> \u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e00\u4e2a\u4ee3\u8868\u56fe\u7247\u7d22\u5f15\u7684\u8f74\uff0c\u4f7f\u5176\u5f62\u72b6\u4ece <code>(H2, W2)</code> \u53d8\u4e3a <code>(N, H2, W2)</code> \u3002\u5177\u4f53\u5b9e\u73b0\u5982\u4e0b\uff08 <code>X_idx, Y_idx, _X, _Y</code> \u7684\u83b7\u53d6\u4e00\u5e76\u7ed9\u51fa\uff09\uff1a</p> <pre><code>X, Y = b.transpose(3, 0, 1, 2)\nX_idx , Y_idx = np.floor(X).astype(int64), np.floor(Y).astype(int64)\n_X, _Y = X - X_idx, Y - Y_idx\n</code></pre> <p>\u540c\u7406\uff0c<code>A00, A01, A10, A11</code> \u5747\u9700\u8981\u589e\u52a0\u4e00\u4e2a\u8f74\uff0c\u4e8e\u662f\u65b0\u589e\u4e00\u4e2a\u7d22\u5f15\u6570\u7ec4 <code>N_idx</code> \u5bf9 <code>a</code> \u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u8f74 \uff08 <code>axis = 0</code> \uff09 \u8fdb\u884c\u7d22\u5f15\u3002\u5177\u4f53\u5b9e\u73b0\u5982\u4e0b\uff1a</p> <pre><code>N_idx = np.arange(N).reshape(N, 1, 1)\n\nA00 = a[N_idx, X_idx, Y_idx].transpose(3, 0, 1, 2)\nA01 = a[N_idx, X_idx, Y_idx + 1].transpose(3, 0, 1, 2)\nA10 = a[N_idx, X_idx + 1, Y_idx].transpose(3, 0, 1, 2)\nA11 = a[N_idx, X_idx + 1, Y_idx + 1].transpose(3, 0, 1, 2)\n</code></pre> <p>Note</p> <p><code>N_idx</code> \u7684\u5f62\u72b6\u4e0e <code>X_idx, Y_idx</code> \u5e76\u4e0d\u5339\u914d\uff0c\u4e4b\u6240\u4ee5\u80fd\u591f\u50cf\u8fd9\u6837\u5bf9 <code>a</code> \u6570\u7ec4\u8fdb\u884c fancy indexing \uff0c\u662f\u56e0\u4e3a\u8fdb\u884c\u7d22\u5f15\u7684\u65f6\u5019\u5bf9 <code>N_idx</code> \u7684\u540e\u4e24\u4e2a\u8f74\uff08 <code>axis=1, axis=2</code> \uff09\u8fdb\u884c\u4e86 broadcast \u3002</p> <p>\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a</p> vectorize.py<pre><code>def bilinear_interp_vectorized(a: np.ndarray, b: np.ndarray) -&gt; np.ndarray:\n    \"\"\"\n    This is the vectorized implementation of bilinear interpolation.\n    - a is a ND array with shape [N, H1, W1, C], dtype = int64\n    - b is a ND array with shape [N, H2, W2, 2], dtype = float64\n    - return a ND array with shape [N, H2, W2, C], dtype = int64\n    \"\"\"\n    # get axis size from ndarray shape\n    N, _, _, C = a.shape\n    N1, H2, W2, _ = b.shape\n    assets N == N1\n\n    # Do iteration\n    res = np.empty((N, H2, W2, C), dtype=int64)\n\n    # Get the matrices of coordinates\n    X, Y = b.transpose(3, 0, 1, 2)\n    X_idx , Y_idx = np.floor(X).astype(int64), np.floor(Y).astype(int64)\n    _X, _Y = X - X_idx, Y - Y_idx\n\n    # Generate the indices array\n    N_idx = np.arange(N).reshape(N, 1, 1)\n\n    A00 = a[N_idx, X_idx, Y_idx].transpose(3, 0, 1, 2)\n    A01 = a[N_idx, X_idx, Y_idx + 1].transpose(3, 0, 1, 2)\n    A10 = a[N_idx, X_idx + 1, Y_idx].transpose(3, 0, 1, 2)\n    A11 = a[N_idx, X_idx + 1, Y_idx + 1].transpose(3, 0, 1, 2)\n    res = A00 * (1 - _X) * (1 - _Y) + A01 * (1 - _X) * _Y + \\\n          A10 * _X * (1 - _Y) + A11 * _X * _Y\n    return res.transpose(1, 2, 3, 0).astype(int64)\n</code></pre>"},{"location":"labs/numpy/#_2","title":"\u6b63\u786e\u6027\u4e0e\u52a0\u901f\u6bd4","text":"<p>\u8fd0\u884c <code>main.py</code> \uff0c\u67e5\u770b\u8f93\u51fa\uff1a</p> <pre><code>Generating Data...\nExecuting Baseline Implementation...\nFinished in 99.58129525184631s\nExecuting Vectorized Implementation...\nFinished in 3.138871192932129s\n[PASSED] Results are identical.\nSpeed Up 31.725193272051396x\n</code></pre> <p>\u53ef\u89c1\u8fd0\u884c\u7ed3\u679c\u6b63\u786e\uff0c\u52a0\u901f\u6bd4\u4e3a 31.725193272051396 \u3002</p>"},{"location":"labs/numpy/#reference","title":"Reference","text":"<ul> <li>\u521d\u63a2Numpy\u4e2d\u7684\u82b1\u5f0f\u7d22\u5f15\uff1ahttps://zhuanlan.zhihu.com/p/123858781</li> <li>Numpy\u4e2dtranspose()\u51fd\u6570\u7684\u53ef\u89c6\u5316\u7406\u89e3\uff1ahttps://zhuanlan.zhihu.com/p/61203757</li> <li>NumPy \u4e2d\u6587\u6587\u6863\uff0c\u5e7f\u64ad\uff08Broadcasting\uff09\uff1ahttps://numpy.org.cn/user/basics/broadcasting.html</li> </ul>"},{"location":"labs/pcg/","title":"lab4 PCG Solver","text":""},{"location":"labs/pcg/#_1","title":"\u5b9e\u9a8c\u6b65\u9aa4","text":""},{"location":"labs/pcg/#_2","title":"\u8bbf\u5b58\u4f18\u5316","text":"<p>\u57fa\u51c6\u4ee3\u7801\u4e2d\uff0c\u4e0d\u8fde\u7eed\u7684\u5185\u5b58\u8bbf\u95ee\u5b58\u5728\u4e8e\u5bf9\u77e9\u9635 A \u5bf9\u89d2\u7ebf\u5143\u7d20\u7684\u8bbf\u95ee\u4e2d\uff0c\u901a\u8fc7\u5c06 A \u5bf9\u89d2\u7ebf\u5143\u7d20\u9884\u5148\u53d6\u51fa\u5b58\u653e\u5230\u8fde\u7eed\u7684\u5185\u5b58\u4e2d\uff0c\u63d0\u9ad8\u8bbf\u5b58\u6548\u7387\u3002</p>"},{"location":"labs/pcg/#openmp","title":"\u7ebf\u7a0b\u7ea7\u5e76\u884c\uff08OpenMP\uff09","text":"<p>\u4f7f\u7528 OpenMP \u5c06\u5faa\u73af\u5e76\u884c\u5316\u3002</p> <p>\u5bf9\u4e8e\u5faa\u73af\u4f53\u4e4b\u95f4\u65e0\u4f9d\u8d56\u7684\u8fed\u4ee3\uff0c\u5728\u5faa\u73af\u524d\u6dfb\u52a0\u5982\u4e0b\u6307\u4ee4\u4f7f\u5176\u5e76\u884c\u5316\uff1a</p> <pre><code>#pragma omp parallel for schedule(static)\n</code></pre> <p>\u5bf9\u4e8e\u8fdb\u884c\u7d2f\u52a0\u64cd\u4f5c\u7684\u8fed\u4ee3\uff0c\u4f7f\u7528\u5f52\u7ea6 (reduction) \u4f7f\u5176\u5e76\u884c\u5316\uff08\u5bf9 <code>sum</code> \u8fdb\u884c\u7d2f\u52a0\uff09\uff1a</p> <pre><code>#pragma omp parallel for reduction(+:sum) schedule(static)\n</code></pre> <p>\u5e76\u4e14\u4f7f\u7528 <code>static</code> \u8c03\u5ea6\u65b9\u5f0f\uff0c\u4f7f\u5404\u4e2a\u5757\u5305\u542b\u7684\u8fed\u4ee3\u6b21\u6570\u5e73\u5747\u3002</p>"},{"location":"labs/pcg/#mpi","title":"\u8fdb\u7a0b\u7ea7\u5e76\u884c\uff08MPI\uff09","text":"<p>\u4f7f\u7528 MPI \u5f00\u542f\u4e0d\u540c\u8fdb\u7a0b\u8fdb\u884c\u5e76\u884c\u8ba1\u7b97\u3002</p> <p>\u6574\u4f53\u601d\u8def\u4e3a\uff1a\u6839\u8fdb\u7a0b\u5728\u8ba1\u7b97\u5f00\u59cb\u524d\u5c06\u77e9\u9635 A \u548c\u6570\u7ec4 b \u5e7f\u64ad\u7ed9\u5404\u4e2a\u8fdb\u7a0b\uff0c\u5c06 <code>MatrixMulVec</code> \u51fd\u6570\u4e2d\u7684\u77e9\u9635\u4e0e\u5411\u91cf\u76f8\u4e58\u8fd0\u7b97\u5206\u53d1\u7ed9\u5404\u4e2a\u8fdb\u7a0b\u8fdb\u884c\u8ba1\u7b97\uff0c\u8ba1\u7b97\u5b8c\u6bd5\u4e4b\u540e\u5c06\u5404\u4e2a\u8fdb\u7a0b\u7ed3\u679c\u8fdb\u884c\u5408\u5e76\u5e76\u4e14\u5e7f\u64ad\uff0c\u5176\u4f59\u90e8\u5206\u5404\u4e2a\u8fdb\u7a0b\u72ec\u7acb\u8ba1\u7b97\u3002</p> <p>\u91c7\u7528\u4e0a\u8ff0\u65b9\u5f0f\uff0c\u5c3d\u91cf\u907f\u514d\u901a\u4fe1\u5e26\u6765\u8fc7\u5927\u7684\u5f00\u9500\uff0c\u5e76\u4e14\u5c3d\u91cf\u52a0\u901f\u65f6\u95f4\u6d88\u8017\u6700\u5927\u7684\u77e9\u9635\u4e0e\u5411\u91cf\u76f8\u4e58\u8fd0\u7b97\u3002</p> <p>\u6e90\u4ee3\u7801\u53ca <code>Makefile</code> \u6587\u4ef6\u4f4d\u4e8e\u5f53\u524d\u76ee\u5f55\u4e0b <code>pcg_c</code> \u6587\u4ef6\u5939\u5185\u3002</p> <p>Note</p> <p>\u5176\u4e2d <code>Makefile</code> \u6587\u4ef6\u8fdb\u884c\u4e86\u4e24\u5904\u66f4\u6539\uff1a</p> Makefile<pre><code>CC = mpiicc\nCFLAGS = -qopenmp -O3\n</code></pre> <p>\u4f7f\u7528 Intel \u63d0\u4f9b\u7684\u7f16\u8bd1\u5668 <code>mpiicc</code> \u3002</p> <p>\u6839\u636e\u5b98\u65b9\u6587\u6863\uff0c\u6dfb\u52a0 <code>-qopenmp</code> \u7f16\u8bd1\u9009\u9879\u542f\u7528 OpenMP \u3002</p> <p>\u4f7f\u7528 4 \u8282\u70b9 8 \u4efb\u52a1\u5bf9\u4e09\u7ec4\u8f93\u5165\u8fdb\u884c\u6d4b\u8bd5\uff0c\u4f7f\u7528 <code>sbatch</code> \u63d0\u4ea4\u5982\u4e0b\u811a\u672c\uff1a</p> job.sh<pre><code>#!/bin/bash\n#SBATCH -o out.txt\n#SBATCH -N 4\n#SBATCH -n 8\n#SBATCH --exclusive\n#SBATCH --cpus-per-task 12\nsource /opt/intel/oneapi/setvars.sh\nulimit -s unlimited\nmpirun ./pcg input_2.bin | grep -v 'mpool' | grep -v 'ib_md'\n</code></pre> <p>\u7ed3\u679c\u5206\u522b\u7528\u65f6 3.97 s \u300117.48 s\u300191.90 s \u3002</p>"},{"location":"labs/pcg/#profile","title":"Profile","text":"<p>\u4ee5\u8f93\u5165 <code>input_2.bin</code> \u4e3a\u4f8b\uff0c\u4f7f\u7528 <code>Intel Trace Analyzer and Collector</code> \u8fdb\u884c\u6027\u80fd\u5206\u6790\u3002</p> <p></p> <p>\u7531\u56fe\u53ef\u5f97\uff0c\u8017\u65f6\u6700\u591a\u7684\u4e09\u4e2a <code>MPI</code> \u51fd\u6570\u5206\u522b\u4e3a <code>MPI_Allgather</code> \u3001 <code>MPI_Bcast</code> \u3001 <code>MPI_Comm_rank</code> \u3002</p> <p></p> <p>\u53ef\u5f97\u7a0b\u5e8f\u6d88\u8017\u7684\u603b\u65f6\u95f4\u4e3a 103 s \uff0c\u5176\u4e2d\u6d88\u8017\u5728 <code>MPI</code> \u4e0a\u7684\u603b\u65f6\u95f4\u4e3a 37.9 s \u3002</p> <p>\u6253\u5f00\u4e8b\u4ef6\u65f6\u95f4\u8f74 (Event Timeline) \u53ef\u4ee5\u770b\u5230\u5404\u4e2a\u8fdb\u7a0b\u7684\u8fd0\u884c\u60c5\u51b5\uff1a</p> <p></p> <p>\u7531\u56fe\u53ef\u5f97\uff0c\u7a0b\u5e8f\u4e00\u5171\u5f00\u542f\u4e86 8 \u4e2a\u8fdb\u7a0b\uff0c\u8c03\u7528 <code>MPI</code> \u7684\u5f00\u9500\u4e3b\u8981\u7684\u4f4d\u4e8e\u6bcf\u6b21\u8fdb\u5165 <code>PCG</code> \u51fd\u6570\u65f6\u8c03\u7528 <code>MPI_Bcast</code> \u51fd\u6570\u3002</p> <p>\u622a\u53d6\u4e00\u5c0f\u6bb5\u65f6\u95f4\u8f74\u8fdb\u884c\u653e\u5927\uff0c\u53ef\u4ee5\u5f97\u77e5\u5728\u4e00\u6b21 <code>PCG</code> \u51fd\u6570\u7684\u8c03\u7528\u4e2d\uff0c<code>MPI_Allgather</code> \u51fd\u6570\u88ab\u8c03\u7528\u4e86\u591a\u6b21\uff1a</p> <p></p> <p>\u6b64\u5916\uff0c\u53f3\u952e\u4e0b\u65b9\u7684 <code>Group MPI</code> \u9009\u62e9 <code>Ungroup MPI</code> \uff0c\u53ef\u4ee5\u770b\u5230\u5404\u4e2a <code>MPI</code> \u51fd\u6570\u7684\u8c03\u7528\u6b21\u6570\u53ca\u65f6\u95f4\u6d88\u8017\uff1a</p> <p></p>"},{"location":"labs/pcg/#bonus","title":"Bonus","text":"<p>\u4f7f\u7528 Fortran \u5b8c\u6210\u5b9e\u9a8c\u3002</p> <p>\u6e90\u4ee3\u7801\u53ca <code>Makefile</code> \u6587\u4ef6\u4f4d\u4e8e\u5f53\u524d\u76ee\u5f55\u4e0b <code>pcg_fortran</code> \u6587\u4ef6\u5939\u5185\u3002</p> <p>Note</p> <p><code>Makefile</code> \u6587\u4ef6\u5982\u4e0b\uff1a</p> Makefile<pre><code>CC = mpiicc\nCF = mpiifort\nCFLAGS = -qopenmp -O3\n\n.PHONY = pcg\n\npcg: main.o judge.o pcg.o\n    $(CF) $(CFLAGS) $^ -o $@\n\njudge.o: judge.c judge.h\n    $(CC) $(CFLAGS) -c judge.c -o judge.o\n\nmain.o: main.f90\n    $(CF) $(CFLAGS) -c main.f90 -o main.o\n\npcg.o: pcg.f90\n    $(CF) $(CFLAGS) -c pcg.f90 -o pcg.o\n\nclean:\n    rm -f judge.o main.o pcg.o pcg\n</code></pre> <p>\u4f7f\u7528\u7684 Fortran \u7f16\u8bd1\u5668\u4e3a Intel \u63d0\u4f9b\u7684 <code>mpiifort</code> \u3002</p> <p>\u5c06 <code>pcg.f90</code> \u3001 <code>main.f90</code> \u3001 <code>judge.c</code> \u5206\u522b\u7f16\u8bd1\u6c47\u7f16\u4e3a <code>.o</code> \u6587\u4ef6\u540e\uff0c\u518d\u8fdb\u884c\u94fe\u63a5\u5f62\u6210\u53ef\u6267\u884c\u6587\u4ef6 <code>pcg</code> \u3002</p> <p>\u4ee5\u4f7f\u7528 4 \u8282\u70b9 8 \u4efb\u52a1\u5bf9\u4e09\u7ec4\u8f93\u5165\u8fdb\u884c\u6d4b\u8bd5\uff0c\u4f7f\u7528 <code>sbatch</code> \u63d0\u4ea4\u5982\u4e0b\u811a\u672c\uff1a</p> job.sh<pre><code>#!/bin/bash\n#SBATCH -o out.txt\n#SBATCH -N 4\n#SBATCH -n 8\n#SBATCH --exclusive\n#SBATCH --cpus-per-task 12\nsource /opt/intel/oneapi/setvars.sh\nulimit -s unlimited\nmpirun ./pcg input_2.bin | grep -v 'mpool' | grep -v 'ib_md'\n</code></pre> <p>\u4ee5 <code>input_2.bin</code> \u4e3a\u4f8b\uff0cFortran \u7528\u65f6 45.75 s \uff0cC \u7528\u65f6 17.48 s \u3002\uff08\u8fd8\u6ca1\u5f04\u6e05\u695a\u4e3a\u4ec0\u4e48\u76f8\u5dee\u8fd9\u4e48\u591a\uff09</p> <p>\u4f7f\u7528 C \u5b9e\u73b0\u53c2\u4e0e\u6392\u540d\u8ba1\u7b97\u5206\u6570\u3002</p>"},{"location":"labs/pcg/#reference","title":"Reference","text":"<ul> <li>MPI Tutorials</li> <li>Open MPI Documentation</li> <li>Get Started with Intel\u00ae Trace Analyzer and Collector</li> <li>Fortran \u5feb\u901f\u5165\u95e8\u6559\u7a0b</li> <li>Fortran \u7528\u6237\u6307\u5357</li> <li>Using OpenMP with Fortran</li> </ul>"},{"location":"labs/simd/","title":"lab2.5 \u624b\u5199 SIMD \u5411\u91cf\u5316","text":""},{"location":"labs/simd/#_1","title":"\u601d\u8def","text":"<p>\u9996\u5148\u5206\u6790\u9700\u8981\u5411\u91cf\u5316\u7684\u90e8\u5206\uff1a</p> <pre><code>for (int i = 0; i &lt; MAXN; ++i)\n{\n    c[i] += a[i] * b[i];\n}\n</code></pre> <p>\u53ef\u4ee5\u5206\u4e3a\u4e09\u4e2a\u90e8\u5206\uff1a</p> <ul> <li>\u9700\u8981\u8ba1\u7b97\u7684\u6570\u636e\uff1a <code>a[i], b[i], c[i]</code> \u3002</li> <li>\u8ba1\u7b97\u64cd\u4f5c\uff1a <code>tmp = a[i] * b[i]</code> \u548c <code>c[i] = c[i] + tmp</code> \u3002</li> </ul> <p>\u4e8e\u662f\u6839\u636e\u5411\u91cf\u5316\u7684\u57fa\u672c\u6d41\u7a0b\uff0c\u5927\u81f4\u9700\u8981\u51e0\u4e2a\u64cd\u4f5c\uff1a</p> <ul> <li>Load <code>a, b, c</code> \u5230 <code>__m256</code> \u7c7b\u578b\u53d8\u91cf <code>A, B, C</code> \u3002</li> <li>\u4ee4 <code>C = C + A * B</code> \u3002\uff08\u6b64\u5904\u8fd0\u7b97\u7b26\u53ea\u4ee3\u8868\u64cd\u4f5c\u7684\u542b\u4e49\uff09</li> <li>\u5c06 <code>C</code> \u7684\u6570\u636e\u5b58\u56de <code>float</code> \u6570\u7ec4 <code>c</code> \u4e2d \u3002</li> </ul> <p>\u5982\u4f55\u5b9e\u73b0\uff1f</p> <p>Load \u64cd\u4f5c\uff1a</p> <code>__m256 _mm256_loadu_ps (float const * mem_addr)</code> <p>\u4ece <code>mem_addr</code> \u6307\u5411\u7684\u5185\u5b58\u5730\u5740\u4e2d load 256 \u4f4d\uff088 \u4e2a <code>float</code> \u5143\u7d20\uff09\u7684\u6570\u636e\u5230\u5411\u91cf\u5bc4\u5b58\u5668\u3002</p> <p>\u8ba1\u7b97\u64cd\u4f5c\uff1a</p> <code>__m256 _mm256_mul_ps (__m256 a, __m256 b)</code> <p>\u8ba1\u7b97 <code>a</code> \u548c <code>b</code> \u4e2d <code>float</code> \u5143\u7d20\u9010\u4f4d\u76f8\u4e58\u7684\u7ed3\u679c\u3002</p> <code>__m256 _mm256_add_ps (__m256 a, __m256 b)</code> <p>\u8ba1\u7b97 <code>a</code> \u548c <code>b</code> \u4e2d <code>float</code> \u5143\u7d20\u9010\u4f4d\u76f8\u52a0\u7684\u7ed3\u679c\u3002</p> <p>Store \u64cd\u4f5c\uff1a</p> <code>void _mm256_storeu_ps (float * mem_addr, __m256 a)</code> <p>\u5c06 <code>a</code> \u4e2d\u7684 256 \u4f4d\uff088 \u4e2a <code>float</code> \u5143\u7d20\uff09\u7684\u6570\u636e store \u5230 <code>mem_addr</code> \u6307\u5411\u7684\u5185\u5b58\u5730\u5740\u4e2d\u3002</p> <p>\u4e8e\u662f\u5c31\u53ef\u4ee5\u5199\u51fa\u5411\u91cf\u5316\u7684\u4ee3\u7801\u4e86\uff1a</p> <pre><code>#define LEN (MAXN / 8)\nfor (int i = 0; i &lt; LEN; ++i) {\n    __m256 A, B, C;\n\n    // Load data\n    A = _mm256_loadu_ps(a + i * 8);\n    B = _mm256_loadu_ps(b + i * 8);\n    C = _mm256_loadu_ps(c + i * 8);\n\n    // Calculate\n    C = _mm256_add_ps(C, _mm256_mul_ps(A, B));\n\n    // Store data\n    _mm256_storeu_ps(c + i * 8, C);\n}\n</code></pre> <p>Note</p> <p>\u7531\u4e8e <code>__m256</code> \u7c7b\u578b\u53d8\u91cf\u53ea\u80fd\u540c\u65f6\u64cd\u4f5c 256 \u4f4d\u6570\u636e\uff0c\u5373 8 \u4e2a <code>float</code> \uff0c\u5411\u91cf\u5316\u65f6\u9700\u5bf9\u6bcf 8 \u4e2a\u6570\u636e\u8fdb\u884c\u4e00\u6b21\u5411\u91cf\u5316</p>"},{"location":"labs/simd/#_2","title":"\u6b63\u786e\u6027\u548c\u52a0\u901f\u6bd4","text":"<p>\u7f16\u8bd1\u8fd0\u884c <code>add.cpp</code> \uff0c\u7a0b\u5e8f\u8f93\u51fa\uff1a</p> <pre><code>time=1.916000\nCheck Passed\n</code></pre> <p>\u5411\u91cf\u5316\u540e\u8ba1\u7b97\u7ed3\u679c\u6b63\u786e\uff0c\u52a0\u901f\u6bd4\u4e3a 1.916 \u3002</p>"},{"location":"labs/simd/#_3","title":"\u6c47\u7f16\u4ee3\u7801\u5206\u6790","text":"<p>\u5229\u7528 godbolt \u8fdb\u884c\u6c47\u7f16\u4ee3\u7801\u5206\u6790\u3002</p> <p>\u5411\u91cf\u5316\u524d\uff0c\u9700\u8981\u5411\u91cf\u5316\u7684\u4ee3\u7801\u90e8\u5206\u7684\u6c47\u7f16\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>...\n        mov     DWORD PTR [rbp-20], 0\n        jmp     .L11\n.L12:\n        mov     eax, DWORD PTR [rbp-20]\n        cdqe\n        vmovss  xmm1, DWORD PTR c[0+rax*4]\n        mov     eax, DWORD PTR [rbp-20]\n        cdqe\n        vmovss  xmm2, DWORD PTR a[0+rax*4]\n        mov     eax, DWORD PTR [rbp-20]\n        cdqe\n        vmovss  xmm0, DWORD PTR b[0+rax*4]\n        vmulss  xmm0, xmm2, xmm0\n        vaddss  xmm0, xmm1, xmm0\n        mov     eax, DWORD PTR [rbp-20]\n        cdqe\n        vmovss  DWORD PTR c[0+rax*4], xmm0\n        add     DWORD PTR [rbp-20], 1\n.L11:\n        cmp     DWORD PTR [rbp-20], 99999999\n        jle     .L12\n...\n</code></pre> <p>\u53ef\u77e5\uff0c<code>for</code> \u5faa\u73af\u5185\u90e8\u7684\u4ee3\u7801\u88ab\u987a\u6b21\u6267\u884c\u4e86 <code>MAXN</code> \u6b21\uff0c\u6bcf\u6b21\u53ea\u5bf9 1 \u7ec4\u6570\u636e\uff08 <code>a[i], b[i], c[i]</code> \uff09 \u8fdb\u884c\u64cd\u4f5c\u3002</p> <p>\u5411\u91cf\u5316\u540e\uff0c\u88ab\u5411\u91cf\u5316\u7684\u4ee3\u7801\u90e8\u5206\u7684\u6c47\u7f16\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>...\n        mov     DWORD PTR [rbp-36], 0\n        jmp     .L11\n.L17:\n        mov     eax, DWORD PTR [rbp-36]\n        sal     eax, 3\n        cdqe\n        sal     rax, 2\n        add     rax, OFFSET FLAT:a\n        mov     QWORD PTR [rbp-392], rax\n        mov     rax, QWORD PTR [rbp-392]\n        vmovups ymm0, YMMWORD PTR [rax]\n        vmovaps YMMWORD PTR [rbp-112], ymm0\n        mov     eax, DWORD PTR [rbp-36]\n        sal     eax, 3\n        cdqe\n        sal     rax, 2\n        add     rax, OFFSET FLAT:b\n        mov     QWORD PTR [rbp-384], rax\n        mov     rax, QWORD PTR [rbp-384]\n        vmovups ymm0, YMMWORD PTR [rax]\n        vmovaps YMMWORD PTR [rbp-144], ymm0\n        mov     eax, DWORD PTR [rbp-36]\n        sal     eax, 3\n        cdqe\n        sal     rax, 2\n        add     rax, OFFSET FLAT:c\n        mov     QWORD PTR [rbp-376], rax\n        mov     rax, QWORD PTR [rbp-376]\n        vmovups ymm0, YMMWORD PTR [rax]\n        vmovaps YMMWORD PTR [rbp-176], ymm0\n        vmovaps ymm0, YMMWORD PTR [rbp-112]\n        vmovaps YMMWORD PTR [rbp-336], ymm0\n        vmovaps ymm0, YMMWORD PTR [rbp-144]\n        vmovaps YMMWORD PTR [rbp-368], ymm0\n        vmovaps ymm0, YMMWORD PTR [rbp-336]\n        vmulps  ymm0, ymm0, YMMWORD PTR [rbp-368]\n        vmovaps ymm1, YMMWORD PTR [rbp-176]\n        vmovaps YMMWORD PTR [rbp-272], ymm1\n        vmovaps YMMWORD PTR [rbp-304], ymm0\n        vmovaps ymm0, YMMWORD PTR [rbp-272]\n        vaddps  ymm0, ymm0, YMMWORD PTR [rbp-304]\n        vmovaps YMMWORD PTR [rbp-176], ymm0\n        mov     eax, DWORD PTR [rbp-36]\n        sal     eax, 3\n        cdqe\n        sal     rax, 2\n        add     rax, OFFSET FLAT:c\n        mov     QWORD PTR [rbp-184], rax\n        vmovaps ymm0, YMMWORD PTR [rbp-176]\n        vmovaps YMMWORD PTR [rbp-240], ymm0\n        vmovaps ymm0, YMMWORD PTR [rbp-240]\n        mov     rax, QWORD PTR [rbp-184]\n        vmovups YMMWORD PTR [rax], ymm0\n        nop\n        add     DWORD PTR [rbp-36], 1\n.L11:\n        cmp     DWORD PTR [rbp-36], 12499999\n        jle     .L17\n...\n</code></pre> <p>\u53ef\u77e5\u7a0b\u5e8f\u4f7f\u7528\u4e86 <code>vmoups</code> \u7b49\u6c47\u7f16\u6307\u4ee4\u548c 256 \u4f4d\u5bc4\u5b58\u5668 <code>ymm0, ymm1</code> \uff0c\u540c\u65f6\u5bf9 8 \u7ec4 <code>float</code> \u7c7b\u578b\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\uff0c\u5faa\u73af\u6b21\u6570\u51cf\u5c11\u5230 <code>MAXN / 8</code> \u6b21\u3002</p>"},{"location":"labs/simd/#reference","title":"Reference","text":"<ul> <li>Intel\u00ae Intrinsics Guide\uff1ahttps://www.intel.com/content/www/us/en/docs/intrinsics-guide/index.html</li> <li>n\u65b9\u8fc7\u767e\u4e07 \u66b4\u529b\u78be\u6807\u7b97\u2014\u2014\u6307\u4ee4\u96c6\u4f18\u5316\u7684\u57fa\u7840\u4f7f\u7528\uff1ahttps://www.luogu.com.cn/blog/ouuan/avx-optimize</li> <li>\u6c47\u7f16\u8bed\u8a00\u7b14\u8bb0\uff08\u516d\uff09\u2014\u2014SIMD\u6307\u4ee4\uff1ahttps://zhuanlan.zhihu.com/p/424475308</li> </ul>"},{"location":"math/","title":"Math","text":"<p>Info</p> <p>\u8fd9\u91cc\u662f\u4e0a\u8fc7\u7684\u4e00\u4e9b\u6570\u5b66\u8bfe\u7684\u7b14\u8bb0\u3002</p> <p>\u7531\u4e8e\u672c\u4eba\u662f\u6570\u5b66\u82e6\u624b\uff0c\u6240\u4ee5\u4ec5\u6709\u5fc5\u4fee\u7684\u6570\u5b66\u8bfe\u53ef\u80fd\u4f1a\u5199\u7b14\u8bb0\uff0c\uff08\u53ef\u80fd\u6709\u4e14\u53ea\u4f1a\u6709\u6982\u7387\u8bba\uff09\uff08\u6570\u5b66\u5206\u6790\u548c\u7ebf\u6027\u4ee3\u6570\u56db\u95e8\u8bfe\u5728\u54ea\u513f\u5462\uff1f\uff09\uff08\u662f\u554a\u600e\u4e48\u56de\u4e8b\u5462\uff0c\u8003\u8bd5\u5468\u4f60\u6709\u4ec0\u4e48\u5934\u7eea\u5417\uff09</p>"},{"location":"math/prob_theory/","title":"\u6982\u7387\u8bba","text":"<p>Info</p> <p>\u672c\u6587\u6863\u4e3a \u6982\u7387\u8bba\uff08H\uff09 \u7684\u5b66\u4e60\u7b14\u8bb0\uff0c\u6388\u8bfe\u6559\u5e08\u4e3a \u82cf\u4e2d\u6839 \u3002</p> <p>\u5927\u4f53\u6846\u67b6\u57fa\u672c\u662f\u7167\u7740\u82cf\u4e2d\u6839\u8001\u5e08\u7684\u6388\u8bfe\u987a\u5e8f\u5199\u7684\uff0c\u987a\u5e8f\u53ef\u80fd\u548c\u4e66\u4e0a\u4e0d\u4e00\u6837\u3002</p> <p>\u9664\u4e86\u8bfe\u4ef6\u91cc\u7684\u4e00\u4e9b\u5b9a\u4e49\u548c\u5b9a\u7406\uff0c\u6211\u8fd8\u8865\u5168\u4e86\u4e00\u4e9b\u5bf9\u4e8e\u6211\u6765\u8bf4\u4e0d\u592a\u80fd\u663e\u7136\u5f97\u5230\u7684\u8fc7\u7a0b\uff08\u5982\u679c\u89c9\u5f97\u6709\u4e9b\u5730\u65b9\u7684\u8fc7\u7a0b\u8fd8\u662f\u4e0d\u663e\u7136\uff0c\u6b22\u8fce\u8054\u7cfb\u6211\u8865\u5145\uff09\u3002</p>"},{"location":"math/prob_theory/chapter1/","title":"\u4e8b\u4ef6\u53ca\u5176\u6982\u7387","text":""},{"location":"math/prob_theory/chapter1/#_2","title":"\u968f\u673a\u4e8b\u4ef6\u548c\u6982\u7387","text":""},{"location":"math/prob_theory/chapter1/#_3","title":"\u968f\u673a\u73b0\u8c61","text":"<p>\u968f\u673a\u73b0\u8c61\uff1a\u786e\u5b9a\u6027\u73b0\u8c61\u3001\u968f\u673a\u73b0\u8c61\uff08\u4e0d\u786e\u5b9a\u6027\u73b0\u8c61\uff09\u3002</p> <p>\u968f\u673a\u73b0\u8c61\u57fa\u672c\u5c5e\u6027\uff1a</p> <ul> <li>\u53ef\u91cd\u590d\u8fdb\u884c\u6216\u91cd\u590d\u89c2\u5bdf\uff08\u5b9a\u6027\uff09</li> <li>\u8bd5\u9a8c\u4e4b\u524d\u4e0d\u77e5\u9053\u4f1a\u51fa\u73b0\u4f55\u79cd\u7ed3\u679c\uff08\u5b9a\u6027\uff09</li> <li>\u6240\u6709\u53ef\u80fd\u7684\u7ed3\u679c\u662f\u5df2\u77e5\u7684\uff08\u5b9a\u91cf\uff09</li> </ul>"},{"location":"math/prob_theory/chapter1/#_4","title":"\u6837\u672c\u7a7a\u95f4","text":"<p>\u6837\u672c\u7a7a\u95f4\uff1a\u968f\u673a\u73b0\u8c61\u6240\u6709\u53ef\u80fd\u7684\u7ed3\u679c \\(\\Omega\\).</p> <p>\u6837\u672c\u70b9\uff1a\u6bcf\u4e00\u4e2a\u7ed3\u679c \\(\\omega \\in \\Omega\\).</p>"},{"location":"math/prob_theory/chapter1/#_5","title":"\u4e8b\u4ef6","text":"<p>\u4e8b\u4ef6\uff1a\u5177\u6709\u67d0\u79cd\u5c5e\u6027\u7684\u57fa\u672c\u7ed3\u679c\u6784\u6210\u4e8b\u4ef6\uff0c\u901a\u5e38\u7528 \\(A, B, C\\) \u8868\u793a.</p> <p>\u4e8b\u4ef6\u7684\u53d1\u751f\uff1a\u67d0\u6b21\u8bd5\u9a8c\u7684\u7ed3\u679c \\(\\omega \\in A\\) \u5219 \\(A\\) \u53d1\u751f\uff0c\u5426\u5219\u4e0d\u53d1\u751f.</p>"},{"location":"math/prob_theory/chapter1/#_6","title":"\u6982\u7387","text":"<p>\u6982\u7387\uff1a\u4e8b\u4ef6 \\(A\\) \u53d1\u751f\u7684\u6982\u7387 \\(P(A)\\).</p> <p>\u6982\u7387\u7684\u8ba1\u7b97\uff1a</p> <ul> <li>\u7269\u7406\u65b9\u6cd5</li> <li>\u7edf\u8ba1\u65b9\u6cd5\uff1a\u9891\u7387\u4f30\u8ba1\u6982\u7387.</li> </ul> <p>\u6982\u7387\u7684\u5b9a\u4e49\u548c\u91cf\u5316\uff1a</p> <ul> <li>\u4e3b\u89c2\u6982\u7387\uff1a\u57fa\u4e8e\u5df2\u6709\u77e5\u8bc6\u548c\u4fe1\u606f\u7684\u4e00\u79cd\u4fe1\u4ef0\u6216\u5224\u65ad</li> <li>\u7ecf\u9a8c\u6982\u7387\uff08\u7edf\u8ba1\uff09\uff1a\u901a\u8fc7\u968f\u673a\u6d4b\u8bd5\uff08\u4f8b\uff1a\u629b\u63b7\u786c\u5e01\uff0c\u9891\u7387\u63a8\u7b97\u6982\u7387\uff09</li> <li>\u516c\u7406\u5316\u4f53\u7cfb\uff1a\u4e25\u683c\u903b\u8f91\u63a8\u7406</li> </ul> <p>\u5173\u4e8e\u7edf\u8ba1\u65b9\u6cd5</p> <ul> <li>\u7edf\u8ba1\u65b9\u6cd5\u5177\u4f53\u3001\u53ef\u8ba1\u7b97</li> <li>\u7edf\u8ba1\u65b9\u6cd5\u7684\u57fa\u672c\u51fa\u53d1\u70b9\uff1a\u9891\u7387\u6781\u9650\u5b58\u5728\u4e14\u4e0d\u4f9d\u8d56\u4e8e\u5177\u4f53\u7684\u8bd5\u9a8c\u73af\u5883</li> <li>\u9891\u7387\u7684\u6781\u9650\u662f\u6982\u7387\uff1aBernoulli \u548c Borel \u6570\u5b66\u8bc1\u660e</li> </ul> <p>\u6982\u7387\u8bba\u4e3b\u8981\u76ee\u7684\uff1a\u8ba1\u7b97\u968f\u673a\u4e8b\u4ef6\u7684\u6982\u7387.</p> <p>\u4e8b\u4ef6\u7684\u8fd0\u7b97</p> <p>\u548c\u96c6\u5408\u8fd0\u7b97\u7c7b\u4f3c\uff0c\u6ce8\u610f\u672f\u8bed\u4f7f\u7528\u3002</p> <ul> <li>\\(\\emptyset\\) \uff0c\u4e0d\u53ef\u80fd\u4e8b\u4ef6.</li> <li>\\(\\Omega\\) \uff0c\u5fc5\u7136\u4e8b\u4ef6.</li> <li>\\(A \\subseteq B\\) \uff0c\\(A\\) \u53d1\u751f\u5219 \\(B\\) \u4e00\u5b9a\u53d1\u751f.</li> <li>\\(A \\cap B \\ \\text{or} \\ AB\\) \uff0c\\(A\\) \u548c \\(B\\) \u540c\u65f6\u53d1\u751f.</li> <li>\\(A \\cup B\\) \uff0c\\(A\\) \u6216\u8005 \\(B\\) \u53d1\u751f.</li> <li>\\(\\bar A\\) \uff0c\\(A\\) \u7684\u5bf9\u7acb\u4e8b\u4ef6.</li> <li>\\(A \\setminus B\\) \uff0c\\(A\\) \u53d1\u751f\u4f46 \\(B\\) \u4e0d\u53d1\u751f.</li> <li>\\(A \\cap B = \\emptyset\\) \uff0c\\(A, B\\) \u4e92\u4e0d\u76f8\u4ea4\uff0c\u5199\u4f5c \\(A \\cup B = A + B\\).</li> <li>\\(\\text{De Morgan}\\) \u5bf9\u5076\u8fd0\u7b97\u539f\u7406\uff1a\\(\\overline{(\\cap A_n)} = \\cup \\bar A_n, \\overline{(\\cup A_n)} = \\cap\\bar A_n\\).</li> </ul>"},{"location":"math/prob_theory/chapter1/#_7","title":"\u6982\u7387\u8fd0\u7b97\u7684\u57fa\u672c\u6027\u8d28","text":"<ul> <li>\\(P(\\emptyset) = 0, P(\\Omega) = 1\\)</li> <li>\\(P(\\bar A) = 1 - P(A)\\)</li> <li>\\(A \\cap B = \\emptyset\\)\uff0c\u5219</li> </ul> \\[ P(A + B) = P(A) + P(B) \\] <ul> <li>\u82e5 \\(A_1, \\cdots, A_m\\) \u4e92\u4e0d\u76f8\u4ea4\uff0c\u5219</li> </ul> \\[ P(\\sum_{k=1}^{m}A_k) = \\sum_{k=1}^{m}P(A_k) \\]"},{"location":"math/prob_theory/chapter1/#_8","title":"\u57fa\u672c\u6982\u7387\u6a21\u578b","text":"<p>\u6982\u7387\u6a21\u578b\uff1a\u968f\u673a\u73b0\u8c61\u7684\u6570\u5b66\u63cf\u8ff0\uff0c\u5305\u62ec\u6837\u672c\u7a7a\u95f4\u3001\u4e8b\u4ef6\u3001\u6bcf\u4e2a\u4e8b\u4ef6\u7684\u6982\u7387\u5927\u5c0f\u3002</p>"},{"location":"math/prob_theory/chapter1/#_9","title":"\u53e4\u5178\u6982\u7387\u6a21\u578b","text":"<p>\u6a21\u578b\u7279\u5f81\uff1a</p> <ul> <li>\u6709\u9650\u4e2a\u57fa\u672c\u7ed3\u679c</li> <li>\u6bcf\u4e2a\u7ed3\u679c\u7b49\u53ef\u80fd\u53d1\u751f</li> </ul> <p>\u6570\u5b66\u63cf\u8ff0\uff1a</p> \\[ \\begin{align}     \\Omega = \\{\\omega_1, \\dots, \\omega_N\\}, \\quad N &lt; \\infty \\\\     P(\\{\\omega_i\\}) = \\frac{1}{N}, \\quad i = 1, 2, \\dots, N \\end{align} \\] <p>\u4e8b\u4ef6 A \u7684\u6982\u7387\uff1a \\(P(A) = \\displaystyle\\frac{|A|}{N}\\) \uff0c\u5176\u4e2d \\(|A|\\) \u4e3a\u4e8b\u4ef6\u5305\u542b\u57fa\u672c\u7ed3\u679c\u6570\u3002</p> <p>\u5bf9\u4e8e\u53e4\u5178\u6982\u7387\u6a21\u578b\uff0c\u5173\u952e\u5728\u4e8e\u8ba1\u7b97 \\(N\\) \u548c \\(|A|\\) \u3002</p> <p>\u8ba1\u7b97\u6280\u5de7</p> <ul> <li>\u4e58\u6cd5\u539f\u7406</li> <li>\u6392\u5217\u7ec4\u5408</li> </ul> <p>\u5e38\u7528\u5173\u7cfb\u5f0f\uff1a</p> \\[ \\begin{array}{ccc}     \\displaystyle P_{N}^{k} = N(N-1)\\dots (N-k+1) = \\frac{N!}{k!} \\\\     \\displaystyle {N \\choose k} = \\frac{P_N^k}{k!} \\\\     \\displaystyle {N \\choose k} + {N \\choose k-1} = {N+1 \\choose k} \\\\     \\displaystyle N! \\sim \\sqrt{2\\pi N} e^{-N} N^N, \\quad N \\rightarrow \\infty \\end{array} \\]"},{"location":"math/prob_theory/chapter1/#_10","title":"\u51e0\u4f55\u6982\u7387\u6a21\u578b","text":"<p>\u6a21\u578b\u7279\u5f81\uff1a\u6837\u672c\u7a7a\u95f4\u662f\u4e00\u4e2a\u533a\u57df\uff0c\u6240\u6709\u57fa\u672c\u7ed3\u679c\u7b49\u53ef\u80fd\u53d1\u751f\u3002</p> <ul> <li>\u57fa\u672c\u7ed3\u679c\u4e0d\u53ef\u6570\uff0c\u4e14 \\(\\Omega\\) \u662f \\(\\mathbb{R}, \\mathbb{R}^2, \\dots, \\mathbb{R}^k\\) \u4e0a\u7684\u53ef\u6d4b\u533a\u57df</li> <li>\u4e8b\u4ef6 \\(A\\) \u662f \\(\\Omega\\) \u7684\u53ef\u6d4b\u5b50\u96c6</li> <li>\u4e8b\u4ef6 \\(A\\) \u7684\u6982\u7387 \\(\\displaystyle P(A) = \\frac{|A|}{|\\Omega|}\\)</li> </ul> <p>\u5173\u952e\u5728\u4e8e\u8ba1\u7b97 \\(|A|, |\\Omega|\\)</p> Buffon's Needle Problem <p>\u82e5\u4e00\u6839\u957f\u5ea6\u4e3a \\(l\\) \u7684\u77ed\u9488\uff0c\u629b\u5728\u6a2a\u7ebf\u95f4\u95f4\u8ddd\u4e3a \\(d\\) \u7684\u5747\u5300\u6a2a\u7eb9\u7eb8\u4e0a\uff0c\u6c42\u9488\u843d\u5728\u4e00\u4e2a\u4e0e\u67d0\u6761\u6a2a\u7ebf\u76f8\u4ea4\u7684\u4f4d\u7f6e\u7684\u6982\u7387\u3002\u5047\u8bbe \\(l \\leq d\\) \u3002</p> <p>\u8bb0\u9488\u7684\u4e2d\u5fc3\u8ddd\u79bb\u6700\u8fd1\u7684\u5e73\u884c\u7ebf\u7684\u8ddd\u79bb\u4e3a \\(a &lt; d/2\\) \uff0c\u9488\u4e0e\u5e73\u884c\u7ebf\u7684\u5939\u89d2\u4e3a \\(\\theta \\leq \\pi /2\\) \u3002</p> <p>\u5219\u6837\u672c\u7a7a\u95f4 \\(\\Omega = [0, d / 2] \\times [0, \\pi / 2]\\)</p> <p>\u8bb0\u4e8b\u4ef6 \\(A\\) \u4e3a\u9488\u843d\u5728\u4e00\u4e2a\u4e0e\u67d0\u6761\u6a2a\u7ebf\u76f8\u4ea4\u7684\u4f4d\u7f6e\uff0c\u5219</p> \\[ A \\ \\text{\u53d1\u751f} \\iff a \\leq \\frac{l}{2}\\sin\\theta \\] \\[ \\begin{align}     P(A) &amp;= \\frac{|A|}{|\\Omega|} \\\\          &amp;= \\frac{\\int_{0}^{\\pi / 2}\\frac{l}{2} \\sin\\theta \\text{d}\\theta}{\\frac{d}{2}\\frac{\\pi}{2}} \\\\          &amp;= \\frac{2l}{\\pi d} \\end{align} \\]"},{"location":"math/prob_theory/chapter1/#_11","title":"\u5176\u4ed6\u6982\u7387\u6a21\u578b","text":"<p>\u4f8b\uff1a</p> <ul> <li>\u629b\u63b7\u4e0d\u5747\u5300\u786c\u5e01</li> <li>\u5f69\u7968</li> </ul>"},{"location":"math/prob_theory/chapter1/#_12","title":"\u6982\u7387\u7a7a\u95f4\u516c\u7406\u5316\u4f53\u7cfb","text":"<p>\u63cf\u8ff0\u6982\u7387\u7a7a\u95f4\u7684\u4e09\u8981\u7d20\uff1a</p> <ul> <li>\u6837\u672c\u7a7a\u95f4 \\(\\Omega\\)</li> <li>\u4e8b\u4ef6\u7c7b \\(\\sigma\\) -\u57df \\(\\mathcal{A}\\)</li> <li>\u6982\u7387 \\(P\\)</li> </ul> <p>\\((\\Omega, \\mathcal{A}, P)\\) \u6784\u6210\u6982\u7387\u7a7a\u95f4\uff0c\u662f\u968f\u673a\u73b0\u8c61\u7684\u6570\u5b66\u63cf\u8ff0\uff08\u6982\u7387\u6a21\u578b\uff09\uff0c\u5176\u4e2d\uff1a</p> <ul> <li>\\(\\mathcal{A}\\) \u6ee1\u8db3<ul> <li>\\(\\emptyset, \\Omega \\in \\mathcal{A}\\)</li> <li>\\(A \\in \\mathcal{A} \\rightarrow \\bar A \\in \\mathcal{A}\\)</li> <li>\\(A_n \\in \\mathcal{A}, n \\geq 1 \\rightarrow \\bigcup_{n=1}^{\\infty}A_n \\in \\mathcal{A}\\)</li> </ul> </li> <li>\\(P\\) \u6ee1\u8db3<ul> <li>\\(P(\\emptyset) = 0, P(\\Omega) = 1\\)</li> <li>\\(\\forall A \\in \\mathcal{A}, P(A) \\geq 0\\)</li> <li> <p>\\(A_n \\in \\mathcal{A}\\) \u4e92\u4e0d\u76f8\u4ea4\uff0c\u5219</p> \\[ P(\\sum_{n=1}^{\\infty}A_n) = \\sum_{n=1}^{\\infty}P(A_n) \\] </li> </ul> </li> </ul> \u4efb\u4f55\u6ee1\u8db3\u4e0a\u8ff0\u6027\u8d28\u7684 \\(P\\) \u90fd\u79f0\u4e3a\u7a7a\u95f4 \\((\\Omega, \\mathcal{A})\\) \u4e0a\u7684\u6982\u7387\u3002 <p>\u6982\u7387 \\(P\\) \u7684\u8fd0\u7b97\u6027\u8d28</p> <ul> <li>\u5355\u8c03\u6027\uff1a \\(A \\subseteq B\\) \uff0c\u5219 \\(P(A) \\leq P(B)\\)</li> <li>\\(P(\\bar A) = 1 - P(A)\\)</li> <li> <p>\u5bf9\u4efb\u610f \\(A_N \\in \\mathcal{A}, n \\geq 1\\),</p> \\[ P(\\bigcup_{n=1}^{\\infty}A_n) \\leq \\sum_{n=1}^{\\infty}P(A_n) \\] </li> <li> <p>\\(A, B \\in \\mathcal{A}\\) \uff0c\u5219\uff08\u5bb9\u65a5\u539f\u7406\uff09</p> \\[ P(A\\cup B) = P(A) + P(B) - P(AB) \\] </li> </ul>"},{"location":"math/prob_theory/chapter1/#_13","title":"\u6761\u4ef6\u6982\u7387","text":"<p>\u5047\u8bbe \\((\\Omega, \\mathcal{A}, P)\\) \u662f\u4e00\u4e2a\u6982\u7387\u7a7a\u95f4\uff0c \\(A, B\\) \u662f\u4e24\u4e2a\u4e8b\u4ef6\uff0c \\(P(B)&gt;0\\) \u3002\u4ee4</p> \\[ P(A|B) = \\frac{P(AB)}{P(B)} \\] <p>\u4e3a\u5728 \\(B\\) \u53d1\u751f\u7684\u6761\u4ef6\u4e0b\uff0c \\(A\\) \u53d1\u751f\u7684\u6761\u4ef6\u6982\u7387\u3002</p> <p>\\(P(B)&gt;0\\)</p> <ul> <li>\u5206\u6bcd\u4e0d\u80fd\u4e3a \\(0\\)</li> <li>\u96f6\u6982\u7387\u4e8b\u4ef6\u65e0\u6cd5\u89c2\u5bdf\u5230</li> </ul> <p>\u539f\u516c\u5f0f\u53ef\u4ee5\u6539\u5199\u6210\u4e58\u6cd5\u516c\u5f0f</p> \\[ P(AB) = P(A|B)P(B) \\] <p>\u63a8\u5e7f\u5230\u591a\u4e2a\u4e8b\u4ef6\uff1a\u94fe\u5f0f\u6cd5\u5219</p> \\[ \\begin{align}     P(ABC) &amp;= P(A|BC)P(BC) \\\\            &amp;= P(A|BC)P(B|C)P(C) \\end{align} \\] Example <p>\\(n\\) \u5f20\u5f69\u7968\u6709\u4e00\u5f20\u4e2d\u5956\u5f69\u7968\uff0c\u6c42\u7b2c \\(k\\) \u4e2a\u4eba\u4e2d\u5956\u7684\u6982\u7387\u3002</p> <p>\u4ee4 \\(A_i\\) \u8868\u793a\u7b2c \\(i\\) \u4e2a\u4eba\u4e2d\u5956</p> \\[ \\begin{align} P(A_k \\bar A_1 \\dots \\bar A_{k-1}) &amp;= P(\\bar A_1)P(\\bar A_2|\\bar A_1)\\dots P(A_k|\\bar A_1 \\dots \\bar A_{k-1}) \\\\ &amp;= \\frac{n-1}{n} \\cdot \\frac{n-2}{n-1} \\cdot \\dots \\cdot \\frac{1}{n - k + 1} \\\\ &amp;= \\frac{1}{n} \\end{align} \\]"},{"location":"math/prob_theory/chapter1/#_14","title":"\u5168\u6982\u7387\u516c\u5f0f","text":"<p>\u5047\u8bbe \\((\\Omega, \\mathcal{A}, P)\\) \u662f\u4e00\u4e2a\u6982\u7387\u7a7a\u95f4\uff0c \\(B_k, 1\\leq k \\leq N\\) \u662f \\(N\\) \u4e2a\u4e92\u4e0d\u76f8\u4ea4\u4e8b\u4ef6\uff0c\u4e14 \\(\\Omega = \\sum_{k=1}^NB_k\\) \u5219</p> \\[ P(A) = \\sum_{k=1}^N P(A|B_k)P(B_k), \\quad N \\leq \\infty \\]"},{"location":"math/prob_theory/chapter1/#_15","title":"\u8d1d\u53f6\u65af\u516c\u5f0f","text":"<p>\u5047\u8bbe \\((\\Omega, \\mathcal{A}, P)\\) \u662f\u4e00\u4e2a\u6982\u7387\u7a7a\u95f4\uff0c \\(B_k, 1\\leq k \\leq N\\) \u662f \\(N\\) \u4e2a\u4e92\u4e0d\u76f8\u4ea4\u4e8b\u4ef6\uff0c\u4e14 \\(\\Omega = \\sum_{k=1}^NB_k\\) \u5219</p> \\[ P(B_k|A) = \\frac{P(A|B_k)P(B_k)}{\\sum_{i=1}^{N}P(A|B_i)P(B_i)} = \\frac{P(A|B_k)P(B_k)}{P(A)} \\] <p>\\(P(B_k)\\) \u4e3a\u5148\u9a8c\u6982\u7387\uff0c \\(P(B_k|A)\\) \u4e3a\u540e\u9a8c\u6982\u7387</p>"},{"location":"math/prob_theory/chapter1/#_16","title":"\u72ec\u7acb\u6027","text":""},{"location":"math/prob_theory/chapter1/#_17","title":"\u4e24\u4e2a\u4e8b\u4ef6\u72ec\u7acb","text":"<p>\u5047\u8bbe \\((\\Omega, \\mathcal{A}, P)\\) \u662f\u4e00\u4e2a\u6982\u7387\u7a7a\u95f4\uff0c\\(A, B\\) \u662f\u4e24\u4e2a\u4e8b\u4ef6\u3002\u5982\u679c \\(P(B)&gt;0\\)\uff0c\u5e76\u4e14</p> \\[ P(A|B)=P(A) \\] <p>\u5219 \\(A\\) \u548c \\(B\\) \u72ec\u7acb\u3002\u5219\u7531\u6761\u4ef6\u6982\u7387\u5b9a\u4e49\uff0c\u4e0a\u5f0f\u53ef\u5199\u6210</p> \\[ P(AB) = P(A)P(B) \\] <p>Note</p> <ul> <li>\\(P(B)=0\\) \u65f6\u4e58\u79ef\u516c\u5f0f\u4ecd\u6709\u610f\u4e49\u3002</li> <li>\\(A, B\\) \u5173\u7cfb\u5bf9\u7b49\u3002</li> <li>\u82e5 \\(A, B\\) \u72ec\u7acb\uff0c\u5219 \\(A, \\bar B\\) \u72ec\u7acb\uff0c \\(\\bar A, B\\) \u72ec\u7acb\uff0c \\(\\bar A, \\bar B\\) \u72ec\u7acb</li> <li> <p>\u4e0e\u52a0\u6cd5\uff08\u5e76\uff09\u7684\u533a\u522b\uff1a</p> \\[ \\begin{align}     P(A+B) &amp;= P(A) + P(B) \\qquad &amp;&amp;A \\cap B = \\emptyset \\\\     P(AB) &amp;= P(A)P(B) \\qquad &amp;&amp;A, B \\text{\u72ec\u7acb} \\end{align} \\] </li> </ul>"},{"location":"math/prob_theory/chapter1/#_18","title":"\u4e09\u4e2a\u4e8b\u4ef6\u72ec\u7acb","text":"<p>\u82e5 \\(A, B, C\\) \u662f\u4e09\u4e2a\u4e8b\u4ef6\uff0c\u82e5 \\(A, B, C\\) \u4e24\u4e24\u76f8\u4e92\u72ec\u7acb \u4e14</p> \\[ P(ABC) = P(A)P(B)P(C) \\] <p>\u5219\u79f0 \\(A,B,C\\) \u76f8\u4e92\u72ec\u7acb\u3002</p> <p>Warning</p> <p>\u4e24\u4e24\u72ec\u7acb\u4e0d\u4e00\u5b9a\u76f8\u4e92\u72ec\u7acb\uff0c\u76f8\u4e92\u72ec\u7acb\u4e00\u5b9a\u4e24\u4e24\u72ec\u7acb\u3002</p> <p>Example</p> <p>\u4e00\u4e2a\u6b63\u56db\u9762\u4f53\u7684\u4e09\u9762\u5206\u522b\u6d82\u6210\u7ea2\u3001\u9ed1\u3001\u767d\u4e09\u8272\uff0c\u53e6\u4e00\u9762\u6d82\u4e0a\u4e09\u79cd\u989c\u8272\u3002\u73b0\u968f\u673a\u4e00\u6254\uff0c\u8bb0\u5e95\u9762\u6d82\u6709\u7ea2\u3001\u9ed1\u3001\u767d\u5206\u522b\u4e3a\u4e8b\u4ef6 \\(A,B,C\\)\u3002</p> <p>\u53ef\u5f97</p> \\[ P(A) = P(B) = P(C) = \\frac{1}{2} \\] <p>\u4e14</p> \\[ \\begin{align} P(AB) = \\frac{1}{4} = P(A)P(B) \\\\ P(AC) = \\frac{1}{4} = P(A)P(C) \\\\ P(BC) = \\frac{1}{4} = P(B)P(C) \\end{align} \\] <p>\u5219 \\(A,B,C\\) \u4e24\u4e24\u72ec\u7acb\u3002\u4f46</p> \\[ P(ABC) = \\frac{1}{4} \\not = P(A)P(B)P(C) \\] <p>\u6545 \\(A,B,C\\) \u4e0d\u76f8\u4e92\u72ec\u7acb\u3002\u539f\u56e0\u5728\u4e8e\u82e5 \\(AB\\) \u53d1\u751f\uff0c\u5219 \\(C\\) \u4e00\u5b9a\u53d1\u751f\uff0c\u5931\u53bb\u4e86\u72ec\u7acb\u6027\u3002</p> <p>Note</p> <p>\u82e5 \\(A,B,C\\) \u76f8\u4e92\u72ec\u7acb\uff0c\u5219 \\(\\bar A,B,C\\) \u76f8\u4e92\u72ec\u7acb\uff0c\\(A+B, C\\) \u76f8\u4e92\u72ec\u7acb\uff0c\u7b49\u7b49\u7c7b\u4f3c\u5173\u7cfb\u6210\u7acb\u3002</p>"},{"location":"math/prob_theory/chapter1/#m","title":"m \u4e2a\u4e8b\u4ef6\u76f8\u4e92\u72ec\u7acb","text":"<p>\u5047\u8bbe \\(A_k, 1\\leq k\\leq m\\) \u662f \\(m\\) \u4e2a\u4e8b\u4ef6\uff0c\u82e5 \\(A_k\\) \u4e2d\u4efb\u610f \\(r &lt; m\\) \u4e2a\u90fd\u76f8\u4e92\u72ec\u7acb\uff0c\u4e14</p> \\[ P(\\bigcap_{1\\leq k\\leq m}A_k) = \\prod_{1\\leq k\\leq m}P(A_k) \\] <p>\u5219 \\(A_k, 1\\leq k\\leq m\\) \u76f8\u4e92\u72ec\u7acb\u3002</p>"},{"location":"math/prob_theory/chapter1/#_19","title":"\u4e8c\u9879\u8bd5\u9a8c","text":"<p>\u53c8\u79f0 n-\u91cd Bernonlli \u8bd5\u9a8c\u3002</p> <ul> <li>\u8bd5\u9a8c \\(E\\) \u5305\u542b\u82e5\u5e72\u4e2a\u57fa\u672c\u7ed3\u679c\u3002</li> <li>\u4e8b\u4ef6 \\(A\\) \u4e3a\u5177\u6709\u67d0\u79cd\u5c5e\u6027\u7684\u57fa\u672c\u7ed3\u679c\u96c6\u5408\uff0c\u53d1\u751f\u7684\u6982\u7387\u4e3a \\(P(A) = p_A\\)</li> </ul> <p>\u72ec\u7acb\u91cd\u590d\u8fdb\u884c \\(n\\) \u6b21\u8bd5\u9a8c\uff0c\u5e76\u89c2\u5bdf\u8bb0\u5f55\u7ed3\u679c\u3002\u5224\u65ad \\(A\\) \u53d1\u751f\u4e0e\u5426\uff0c\u7edf\u8ba1 \\(A\\) \u53d1\u751f\u7684\u6b21\u6570 \\(n_A\\).</p> <p>\u6982\u7387\u6a21\u578b</p> <p>\u6bcf\u6b21\u8bd5\u9a8c \\(A\\) \u53d1\u751f\u8bb0\u4e3a \\(1\\)\uff0c\u4e0d\u53d1\u751f\u8bb0\u4e3a \\(0\\)\u3002</p> <p>\u72ec\u7acb\u91cd\u590d \\(n\\) \u6b21\u8bd5\u9a8c\uff0c\u6240\u5f97\u7ed3\u679c\u4e3a</p> \\[ \\omega = (\\omega _1, \\dots, \\omega _n) \\qquad \\omega_i =0, 1 \\] <p>\u7528 \\(\\Omega_n\\) \u8868\u793a\u6240\u6709 \\(\\omega\\) \u7684\u5168\u4f53</p> \\[ \\Omega_n = \\{\\omega = (\\omega _1, \\dots, \\omega _n), \\omega_i =0, 1\\} \\] <p>\u5176\u4e2d\u6bcf\u4e2a \\(\\omega\\) \u51fa\u73b0\u7684\u6982\u7387\u4e3a</p> \\[ P_n(\\{\\omega\\}) = p_A^{\\sum \\omega_i}(1 - p_A)^{n - \\sum \\omega_i} \\] <p>\u7531\u6b64\u5f97\u5230\u6982\u7387\u7a7a\u95f4 \\((\\Omega_n, P_n)\\)\uff0c\u5373\u4e3a n-\u91cd Bernonlli \u8bd5\u9a8c\u7684\u6982\u7387\u6a21\u578b\u3002</p> <p>\u8003\u8651\u4e8b\u4ef6 \\(B = \\{\\omega: n_A(\\omega) = k\\}\\)\uff0c\u5219</p> \\[ P_n(B) = {n \\choose k}p_A^k(1 - p_A)^{n - k} \\]"},{"location":"math/prob_theory/chapter1/#_20","title":"\u4e58\u79ef\u6982\u7387\u7a7a\u95f4","text":"<p>\u8003\u8651\u4e24\u4e2a\u8bd5\u9a8c \\(E_1, E_2\\)\uff0c\u5176\u6982\u7387\u7a7a\u95f4\u5206\u522b\u4e3a \\((\\Omega_1, P_1), (\\Omega_2, P_2)\\)</p> <p>\u73b0\u540c\u65f6\u72ec\u7acb\u505a\u4e24\u4e2a\u8bd5\u9a8c\uff0c\u8bb0\u5f55\u5176\u57fa\u672c\u7ed3\u679c \\(\\omega = (\\omega_1, \\omega_2)\\)</p> <p>\u8003\u8651 \\(E_1, E_2\\) \u6240\u6709\u57fa\u672c\u7ed3\u679c\u7684\u5168\u4f53</p> \\[ \\Omega = \\{\\omega = (\\omega_1, \\omega_2), \\quad \\omega_1 \\in \\Omega_1, \\omega_2 \\in \\Omega_2\\} \\] <p>\u8003\u8651\u4e8b\u4ef6</p> \\[ A = A_1 \\times A_2 = \\{\\omega = (\\omega_1, \\omega_2), \\quad \\omega_1 \\in A_1, \\omega_2 \\in A_2\\} \\] <p>\u5b9a\u4e49\u5176\u6982\u7387</p> \\[ P(A) = P(A_1)P(A_2) \\] <p>\u5f97\u5230\u65b0\u7684\u6982\u7387\u7a7a\u95f4\uff1a\u4e58\u79ef\u6982\u7387\u7a7a\u95f4 \\((\\Omega, P)\\)</p>"},{"location":"math/prob_theory/chapter1/#_21","title":"\u8865\u5145\u8bf4\u660e","text":""},{"location":"math/prob_theory/chapter1/#_22","title":"\u6982\u7387\u7684\u53ef\u52a0\u6027","text":"<p>\u5982\u679c \\(A_n, n \\geq 1\\) \u4e92\u4e0d\u76f8\u4ea4\uff0c\u5219</p> \\[ P(\\sum_{n = 1}^\\infty A_n) = \\sum_{n = 1}^\\infty P(A_n) \\]"},{"location":"math/prob_theory/chapter1/#_23","title":"\u6982\u7387\u7684\u8fde\u7eed\u6027","text":"<p>\u4e8b\u4ef6\u7684\u6781\u9650</p> <ul> <li> <p>\u5047\u8bbe \\(A_n\\) \u662f\u4e00\u5217\u589e\u52a0\u4e8b\u4ef6</p> \\[ A_1 \\subseteq \\dots \\subseteq A_n \\subseteq \\dots \\] <p>\u5b9a\u4e49</p> \\[ \\lim_{n \\to \\infty} A_n = \\bigcup_{n=1}^\\infty A_n \\] </li> <li> <p>\u5047\u8bbe \\(A_n\\) \u662f\u4e00\u5217\u9012\u51cf\u4e8b\u4ef6</p> \\[ A_1 \\supseteq \\dots \\supseteq A_n \\supseteq \\dots \\] <p>\u5b9a\u4e49</p> \\[ \\lim_{n \\to \\infty} A_n = \\bigcap_{n=1}^\\infty A_n \\] </li> </ul> <p>\u5047\u8bbe \\(A_n\\) \u662f\u4e00\u5217\u589e\u52a0\u4e8b\u4ef6\uff0c\u5219</p> \\[ P(\\lim_{n\\to \\infty} A_n) = \\lim_{n\\to \\infty}P(A_n) \\] <p>Proof</p> <p>\u8bb0 \\(B_1 = A_1, B_k = A_k - A_{k - 1}\\) \uff0c\u5219 \\(B_k\\) \u4e92\u4e0d\u76f8\u4ea4\uff0c\u5219</p> \\[ \\begin{align} P(\\lim_{n\\to\\infty}A_n) &amp;= P(\\sum_{n=1}^\\infty B_n) \\\\                         &amp;= \\sum_{n=1}^\\infty P(B_n) \\\\                         &amp;= \\sum_{n=1}^\\infty P(A_n) - P(A_{n - 1}) \\\\                         &amp;= \\lim_{n\\to\\infty} P(A_n) \\end{align} \\]"},{"location":"math/prob_theory/chapter1/#_24","title":"\u6761\u4ef6\u6982\u7387\u5177\u6709\u6982\u7387\u7684\u8fd0\u7b97\u6027\u8d28","text":"<p>\u5047\u8bbe \\((\\Omega, \\mathcal{A}, P)\\) \u662f\u6982\u7387\u7a7a\u95f4\uff0c \\(B\\) \u662f\u4e00\u4e2a\u4e8b\u4ef6\uff0c \\(P(B)&gt;0\\)</p> <p>\u5bf9\u4e8e\u4efb\u610f\u4e8b\u4ef6 \\(A \\in \\mathcal{A}\\) \uff0c\u6761\u4ef6\u6982\u7387 \\(P(A|B) = \\frac{P(AB)}{P(B)}\\)</p> <p>\u5c06</p> \\[ P(\\cdot | B) : \\mathcal{A} \\mapsto [0, 1] \\] <p>\u89c6\u4f5c\u4e00\u4e2a\u6982\u7387\u3002</p> <p>\u5219\u6709</p> \\[ \\begin{align} P(A_1+A_2|B) = P(A_1|B) + P(A_2|B) \\\\ P(A_1-A_2|B) = P(A_1|B) - P(A_2|B) \\end{align} \\] <p>\u7b49\u7b49\u7c7b\u4f3c\u6027\u8d28\u3002</p>"},{"location":"math/prob_theory/chapter2/","title":"\u968f\u673a\u53d8\u91cf\u4e0e\u5206\u5e03\u51fd\u6570","text":""},{"location":"math/prob_theory/chapter2/#_2","title":"\u968f\u673a\u53d8\u91cf\u4e0e\u5206\u5e03\u51fd\u6570","text":"<p>\u968f\u673a\u53d8\u91cf\u662f\u5b9a\u4e49\u5728\u6982\u7387\u7a7a\u95f4\u4e0a\u53d6\u5b9e\u6570\u503c\u7684\u53ef\u6d4b\u51fd\u6570</p> <p>\u968f\u673a\u53d8\u91cf</p> <ul> <li>\u63b7\u9ab0\u5b50\u51fa\u73b0\u7684\u70b9\u6570</li> <li>\u6d4b\u91cf\u706f\u6ce1\u7684\u5bff\u547d</li> <li>\u6d4b\u91cf\u7269\u4f53\u7684\u957f\u5ea6</li> </ul>"},{"location":"math/prob_theory/chapter2/#_3","title":"\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\u4e0e\u5206\u5e03\u5217","text":"<p>\u53d6\u6709\u9650\u4e2a\u6216\u8005\u53ef\u5217\u4e2a\u503c\u7684\u968f\u673a\u53d8\u91cf</p> <p>\u5047\u8bbe \\((\\Omega, \\mathcal{A}, P)\\) \u662f\u6982\u7387\u7a7a\u95f4\uff0c\u5b9a\u4e49 \\(X:\\Omega \\mapsto \\mathbb{R}\\) .</p> <p>\u53d6\u503c \\(x_1, \\cdots, x_N, N\\leq\\infty\\)</p> <p>\u53d6\u6bcf\u4e2a\u503c\u7684\u6982\u7387\u5927\u5c0f</p> \\[ P(X=x_i)=p_i, \\quad i = 1, 2, \\cdots, N \\] <p>\u5206\u5e03\u5217\uff1a</p> \\[ X \\sim \\begin{pmatrix} x_1 &amp; x_2 &amp; \\cdots &amp; x_i &amp; \\cdots &amp; x_N\\\\ p_1 &amp; p_2 &amp; \\cdots &amp; p_i &amp; \\cdots &amp; p_N \\end{pmatrix} \\] <p>Note</p> <ul> <li> <p>\\(p_i\\)</p> \\[ p_i &gt; 0, \\sum_{i=1}^N p_i = 1 \\] </li> <li> <p>\u5bf9\u4e8e\u4efb\u610f Borel \u96c6 \\(B\\) \uff0c</p> \\[ P(X\\in B) = \\sum_{i:x_i\\in B}p_i \\] <p>\u7279\u522b\uff0c</p> \\[ \\begin{align}     P(X \\leq x) &amp;= \\sum_{i:x_i \\leq x}p_i \\\\     P(X &gt; x) &amp;= \\sum_{i:x_i &gt; x}p_i \\\\     P(a &lt; X \\leq b) &amp;= \\sum_{i:a&lt; x_i \\leq b}p_i \\end{align} \\] </li> </ul>"},{"location":"math/prob_theory/chapter2/#_4","title":"\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\u7684\u5178\u578b\u4f8b\u5b50","text":"<p>\u9000\u5316\u5206\u5e03</p> \\[ X \\sim \\begin{pmatrix}     c \\\\     1 \\end{pmatrix} \\] <p>\u5e38\u6570\u53ef\u4ee5\u770b\u4f5c\u9000\u5316\u968f\u673a\u53d8\u91cf</p> <p>\u4e24\u70b9\u5206\u5e03</p> \\[ X \\sim \\begin{pmatrix}     1 &amp; 0\\\\     p &amp; 1 - p \\end{pmatrix} \\quad 0&lt;p&lt;1 \\] <p>\u9002\u7528\u4e8e\u63cf\u8ff0\u201c\u6b63\u9762\u3001\u53cd\u9762\u201d\u3001\u201c\u6210\u529f\u3001\u5931\u8d25\u201d\u7b49\u968f\u673a\u73b0\u8c61</p> <p>\u4e8c\u9879\u5206\u5e03</p> \\[ X \\sim \\begin{pmatrix}     0 &amp; 1 &amp; \\cdots &amp; k &amp; \\cdots &amp; n\\\\     (1-p)^n &amp; np(1-p)^{n-1} &amp; \\cdots &amp; {n \\choose k}p^k(1-p)^{n-k} &amp; \\cdots &amp; p^n \\end{pmatrix} \\quad 0&lt;p&lt;1 \\] <p>\u7b80\u8bb0 \\(X \\sim B(n, p)\\)</p> <ul> <li>\u4e8c\u9879\u5206\u5e03\u9002\u7528\u4e8e n \u91cd Bernoulli \u8bd5\u9a8c</li> <li> <p>\u4e8c\u9879\u5c55\u5f00\u7cfb\u6570</p> \\[ (p+q)^n = \\sum_{k = 0}^n{n \\choose k}p^kq^{n-k} \\] </li> <li> <p>\\(X\\) \u6700\u53ef\u80fd\u7684\u503c</p> \\[ \\begin{align} \\frac{p_k}{p_{k+1}} =&amp; \\frac{{n \\choose k}p^k(1-p)^{n-k}}{{n \\choose k + 1}p^{k+1}(1-p)^{n-k-1}} \\\\ =&amp; \\frac{(k+1)(1-p)}{(n-k)p} \\\\ &amp;\\begin{cases}     &lt;1, &amp;\\quad k+1 &lt; (n + 1)p \\\\     &gt;1, &amp;\\quad k+1 &gt; (n + 1)p \\end{cases} \\end{align} \\] </li> </ul> <p>Poisson \u5206\u5e03</p> \\[ X \\sim \\begin{pmatrix}     0 &amp; 1 &amp; \\cdots &amp; k &amp; \\cdots\\\\     e^{-\\lambda} &amp; \\lambda e^{-\\lambda} &amp; \\cdots &amp; \\frac{\\lambda^k}{k!}e^{-\\lambda} &amp; \\cdots \\end{pmatrix} \\quad \\lambda &gt; 0 \\] <p>\u7b80\u8bb0 \\(X \\sim \\mathcal{P}(\\lambda)\\)</p> <p>\\(X\\) \u53d6\u975e\u8d1f\u6574\u6570\u503c\uff0c</p> \\[ P(X=k) = \\frac{\\lambda^k}{k!}e^{-\\lambda}, \\quad k=0, 1, \\cdots \\] <p>Note</p> <ul> <li>\\(\\sum p_i = 1\\)</li> <li>Poisson \u5206\u5e03\u662f Poisson \u8fc7\u7a0b\u7684\u57fa\u7840\uff0c\u7528\u4e8e\u63cf\u8ff0\u968f\u673a\u670d\u52a1\u7cfb\u7edf</li> <li> <p>\u5f53 \\(k\\) \u8db3\u591f\u5927</p> \\[ P(X\\geq k) = \\sum_{l = k}^\\infty\\frac{\\lambda^l}{l!}e^{-\\lambda} \\asymp \\frac{\\lambda^k}{k!}e^{-\\lambda} \\] <p>\\(X\\) \u53ea\u96c6\u4e2d\u5728\u5c0f\u503c\u4e2d\u3002\u7a00\u6709\u4e8b\u4ef6\u3002</p> </li> </ul> <p>Poisson \u5206\u5e03\u548c\u4e8c\u9879\u5206\u5e03\u4e4b\u95f4\u7684\u5173\u7cfb(Poisson \u6781\u9650\u5b9a\u7406)</p> <p>\u5047\u8bbe \\(S_n \\sim B(n, p_n)\\)\u3002\u5f53 \\(n \\to \\infty, np_n \\to \\lambda &gt; 0\\)\u3002\u5bf9\u4e8e\u4efb\u610f \\(k \\leq 0\\)</p> \\[ P(S_n = k) \\to \\frac{\\lambda^k}{k!}e^{-\\lambda} = P(X = k), \\quad n \\to \\infty \\] Proof \\[ \\begin{align} P(S_n = k) =&amp; {n \\choose k}p_n^k(1-p_n)^{n-k} \\\\ =&amp; \\frac{1}{k!} \\cdot n(n-1)\\cdots(n-k+1)\\cdot \\frac{1}{n^k}\\cdot (np_k)^k \\cdot (1 - \\frac{\\lambda}{n} + o(\\frac{1}{n}))^{n-k} \\\\ =&amp; \\left[(1-\\frac{1}{n})(1-\\frac{2}{n})\\cdots(1-\\frac{k-1}{n})\\right] \\left[\\frac{\\lambda^k}{k!}\\right] \\left[(1-\\frac{\\lambda}{n})^{n-k}\\right] \\\\ \\to &amp; \\frac{\\lambda^k}{k!} e^{-\\lambda}, \\quad n\\to \\infty \\end{align} \\] <p>\u51e0\u4f55\u5206\u5e03</p> <p>\u968f\u673a\u8bd5\u9a8c \\(E\\) \u548c\u4e8b\u4ef6 \\(A\\) \uff0c\\(P(A) = p, 0&lt;p&lt;1\\)\u3002\u72ec\u7acb\u91cd\u590d \\(E\\) \u76f4\u5230 \\(A\\) \u53d1\u751f\uff0c\u8bb0\u6240\u505a\u7684\u8bd5\u9a8c\u6b21\u6570\u8bb0\u4e3a \\(X\\)</p> \\[ P(X=k) = p(1-p)^{k-1} \\] <p>\u5176\u4e2d</p> \\[ \\sum_{k=1}^{\\infty} p(1-p)^{k-1} = \\frac{p}{1-(1-p)} = 1 \\] <p>\u5206\u5e03\u5217\uff1a</p> \\[ X \\sim \\begin{pmatrix} 1 &amp; 2 &amp; \\cdots &amp; k &amp; \\cdots \\\\ p &amp; p(1-p) &amp; \\cdots &amp; p(1-p)^{k-1} &amp; \\cdots \\end{pmatrix} \\] <p>\u8d85\u51e0\u4f55\u5206\u5e03</p> <p>\\(N\\) \u4ef6\u4ea7\u54c1\u4e2d\u6709 \\(M\\) \u4ef6\u6b21\u54c1\uff0c\u968f\u673a\u62bd\u6837 \\(n&lt;N\\) \u4ef6\uff0c\u7528 \\(X\\) \u8868\u793a \\(n\\) \u4ef6\u4ea7\u54c1\u4e2d\u6b21\u54c1\u6570\u3002</p> <p>\\(0\\leq X \\leq \\min\\{M,n\\}\\)</p> \\[ P(X=k) = \\frac{{M \\choose k}{N - M \\choose n - k}}{{N \\choose n}} \\]"},{"location":"math/prob_theory/chapter2/#_5","title":"\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\u4e0e\u5bc6\u5ea6\u51fd\u6570","text":"<p>\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\u7279\u70b9\uff1a</p> <ul> <li>\u968f\u673a\u53d8\u91cf\u53d6\u503c\u662f\u4e00\u4e2a\u6216\u51e0\u4e2a\u533a\u95f4</li> <li> <p>\u5b58\u5728\u51fd\u6570 \\(p(x)\\)</p> \\[ p(x)\\geq 0, \\quad \\int_{-\\infty}^{\\infty}p(x)\\text{d}x = 1 \\] <p>\u4f7f\u5f97\u5bf9\u4efb\u4f55 Borel \u96c6 \\(B\\)\uff0c</p> \\[ P(X\\in B) = \\int_{B} p(x)\\text{d}x \\] <p>\u7b80\u8bb0 \\(X \\sim p(x)\\)</p> </li> </ul> <p>\u79f0 \\(p(x)\\) \u4e3a \\(X\\) \u7684\u5bc6\u5ea6\u51fd\u6570</p> <p>Note</p> <ul> <li>\\(P(X=x) = 0, \\quad x\\in \\mathbb{R}\\)</li> <li>\\(P(X\\in(a,b]) = \\int_{a}^{b} p(x)\\text{d}x\\)</li> </ul>"},{"location":"math/prob_theory/chapter2/#_6","title":"\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\u7684\u4f8b\u5b50","text":"<p>\u5747\u5300\u5206\u5e03</p> <p>\u5411 \\((a,b)\\) \u4e0a\u968f\u673a\u6295\u70b9\uff0c\u8bb0\u843d\u70b9\u7684\u4f4d\u7f6e\u4e3a \\(X\\)</p> <ul> <li>\\(X\\) \u843d\u5728 \\((a,b)\\) \u4e0a\u6bcf\u4e00\u70b9\u7b49\u53ef\u80fd \\(P(X=x) = 0\\)</li> <li>\\(P(X\\in A) = \\frac{|A|}{b-a}\\)</li> </ul> <p>\u7b80\u8bb0 \\(X \\sim U(a,b)\\)</p> \\[ X \\sim p(x) =  \\begin{cases} \\frac{1}{b-a}, &amp; x\\in (a,b) \\\\ 0            , &amp; \\text{\u5176\u4ed6} \\end{cases} \\] <p>\u6307\u6570\u5206\u5e03</p> <p>\u5982\u679c \\(X\\) \u53d6\u975e\u8d1f\u5b9e\u6570\uff0c\u4e14</p> \\[ p(x) = \\begin{cases} \\lambda e^{-\\lambda x}, &amp; x\\geq 0 \\\\ 0                     , &amp; \\text{\u5176\u4ed6} \\end{cases} \\quad \\lambda &gt; 0 \\] <p>\u7b80\u8bb0 \\(X \\sim \\exp(\\lambda)\\)</p> <p>Note</p> <ul> <li>\u901a\u5e38\u63cf\u8ff0\u5bff\u547d</li> <li>\u548c Poisson \u5206\u5e03\u6709\u5bc6\u5207\u8054\u7cfb\uff1aPoisson \u8fc7\u7a0b</li> <li> <p>\\(X\\) \u53d6\u5927\u503c\u7684\u53ef\u80fd\u6027\u8fc5\u901f\u8870\u51cf</p> \\[ P(X&gt;x) = e^{-\\lambda x}, \\quad x \\geq 0 \\] </li> <li> <p>\u65e0\u8bb0\u5fc6\u6027\u3002\u4f7f\u7528\u4e86 \\(y\\) \u5c0f\u65f6\u4e4b\u540e\u8fd8\u80fd\u4f7f\u7528 \\(x\\) \u7684\u6982\u7387</p> \\[ \\begin{align} P(X&gt;x+y | X&gt;y) =&amp; \\frac{P(X &gt; x+y)}{P(X &gt; y)} \\\\                =&amp; \\frac{e^{-\\lambda(x+y)}}{e^{-\\lambda y}} \\\\                =&amp; e^{-\\lambda x} \\\\                =&amp; P(X&gt;x) \\end{align} \\] </li> </ul> <p>\u6b63\u6001\u5206\u5e03</p> <p>\u968f\u673a\u53d8\u91cf \\(X\\) \u53d6\u6240\u6709\u5b9e\u6570\u503c\uff0c\u5bc6\u5ea6</p> \\[ p(x) = \\frac{1}{\\sqrt{2\\pi}\\sigma}e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}}, \\quad -\\infty &lt; x &lt; \\infty \\] <p>\u79f0 \\(X\\) \u662f\u670d\u4ece\u6b63\u6001\u5206\u5e03\u7684\u968f\u673a\u53d8\u91cf\uff0c\u7b80\u8bb0 \\(X \\sim N(\\mu,\\sigma^2)\\)</p> <p>Note</p> <ul> <li>\\(-\\infty &lt; \\mu &lt; \\infty, \\sigma &gt; 0\\)</li> <li>\u6807\u51c6\u6b63\u6001\u5206\u5e03 \\(\\mu = 0, \\sigma^2 = 1\\)\uff0c\u79f0 \\(X \\sim N(0,1)\\)</li> </ul> <p>\u9a8c\u8bc1</p> <p>\u9a8c\u8bc1</p> \\[ \\int_{-\\infty}^{\\infty}p(x)\\text{d}x = 1 \\] <p>\u4ee4 \\(t = \\frac{x-\\mu}{\\sigma}\\) \uff0c\u53ea\u9700\u8bc1\u660e</p> \\[ \\int_{-\\infty}^{\\infty}\\frac{1}{\\sqrt{2\\pi}}e^{-\\frac{x^2}{2}}\\text{d}x = 1 \\] <p>\u8003\u8651</p> \\[ \\left(\\int_{-\\infty}^{\\infty}\\frac{1}{\\sqrt{2\\pi}}e^{-\\frac{x^2}{2}}\\text{d}x\\right)^2 = \\int_{-\\infty}^{\\infty}\\int_{-\\infty}^{\\infty}\\frac{1}{2\\pi}e^{-\\frac{x^2+y^2}{2}}\\text{d}x\\text{d}y \\] <p>\u6781\u5750\u6807\u53d8\u6362\uff1a</p> \\[ \\int_{-\\infty}^{\\infty}\\int_{-\\infty}^{\\infty}\\frac{1}{2\\pi}e^{-\\frac{x^2+y^2}{2}}\\text{d}x\\text{d}y = \\int_{0}^\\infty\\int_{0}{2\\pi}\\frac{1}{2\\pi}e^{-\\frac{\\rho^2}{2}}\\rho\\text{d}\\rho\\text{d}\\theta = 1 \\] <p>\u6b63\u6001\u5206\u5e03\u7684\u6027\u8d28</p> <ul> <li>\u5bf9\u79f0\u6027\uff1a\u5173\u4e8e \\(x = \\mu\\) \u5bf9\u79f0</li> <li>\u5149\u6ed1\u6027\uff1a\\(p(x)\\) \u4efb\u610f\u6b21\u53ef\u5fae</li> <li>\u5355\u8c03\u6027</li> <li>\u6e10\u8fd1\u7ebf \\(y = 0\\)</li> <li>\u6700\u5927\u503c\uff1a\\(P(x)\\) \u5728 \\(x=\\mu\\) \u521d\u53d6\u6700\u5927\u503c \\(\\frac{1}{\\sqrt{2\\pi}\\sigma}\\)</li> <li>\\(\\sigma\\) \u53d8\u5927\uff0c\u66f2\u7ebf\u53d8\u5e73\u5766\uff1b\\(\\sigma\\) \u53d8\u5c0f\uff0c\u66f2\u7ebf\u53d8\u9661\u5ced</li> <li> <p>\u7c7b\u4f3c\u79ef\u5206</p> \\[ \\begin{align} P(X &gt; \\mu + \\sigma x) =&amp; \\int_{\\mu + \\sigma x}^{\\infty} \\frac{1}{\\sqrt{2\\pi}\\sigma}e^{-\\frac{(u - \\mu)^2}{2\\sigma^2}}\\text{d}u \\\\ \\sim &amp; \\frac{1}{\\sqrt{2\\pi}x}e^{-\\frac{x^2}{2}}, \\quad x\\to \\infty \\end{align} \\] <p>\u540c\u7406</p> \\[ P(X &lt; \\mu - \\sigma x) \\sim \\frac{1}{\\sqrt{2\\pi}x}e^{-\\frac{x^2}{2}}, \\quad x\\to \\infty \\] </li> </ul>"},{"location":"math/prob_theory/chapter2/#_7","title":"\u4e00\u822c\u578b\u968f\u673a\u53d8\u91cf\u4e0e\u5206\u5e03\u51fd\u6570","text":"<ul> <li> <p>\u5206\u5e03\u51fd\u6570</p> \\[ F(x) = P(\\omega: X(\\omega) \\leq x), \\quad -\\infty &lt; x &lt; \\infty \\] </li> <li> <p>\u5206\u5e03\u51fd\u6570\u7684\u6027\u8d28</p> <ul> <li>\\(\\lim_{x\\to -\\infty}F(x) = 0, \\lim_{x\\to \\infty}F(x) = 1\\)</li> <li>\\(F(x_1) \\leq F(x_2), \\quad x_1 \\leq x_2\\)</li> <li> <p>\\(F(x)\\) \u5de6\u6781\u9650\u548c\u53f3\u6781\u9650\u5b58\u5728</p> \\[ \\lim_{x\\to x_0-0}F(x) = F(x_0-0), \\quad \\lim_{x\\to x_0+0}F(x) = F(x_0+0) \\] <p>Note</p> <ul> <li>\\(F(x_0-0) = P(X &lt; x_0)\\)</li> <li>\\(P(x = x_0) = F(x_0) - F(x_0-0)\\)</li> <li>\\(P(X \\in (x_1, x_2]) = F(x_2) - F(x_1)\\)</li> </ul> </li> </ul> </li> <li> <p>\u8fde\u7eed\u6027\u968f\u673a\u53d8\u91cf\u7684\u5206\u5e03\u51fd\u6570</p> \\[ \\begin{align*} F(x) =&amp; P(X \\leq x) \\\\      =&amp; \\int_{-\\infty}^{x}p(u)\\text{d}u \\end{align*} \\] <p>\\(F(x)\\) \u662f\u8fde\u7eed\u51fd\u6570\uff0c\u4e14 \\(F'(x) = p(x)\\)</p> <p>\u6b63\u6001\u5206\u5e03\u7684\u5206\u5e03\u51fd\u6570</p> <p>\u5047\u5b9a \\(X \\sim N(0, 1)\\)</p> \\[ F(x) = \\frac{1}{\\sqrt{2\\pi}}\\int_{-\\infty}^{x}e^{-\\frac{u^2}{2}}\\text{d}u \\] <p>\u6ca1\u6709\u663e\u6027\u8868\u8fbe\u5f0f\uff0c\u7528 \\(\\Phi(x)\\) \u8868\u793a\u5206\u5e03\u51fd\u6570\uff08Probit \u51fd\u6570\uff09</p> <p>\u8bef\u5dee\u51fd\u6570</p> \\[ erf(x) = \\frac{2}{\\sqrt{\\pi}}\\int_{0}^{x}e^{-u^2}\\text{d}u \\] <p>\u91c7\u7528\u8bef\u5dee\u51fd\u6570\u8868\u793a \\(\\Phi(x)\\)</p> \\[ \\Phi(x) = \\frac{1}{2}\\left[1 + \\frac{1}{\\sqrt{2}}erf(x)\\right] \\] <p>\\(\\Phi(x)\\) \u7684\u503c\uff1a\u67e5\u8868\u3002</p> </li> </ul>"},{"location":"math/prob_theory/chapter2/#_8","title":"\u968f\u673a\u53d8\u91cf\u7684\u51fd\u6570","text":"<p>\u8003\u8651</p> \\[ Y = f(X), Y(\\omega) = f(X(\\omega)) \\] <p>\\(Y\\) \u662f\u968f\u673a\u53d8\u91cf\u7684\u6761\u4ef6</p> <p>\\(X\\) \u662f\u968f\u673a\u53d8\u91cf\uff0c\\(f\\) \u662f\u53ef\u6d4b\u51fd\u6570</p> <ul> <li> <p>\u5f53 \\(X\\) \u662f\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\u65f6\uff0c\\(Y\\) \u4e5f\u662f\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf</p> \\[ X \\sim \\begin{pmatrix} x_1 &amp; x_2 &amp; \\cdots &amp; x_i &amp; \\cdots &amp; x_N \\\\ p_1 &amp; p_2 &amp; \\cdots &amp; p_i &amp; \\cdots &amp; p_N \\end{pmatrix} \\] \\[ P(Y = y_i) = \\sum_{x_j: f(x_j) = y_i}p_j \\] </li> <li> <p>\u5f53 \\(X\\) \u662f\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\u65f6\uff0c\\(Y\\) \u4e0d\u4e00\u5b9a\u662f\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\u3002\u65e0\u7edf\u4e00\u516c\u5f0f\u3002</p> <p>\u4e00\u822c\u5730\uff0c\u5047\u8bbe \\(X \\sim p_X(x)\\)\uff0c\\(f\\) \u5177\u6709\u53cd\u51fd\u6570 \\(f^{-1}\\)\uff0c\u4e14 \\(f^{-1}\\) \u53ef\u5bfc\u3002\u5219 \\(Y\\) \u662f\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\uff0c\u5176\u5bc6\u5ea6\u51fd\u6570\u4e3a</p> \\[ Y \\sim p_Y(y) = p_X(f^{-1}(y))\\left|\\frac{\\text{d}f^{-1}(y)}{\\text{d}y}\\right| \\] <p>Example</p> <p>\u5047\u8bbe \\(X\\) \u5177\u6709\u8fde\u7eed\u7684\u5206\u5e03\u51fd\u6570 \\(F(x)\\)\uff0c\u6c42 \\(Y = F(X)\\) \u7684\u5206\u5e03</p> \\[ \\begin{align} P(Y \\leq y) =&amp; P(F(X) \\leq y) \\\\             =&amp; P(X \\leq F^{-1}(y)) \\\\             =&amp; F(F^{-1}(y)) \\\\             =&amp; y, \\quad 0 \\leq y \\leq 1 \\end{align} \\] <p>\u5219 \\(Y \\sim U(0,1)\\)</p> </li> </ul>"},{"location":"math/prob_theory/chapter2/#_9","title":"\u968f\u673a\u5411\u91cf\u4e0e\u8054\u5408\u5206\u5e03\u51fd\u6570","text":""},{"location":"math/prob_theory/chapter2/#_10","title":"\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf","text":"<p>\\((X,Y)\\) \u662f 2-\u968f\u673a\u5411\u91cf\u3002\\(X\\) \u53d6\u503c \\(x_1, x_2, \\cdots\\)\uff0c\\(Y\\) \u53d6\u503c \\(y_1, y_2, \\cdots\\)\u3002\u79f0 \\((X,Y)\\) \u4e3a\u79bb\u6563\u578b\u968f\u673a\u5411\u91cf\u3002</p> \\[ p_{ij} = P(X = x_i, Y = y_j), \\quad i,j = 1,2,\\cdots \\] <p>\u79f0</p> \\[ ((x_i, y_j), p_{ij})_{i,j=1}^{\\infty} \\] <p>\u4e3a \\((X,Y)\\) \u7684\u8054\u5408\u5206\u5e03\u3002</p> <ul> <li> <p>\u8fb9\u9645\u5206\u5e03</p> \\[ \\begin{align} P(X = x_i) =&amp; \\sum_{j=1}^{\\infty}p_{ij} \\\\ P(Y = y_j) =&amp; \\sum_{i=1}^{\\infty}p_{ij} \\end{align} \\] <p>Warning</p> <p>\u8fb9\u9645\u5206\u5e03\u7531\u8054\u5408\u5206\u5e03\u552f\u4e00\u786e\u5b9a\uff0c\u53cd\u4e4b\u4e0d\u6210\u7acb\u3002</p> </li> <li> <p>\u6761\u4ef6\u5206\u5e03</p> \\[ P(X = x_i | Y = y_j) = \\frac{P(X = x_i, Y = y_j)}{P(Y = y_j)} = \\frac{p_{ij}}{p_{\\cdot j}} \\] <p>\u6761\u4ef6\u5206\u5e03\u5217</p> \\[ X|Y = y_j \\sim \\begin{pmatrix} x_1 &amp; x_2 &amp; \\cdots &amp; x_i &amp; \\cdots \\\\ \\frac{p_{1j}}{p_{\\cdot j}} &amp; \\frac{p_{2j}}{p_{\\cdot j}} &amp; \\cdots &amp; \\frac{p_{ij}}{p_{\\cdot j}} &amp; \\cdots \\end{pmatrix} \\] </li> <li> <p>\u72ec\u7acb\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf</p> \\[ P(X = x_i, Y = y_j) = P(X = x_i)P(Y = y_j), \\forall i,j \\] <p>\u5373</p> \\[ p_{ij} = p_{i\\cdot}p_{\\cdot j}, \\quad \\forall i,j \\] </li> </ul>"},{"location":"math/prob_theory/chapter2/#_11","title":"\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf","text":"<p>\u8054\u5408\u5bc6\u5ea6\u51fd\u6570 \\(p(x,y)\\)</p> \\[ p(x,y) \\geq 0, \\quad \\int_{-\\infty}^{\\infty}\\int_{-\\infty}^{\\infty}p(x,y)\\text{d}x\\text{d}y = 1 \\] <p>\u5e76\u4e14</p> \\[ P(X \\in A, Y \\in B) = \\int_{A}\\int_{B}p(x,y)\\text{d}x\\text{d}y \\] <p>\u79f0 \\((X,Y)\\) \u4e3a\u8fde\u7eed\u578b\u968f\u673a\u5411\u91cf\u3002</p> <ul> <li> <p>\u8fb9\u9645\u5bc6\u5ea6</p> \\[ X \\sim p_X(x), \\quad Y \\sim p_Y(y) \\] \\[ p_X(x) = \\int_{-\\infty}^{\\infty}p(x,y)\\text{d}y, \\quad p_Y(y) = \\int_{-\\infty}^{\\infty}p(x,y)\\text{d}x \\] </li> </ul> <p>\u8054\u5408\u6b63\u6001\u5206\u5e03</p> \\[ p(x,y) = \\frac{1}{2\\pi\\sigma_1\\sigma_2\\sqrt{1-\\rho^2}}e^{-\\frac{1}{2(1-\\rho^2)}\\left[\\frac{(x-\\mu_1)^2}{\\sigma_1^2} - 2\\rho\\frac{(x-\\mu_1)(y-\\mu_2)}{\\sigma_1\\sigma_2} + \\frac{(y-\\mu_2)^2}{\\sigma_2^2}\\right]} \\] <p>\u79f0 \\((X,Y)\\) \u670d\u4ece\u4e8c\u5143\u6b63\u6001\u5206\u5e03\uff0c\u7b80\u8bb0 \\((X,Y) \\sim N(\\mu_1, \\mu_2, \\sigma_1^2, \\sigma_2^2, \\rho)\\)</p> <ul> <li> <p>\u8fb9\u9645\u5206\u5e03</p> \\[ X \\sim N(\\mu_1, \\sigma_1^2), \\quad Y \\sim N(\\mu_2, \\sigma_2^2) \\] </li> </ul> <ul> <li> <p>\u6761\u4ef6\u5206\u5e03</p> \\[ p_{Y|X}(y|x) = \\frac{p(x,y)}{p_X(x)} \\] \\[ P(Y \\leq y | X = x) = \\frac{\\int_{-\\infty}^{y}p(x,v)\\text{d}v}{p_X(x)} \\] </li> <li> <p>\u72ec\u7acb\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf</p> \\[ p(x,y) = p_X(x)p_Y(y), \\quad \\forall x,y \\] </li> </ul>"},{"location":"math/prob_theory/chapter2/#_12","title":"\u4e00\u822c\u578b\u968f\u673a\u53d8\u91cf","text":"<p>\u4e00\u822c\u5229\u7528\u5206\u5e03\u51fd\u6570</p> \\[ F(x,y) = P(X \\leq x, Y \\leq y) \\] <p>\\(F(x)\\) \u6027\u8d28</p> <ul> <li>\\(F(-\\infty, y) = F(x, -\\infty) = 0, F(+\\infty, +\\infty) = 1\\)</li> <li>\\(F(x, y)\\) \u5173\u4e8e \\(x\\) \u548c \\(y\\) \u90fd\u662f\u975e\u51cf\u51fd\u6570</li> <li>\\(F(x, y)\\) \u5173\u4e8e \\(x\\) \u548c \\(y\\) \u5de6\u6781\u9650\u5b58\u5728\uff0c\u53f3\u8fde\u7eed</li> <li>\\(P(a &lt; X \\leq b, c &lt; Y \\leq d) = F(b,d) - F(a,d) - F(b,c) + F(a,c)\\)</li> </ul> <ul> <li> <p>\u8fb9\u9645\u5206\u5e03</p> \\[ F_X(x) = F(x, +\\infty), \\quad F_Y(y) = F(+\\infty, y) \\] </li> <li> <p>\u6761\u4ef6\u5206\u5e03</p> \\[ \\begin{align} P(Y \\leq y | X = x) =&amp; \\lim_{\\epsilon \\to 0} P(Y \\leq y | x - \\epsilon &lt; X \\leq x + \\epsilon) \\\\                     =&amp; \\lim_{\\epsilon \\to 0} \\frac{F(x+\\epsilon, y) - F(x-\\epsilon, y)}{F_X(x+\\epsilon) - F_X(x-\\epsilon)} \\end{align} \\] </li> <li> <p>\u72ec\u7acb\u4e00\u822c\u578b\u968f\u673a\u53d8\u91cf</p> \\[ F(x,y) = F_X(x)F_Y(y), \\quad \\forall x,y \\] <p>\u5982\u679c \\(X, Y\\) \u76f8\u4e92\u72ec\u7acb\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f Borel \u51fd\u6570 \\(f,g\\)\uff0c\\(f(X)\\) \u548c \\(g(Y)\\) \u4e5f\u76f8\u4e92\u72ec\u7acb\u3002</p> <p>Proof</p> \\[ \\begin{align} P(f(X) \\in A, g(Y) \\in B) =&amp; P(X \\in f^{-1}(A), Y \\in g^{-1}(B)) \\\\                            =&amp; P(X \\in f^{-1}(A))P(Y \\in g^{-1}(B)) \\\\                            =&amp; P(f(X) \\in A)P(g(Y) \\in B) \\end{align} \\] </li> </ul>"},{"location":"math/prob_theory/chapter2/#_13","title":"\u591a\u7ef4\u968f\u673a\u5411\u91cf","text":"<p>\\(\\mathbf{X} = (X_1, X_2, \\cdots, X_n)\\) \u662f \\(n\\)-\u7ef4\u968f\u673a\u5411\u91cf\u3002</p> <ul> <li> <p>\\(n\\)-\u5143\u8054\u5408\u5206\u5e03\u51fd\u6570</p> \\[ F_{\\mathbf{X}}(\\mathbf{x}) = P(X_1 \\leq x_1, X_2 \\leq x_2, \\cdots, X_n \\leq x_n) \\] </li> <li> <p>\u8fb9\u9645\u5206\u5e03</p> \\[ F_{X_i}(x_i) = F_{\\mathbf{X}}(\\infty, \\cdots, \\infty, x_i, \\infty, \\cdots, \\infty) = P(X_i \\leq x_i) \\] </li> <li> <p>\u72ec\u7acb\u968f\u673a\u53d8\u91cf</p> \\[ F_{\\mathbf{X}}(\\mathbf{x}) = \\prod_{i=1}^{n}F_{X_i}(x_i) \\] <p>\u5219 \\(X_1, X_2, \\cdots, X_n\\) \u76f8\u4e92\u72ec\u7acb\u3002</p> </li> </ul>"},{"location":"math/prob_theory/chapter2/#_14","title":"\u968f\u673a\u5411\u91cf\u7684\u8fd0\u7b97","text":""},{"location":"math/prob_theory/chapter2/#_15","title":"\u968f\u673a\u5411\u91cf\u7684\u52a0\u51cf","text":"<ul> <li> <p>\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf</p> <p>\u5206\u5e03\u4e3a</p> \\[ P(X = x_i, Y = y_j) = p_{ij} \\] <p>\u8bb0 \\(Z = X + Y\\)\uff0c\u5219</p> \\[ P(Z = z_k) = \\sum_{i,j: x_i + y_j = z_k}p_{ij} \\] </li> <li> <p>\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf</p> \\[ \\begin{align*} F_Z(z) = P(X + Y \\leq z) =&amp; \\int_{-\\infty}^{\\infty}\\int_{-\\infty}^{z-x}p(x,y)\\text{d}y\\text{d}x \\\\                          =&amp; \\int_{-\\infty}^{z}\\int_{-\\infty}^{\\infty}p(x, y - x)\\text{d}y\\text{d}x \\end{align*} \\] <p>\u5bc6\u5ea6\u51fd\u6570</p> \\[ p_Z(z) = \\int_{-\\infty}^{\\infty}p(x, z - x)\\text{d}x \\] <p>\u51cf\u6cd5\u7c7b\u4f3c\uff1a\\(Z = Y - X\\)</p> \\[ p_Z(z) = \\int_{-\\infty}^{\\infty}p(x, x + z)\\text{d}x \\] </li> </ul> <p>\\(\\Gamma(\\alpha, \\beta)\\) \u5206\u5e03</p> <p>\u4ee4 \\(\\alpha, \\beta &gt; 0\\)\uff0c\u5b9a\u4e49</p> \\[ \\Gamma(\\alpha) = \\int_{0}^{\\infty}x^{\\alpha - 1}e^{-x}\\text{d}x \\] <p>\\(\\Gamma(n) = (n - 1)!, \\Gamma(\\alpha + 1) = \\alpha\\Gamma(\\alpha)\\)</p> <p>\u5206\u5e03\u5bc6\u5ea6\u51fd\u6570</p> \\[ p(x; \\alpha, \\beta) = \\frac{\\beta^\\alpha}{\\Gamma(\\alpha)}x^{\\alpha - 1}e^{-\\beta x}, \\quad x &gt; 0 \\]"},{"location":"math/prob_theory/chapter2/#_16","title":"\u968f\u673a\u5411\u91cf\u7684\u4e58\u9664","text":"<ul> <li> <p>\u4e58\u6cd5</p> <p>\u5047\u8bbe \\((X,Y)\\) \u662f\u8fde\u7eed\u578b\u968f\u673a\u5411\u91cf\uff0c\\(Z = XY\\)\uff0c\u5219</p> \\[ \\begin{align*} F_Z(z) =&amp; P(XY \\leq z) \\\\     =&amp; \\int_{xy \\leq z}p(x, y)\\text{d}x\\text{d}y \\\\     =&amp; \\int_{-\\infty}^{0}\\text{d}x\\int_{z/x}^{\\infty}p(x, y)\\text{d}y + \\int_{0}^{\\infty}\\text{d}x\\int_{-\\infty}^{z/x}p(x, y)\\text{d}y \\\\     =&amp; -\\int_{-\\infty}^{0}\\text{d}x\\int_{-\\infty}^{z}\\frac{1}{x}p(x, \\frac{y}{x})\\text{d}y + \\int_{0}^{\\infty}\\text{d}x\\int_{-\\infty}^{z}\\frac{1}{x}p(x, \\frac{y}{x})\\text{d}y \\\\     =&amp; -\\int_{-\\infty}^{z}\\int_{-\\infty}^{0}\\frac{1}{x}p(x, \\frac{y}{x})\\text{d}x\\text{d}y + \\int_{-\\infty}^{z}\\int_{0}^{\\infty}\\frac{1}{x}p(x, \\frac{y}{x})\\text{d}x\\text{d}y \\end{align*} \\] <p>\u5bc6\u5ea6\u51fd\u6570</p> \\[ \\begin{align*} p_Z(z) =&amp; -\\int_{-\\infty}^{0}\\frac{1}{x}p(x, \\frac{z}{x})\\text{d}x + \\int_{0}^{\\infty}\\frac{1}{x}p(x, \\frac{z}{x})\\text{d}x \\\\     =&amp; \\int_{-\\infty}^{\\infty}\\frac{1}{|x|}p(x, \\frac{z}{x})\\text{d}x \\end{align*} \\] </li> <li> <p>\u9664\u6cd5</p> <p>\\(Z = \\frac{Y}{X}\\) \u7684\u5bc6\u5ea6\u51fd\u6570</p> \\[ p_Z(z) = \\int_{-\\infty}^{\\infty}|x|p(x, xz)\\text{d}x \\] </li> </ul> <p>Cauchy \u5206\u5e03</p> \\[ p(x; x_0, \\gamma) = \\frac{1}{\\pi}\\frac{\\gamma}{(x - x_0)^2 + \\gamma^2} \\]"},{"location":"math/prob_theory/chapter2/#_17","title":"\u968f\u673a\u5411\u91cf\u7684\u53d8\u6362","text":"<p>\\((X, Y)\\) \u4e3a\u8fde\u7eed\u578b\u968f\u673a\u5411\u91cf\uff0c\u6709\u8054\u5408\u5bc6\u5ea6\u51fd\u6570 \\(p_{XY}(x, y)\\)\uff0c\u53d8\u6362\u5982\u4e0b</p> \\[ \\begin{cases} U = f_1(X, Y) \\\\ V = f_2(X, Y) \\end{cases} \\] <ul> <li> <p>\u57fa\u672c\u65b9\u6cd5</p> \\[ \\begin{align*} P(U \\leq u, V \\leq v) =&amp; P(f_1(X, Y) \\leq u, f_2(X, Y) \\leq v) \\\\     =&amp; \\iint_{f_1(x, y) \\leq u, f_2(x, y) \\leq v}p_{XY}(x, y)\\text{d}x\\text{d}y \\end{align*} \\] </li> <li> <p>\u7279\u6b8a\u60c5\u5f62</p> <p>\u5047\u8bbe \\(f_1, f_2\\) \u5b58\u5728\u9006\u53d8\u6362\uff1a</p> \\[ \\begin{cases} X = g_1(u, v) \\\\ Y = g_2(u, v) \\end{cases} \\] <p>\u5047\u8bbe \\(g_1, g_2\\) \u53ef\u5fae\uff0c\u4e14\u96c5\u53ef\u6bd4\u5f0f</p> \\[ J = \\frac{\\partial(x, y)}{\\partial(u, v)} \\] <p>\u90a3\u4e48 \\((U, V)\\) \u7684\u4e3a\u8fde\u7eed\u578b\u968f\u673a\u5411\u91cf\uff0c\u5176\u5bc6\u5ea6\u51fd\u6570\u4e3a</p> \\[ p_{UV}(u, v) = p_{XY}(x, y)|J| \\] </li> </ul>"},{"location":"math/prob_theory/chapter2/#_18","title":"\u6781\u503c\u968f\u673a\u53d8\u91cf","text":"<p>\\(X_1, X_2, \\cdots, X_n\\) \u662f\u72ec\u7acb\u968f\u673a\u53d8\u91cf\uff0c\u6709\u76f8\u540c\u7684\u5206\u5e03\u51fd\u6570 \\(F(x)\\)\uff0c\u8bb0</p> \\[ X_{(1)} \\leq X_{(2)} \\leq \\cdots \\leq X_{(n)} \\] <p>\u5373 \\(X_{(k)}\\) \u4e3a\u7b2c k \u5c0f\u503c\u3002\\(X_{(1)} = \\min\\{X_1, X_2, \\cdots, X_n\\}\\)\uff0c\\(X_{(n)} = \\max\\{X_1, X_2, \\cdots, X_n\\}\\)\u3002</p> <ul> <li> <p>\\(X_{(n)}\\) \u7684\u5206\u5e03</p> \\[ \\begin{align*} F_{X_{(n)}}(x) =&amp; P(X_{(n)} \\leq x) \\\\     =&amp; P(X_1 \\leq x, X_2 \\leq x, \\cdots, X_n \\leq x) \\\\     =&amp; P(X_1 \\leq x)P(X_2 \\leq x)\\cdots P(X_n \\leq x) \\\\     =&amp; F^n(x) \\end{align*} \\] <p>\u5bc6\u5ea6\u51fd\u6570</p> \\[ p_{X_{(n)}}(x) = \\frac{\\text{d}F_{X_{(n)}}}{\\text{d}x} = nF^{n-1}(x)F'(x) \\] </li> <li> <p>\\(X_{(1)}\\) \u7684\u5206\u5e03</p> \\[ \\begin{align*} F_{X_{(1)}}(x) =&amp; P(X_{(1)} \\leq x) \\\\     =&amp; 1 - P(X_{(1)} &gt; x) \\\\     =&amp; 1 - P(X_1 &gt; x, X_2 &gt; x, \\cdots, X_n &gt; x) \\\\     =&amp; 1 - P(X_1 &gt; x)P(X_2 &gt; x)\\cdots P(X_n &gt; x) \\\\     =&amp; 1 - (1 - F(x))^n \\end{align*} \\] <p>\u5bc6\u5ea6\u51fd\u6570</p> \\[ p_{X_{(1)}}(x) = \\frac{\\text{d}F_{X_{(1)}}}{\\text{d}x} = n(1 - F(x))^{n-1}F'(x) \\] </li> <li> <p>\\(X_{(k)}\\) \u7684\u5206\u5e03</p> \\[ \\begin{align*} F_{X_{(k)}}(x) =&amp; P(X_{(k)} \\leq x) \\\\     =&amp; {n \\choose k} F^k(x)(1 - F(x))^{n-k} \\end{align*} \\] </li> </ul> <p>Example</p> <p>\u8bbe \\(X_1, X_2, \\cdots, X_n\\) \u76f8\u4e92\u72ec\u7acb\u4e14\u670d\u4ece \\([0, a]\\) \u4e0a\u7684\u5747\u5300\u5206\u5e03\uff0c\u6c42 \\(Y = \\max\\{X_1, X_2, \\cdots, X_n\\}, Z = \\min\\{X_1, X_2, \\cdots, X_n\\}\\) \u7684\u8054\u5408\u5206\u5e03\u3002</p> <p>\u89e3\uff1a</p> \\[ \\begin{align*} F_{YZ}(y, z) =&amp; P(Y \\leq y, Z \\leq z) \\\\     =&amp; P(Y \\leq y) - P(Y \\leq y, Z &gt; z) \\\\     =&amp; F_X^n(y) - \\prod_{i=1}^{n}P(z &lt; X_i \\leq y) \\\\     =&amp; F_X^n(y) - (F_X(y) - F_X(z))^n \\\\     =&amp; (\\frac{y}{a})^n - (\\frac{y-z}{a})^n, \\quad 0 \\leq z \\leq y \\leq a \\end{align*} \\]"},{"location":"math/prob_theory/chapter2/#_19","title":"\u603b\u7ed3","text":"<ul> <li> <p>\u4e8c\u9879 Bernoulli \u5206\u5e03</p> \\[ P(X = k) = {n \\choose k}p^k(1-p)^{n-k}, \\quad k = 0, 1, \\cdots, n \\] <p>Poisson \u5206\u5e03\uff1a</p> \\[ P(X = k) = \\frac{\\lambda^k}{k!}e^{-\\lambda}, \\quad k = 0, 1, \\cdots \\] <p>\u51e0\u4f55\u5206\u5e03\uff1a\u4e0d\u65ad\u91cd\u590d\u76f4\u5230\u4e8b\u4ef6\u53d1\u751f</p> \\[ P(X = k) = p(1-p)^{k-1}, \\quad k = 1, 2, \\cdots \\] <p>\u8d85\u51e0\u4f55\u5206\u5e03\uff1a\\(N\\) \u4ef6\u4ea7\u54c1 \\(M\\) \u4ef6\u6b21\u54c1\uff0c\u968f\u673a\u62bd\u6837 \\(n\\) \u4ef6\uff0c\\(X\\) \u8868\u793a \\(n\\) \u4ef6\u4ea7\u54c1\u4e2d\u6b21\u54c1\u6570</p> \\[ P(X = k) = \\frac{{M \\choose k}{N - M \\choose n - k}}{{N \\choose n}}, \\quad k = 0, 1, \\cdots, \\min\\{M, n\\} \\] <p>\u6307\u6570\u5206\u5e03</p> \\[ p(x) = \\begin{cases} \\lambda e^{-\\lambda x}, &amp; x\\geq 0 \\\\ 0                     , &amp; \\text{\u5176\u4ed6} \\end{cases} \\quad \\lambda &gt; 0 \\] </li> <li> <p>\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf</p> <p>\u5bc6\u5ea6\u51fd\u6570 \\(p(x)\\)\uff0c\u5206\u5e03\u51fd\u6570 \\(F(x)\\)</p> \\[ p(x) \\geq 0, \\int_{-\\infty}^{\\infty}p(x)\\text{d}x = 1 \\] \\[ F(x) = P(X \\leq x) = \\int_{-\\infty}^{x}p(u)\\text{d}u \\] </li> </ul>"},{"location":"math/prob_theory/chapter3/","title":"\u6570\u5b57\u7279\u5f81","text":""},{"location":"math/prob_theory/chapter3/#_2","title":"\u6570\u5b66\u671f\u671b","text":""},{"location":"math/prob_theory/chapter3/#_3","title":"\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf","text":"\\[ X \\sim \\begin{pmatrix}     x_1 &amp; x_2 &amp; \\cdots &amp; x_n \\\\     p_1 &amp; p_2 &amp; \\cdots &amp; p_n \\end{pmatrix} \\] <p>\u671f\u671b</p> \\[ E(X) = \\sum_{i=1}^n x_i p_i \\]"},{"location":"math/prob_theory/chapter3/#_4","title":"\u7edd\u5bf9\u53ef\u6c42\u548c","text":"<p>\u8981\u6c42</p> \\[ \\sum_{i=1}^\\infty |x_i| p_i &lt; \\infty \\] <p>\u5373 \\(E(|X|)\\) \u7edd\u5bf9\u6536\u655b\u3002</p> <p>Note</p> <p>\u6761\u4ef6 \\(E(|X|) &lt; \\infty\\) \u8868\u793a\u671f\u671b \\(\\displaystyle\\sum_{i=1}^{\\infty}x_ip_i\\) \u7684\u6c42\u548c\u4e0d\u53d7\u6c42\u548c\u987a\u5e8f\u7684\u5f71\u54cd\u3002</p> <p>\u5f53\u8fd9\u4e2a\u6761\u4ef6\u4e0d\u6ee1\u8db3\u65f6\uff0c\u671f\u671b\u4e0d\u5b58\u5728\u3002</p>"},{"location":"math/prob_theory/chapter3/#_5","title":"\u8fde\u7eed\u6027\u968f\u673a\u53d8\u91cf","text":"<p>\u8bbe \\(X \\sim p(x)\\)\uff0c\u5219 \\(X\\) \u7684\u671f\u671b\u4e3a</p> \\[ EX = \\int_{-\\infty}^{\\infty} x p(x) \\ \\mathrm{d}x \\] <p>\u5b58\u5728\u6761\u4ef6\uff1a\u7edd\u5bf9\u53ef\u79ef\uff0c\u5373</p> \\[ \\int_{-\\infty}^{\\infty} |x| p(x) \\ \\mathrm{d}x &lt; \\infty \\]"},{"location":"math/prob_theory/chapter3/#_6","title":"\u671f\u671b\u7684\u6027\u8d28","text":"<ol> <li>\\(a \\leq X \\leq b \\Rightarrow a \\leq EX \\leq b\\)</li> <li> <p>\u7ebf\u6027\u8fd0\u7b97\u3001\u52a0\u6cd5\u5b9a\u7406</p> \\[ E(aX + bY) = aEX + bEY \\] </li> </ol>"},{"location":"math/prob_theory/chapter3/#_7","title":"\u968f\u673a\u53d8\u91cf\u51fd\u6570\u7684\u6570\u5b66\u671f\u671b","text":"<p>\u8bbe \\(f: \\mathbb{R} \\rightarrow \\mathbb{R}\\) \u662f\u4e00\u4e2a\u51fd\u6570\uff0c\\(X\\) \u662f\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u6c42 \\(Ef(X)\\)\u3002</p> <ul> <li> <p>\\(X\\) \u662f\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf</p> \\[ P(X = x_k) = p_k, k = 1, 2, \\cdots, N \\] <p>\u5219</p> \\[ Ef(X) = \\sum_{k=1}^{N} f(x_k) p_k \\] </li> <li> <p>\\(X\\) \u662f\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf</p> \\[ X \\sim p(x), -\\infty &lt; x &lt; \\infty \\] <p>\u5219</p> \\[ Ef(X) = \\int_{-\\infty}^{\\infty} f(x) p(x) \\ \\mathrm{d}x \\] </li> <li> <p>\\(X\\) \u662f\u6df7\u5408\u578b\u968f\u673a\u53d8\u91cf</p> <p>\\(X\\) \u6709\u5206\u5e03\u51fd\u6570 \\(F(x)\\)\uff0c\u5219</p> \\[ Ef(X) = \\int_{-\\infty}^{\\infty} f(x) \\ \\mathrm{d}F(x) \\] <p>\uff08\u9ece\u66fc\u79ef\u5206\uff09</p> </li> </ul>"},{"location":"math/prob_theory/chapter3/#_8","title":"\u65b9\u5dee","text":""},{"location":"math/prob_theory/chapter3/#_9","title":"\u65b9\u5dee\u7684\u5b9a\u4e49","text":"<p>\u8861\u91cf\u968f\u673a\u53d8\u91cf\u504f\u5dee\u7684\u5927\u5c0f\u3002</p> <p>\u6807\u51c6\u5dee\uff1a\\(\\sqrt{E((X - EX)^2)}\\)</p> <p>\u65b9\u5dee\uff1a\\(VarX = E((X - EX)^2)\\)</p>"},{"location":"math/prob_theory/chapter3/#_10","title":"\u65b9\u5dee\u7684\u8ba1\u7b97","text":"<p>\u516c\u5f0f\uff1a</p> \\[ VarX = E(X^2) - (EX)^2 \\]"},{"location":"math/prob_theory/chapter3/#_11","title":"\u65b9\u5dee\u7684\u6027\u8d28","text":"<ol> <li>\\(Var(X + a) = VarX\\)</li> <li>\\(Var(aX) = a^2 VarX\\)</li> <li>\\(Var(a + bX) = b^2 VarX\\)</li> <li>\\(Var(X + Y) = VarX + VarY + 2E(X - EX)(Y - EY) = VarX + VarY + 2Cov(X, Y)\\)</li> <li>\u5f53 \\(X\\) \u548c \\(Y\\) \u76f8\u4e92\u72ec\u7acb\u65f6\uff0c\\(Var(X + Y) = VarX + VarY\\)\uff0c\u72ec\u7acb\u548c\u7684\u65b9\u5dee\u7b49\u4e8e\u65b9\u5dee\u4e4b\u548c\u3002</li> <li> <p>\u5f53 \\(c \\not= EX\\) \u65f6\uff0c\\(Var(X) &lt; E((X - c)^2)\\)</p> <p>\u8bc1\u660e</p> \\[ \\begin{aligned} Var(X) &amp;= E((X - EX)^2) \\\\ &amp;= E((X - c - (EX- c))^2) \\\\ &amp;= E((X - c)^2 - 2(X - c)(EX - c) + (EX - c)^2) \\\\ &amp;= E((X - c)^2) - (EX - c)^2 \\\\ &amp;&lt; E((X - c)^2) \\end{aligned} \\] </li> <li> <p>\\(Var(\\sum_{i=1}^n X_i) = \\sum_{i=1}^n Var(X_i) + 2 \\sum_{i&lt;j} Cov(X_i, X_j)\\)</p> </li> </ol>"},{"location":"math/prob_theory/chapter3/#chebyshev","title":"Chebyshev \u4e0d\u7b49\u5f0f","text":"<p>\u8bbe \\(X\\) \u662f\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\\(\\forall \\varepsilon &gt; 0\\)\uff0c\u6709</p> \\[ P(|X - EX| &gt; \\varepsilon) \\leq \\frac{VarX}{\\varepsilon^2} \\] <p>\u8bc1\u660e</p> <p>\u8bbe \\(X \\sim p(x)\\)\uff0c\u5219</p> \\[ \\begin{aligned} P(|X - EX| &gt; \\varepsilon) &amp;= \\int_{|x-EX| &gt; \\varepsilon} p(x) \\ \\mathrm{d}x \\\\ &amp;\\leq \\int_{|x-EX| &gt; \\varepsilon} \\frac{(x - EX)^2}{\\varepsilon^2} p(x) \\ \\mathrm{d}x \\\\ &amp;\\leq \\frac{1}{\\varepsilon^2} \\int_{-\\infty}^{\\infty} (x - EX)^2 p(x) \\ \\mathrm{d}x \\\\ &amp;= \\frac{VarX}{\\varepsilon^2} \\end{aligned} \\] <p>\u63a8\u5e7f</p> <p>\u8bbe \\(f\\) \u662f\u5355\u8c03\u4e0d\u51cf\u4e25\u683c\u6b63\u51fd\u6570\uff0c\u5219</p> \\[ P(X &gt; \\varepsilon) \\leq \\frac{E(f(X))}{f(\\varepsilon)} \\] <p>\u8bc1\u660e</p> \\[ \\begin{aligned} P(X &gt; \\varepsilon) &amp;= \\int_{\\varepsilon}^{\\infty} p(x) \\ \\mathrm{d}x \\\\ &amp;\\leq \\int_{\\varepsilon}^{\\infty} \\frac{f(x)}{f(\\varepsilon)} p(x) \\ \\mathrm{d}x \\\\ &amp;= \\frac{1}{f(\\varepsilon)} \\int_{-\\infty}^{\\infty} f(x) p(x) \\ \\mathrm{d}x \\\\ &amp;= \\frac{E(f(X))}{f(\\varepsilon)} \\end{aligned} \\]"},{"location":"math/prob_theory/chapter3/#_12","title":"\u5e94\u7528","text":"<ol> <li> <p>\u8bbe \\(X \\sim N(\\mu, \\sigma^2)\\)\uff0c\u5219</p> \\[ P(|X - \\mu| &gt; 3\\sigma) \\leq \\frac{\\sigma^2}{9\\sigma^2} = \\frac{1}{9} \\] <p>\u8fd9\u79cd\u65b9\u6cd5\u4e0a\u754c\u4e0e\u771f\u5b9e\u503c\u76f8\u5dee\u5f88\u5927</p> </li> <li> <p>\u8bbe \\(S_n \\sim B(n, p)\\)\uff0c\u5176\u4e2d \\(p\\) \u672a\u77e5\uff0c\u60f3\u8981\u7528 \\(\\dfrac{S_n}{n}\\) \u6765\u4f30\u8ba1 \\(p\\)\uff0c\u5219\u8bd5\u9a8c\u6b21\u6570 \\(n\\) \u548c\u7cbe\u5ea6 \\(\\varepsilon\\) \u7684\u5927\u81f4\u5173\u7cfb\uff1a</p> \\[ \\begin{aligned} P(|\\frac{S_n}{n} - p| &gt; \\varepsilon) &amp;\\leq \\frac{Var(\\frac{S_n}{n})}{\\varepsilon^2} \\\\ &amp;= \\frac{Var(S_n)}{n^2 \\varepsilon^2} \\\\ &amp;= \\frac{p(1-p)}{n \\varepsilon^2} \\\\ &amp;\\leq \\frac{1}{4n \\varepsilon^2} \\end{aligned} \\] <p>\u6539\u8fdb</p> <p>\u4ee4 \\(f(x) = x^4\\)\uff0c\u5219</p> \\[ \\begin{aligned} P(|\\frac{S_n}{n} - p| &gt; \\varepsilon) &amp;\\leq \\frac{E(\\frac{S_n}{n} - p)^4}{\\varepsilon^4} \\\\ &amp;= \\frac{E(S_n - np)^4}{n^4 \\varepsilon^4} \\\\ &amp;\\approx \\frac{c}{n^2 \\varepsilon^4} \\end{aligned} \\] </li> <li> <p>\u5f53 \\(VarX = 0\\)\uff0c\u5219</p> \\[ P(X = EX) = 1 \\] <p>\u8bc1\u660e</p> <p>\u5373\u8bc1 \\(P(|X - EX| &gt; 0) = 0\\)\u3002</p> <p>\u5bf9\u4e8e \\(\\forall \\varepsilon &gt; 0\\)\uff0c\u6709</p> \\[ P(|X - EX| &gt; \\varepsilon) \\leq \\frac{VarX}{\\varepsilon^2} = 0 \\] <p>\u56e0\u6b64</p> \\[ \\begin{aligned} P(|X - EX| &gt; 0) &amp;= P(\\bigcup_{n=1}^{\\infty} \\{|X - EX| &gt; \\frac{1}{n}\\}) \\\\ &amp;\\leq \\sum_{n=1}^{\\infty} P(|X - EX| &gt; \\frac{1}{n}) \\\\ &amp;= 0 \\end{aligned} \\] <p>\u8bc1\u6bd5\u3002</p> </li> </ol>"},{"location":"math/prob_theory/chapter3/#_13","title":"\u534f\u65b9\u5dee","text":"<ul> <li> <p>\u5747\u503c\u5411\u91cf\uff1a\\(\\vec{\\mu} = (EX, EY)\\) \u8868\u793a\u5411\u91cf\u5747\u503c\u3002</p> </li> <li> <p>\u534f\u65b9\u5dee\uff1a\u5047\u8bbe \\(X\\) \u548c \\(Y\\) \u7684\u65b9\u5dee\u5b58\u5728\uff0c\u4ee4</p> \\[ Cov(X, Y) = E[(X - EX)(Y - EY)] \\] <p>\u8868\u793a \\(X\\) \u548c \\(Y\\) \u7684\u534f\u65b9\u5dee\u3002</p> <p>\u8ba1\u7b97\u516c\u5f0f\uff1a\\(Cov(X, Y) = EXY - EXEY\\)</p> </li> <li> <p>\u8fd0\u7b97\u6027\u8d28\uff1a</p> \\[ \\begin{aligned} Cov(aX + b, cY + d) &amp;= E[(aX + b)(cY + d)] - E(aX + b)E(cY + d) \\\\ &amp;= acE(XY) - acEXEY \\\\ &amp;= acCov(X, Y) \\end{aligned} \\] </li> </ul>"},{"location":"math/prob_theory/chapter3/#cauchy-schwarz","title":"Cauchy-Schwarz \u4e0d\u7b49\u5f0f","text":"\\[ E|X - EX||Y - EY| \\leq \\sqrt{E(X - EX)^2E(Y - EY)^2} \\] <p>\u8bc1\u660e</p> <p>\u4e0d\u59a8\u8bbe \\(EX = EY = 0\\)\uff0c\u5219\u9700\u8981\u8bc1\u660e</p> \\[ E|XY| \\leq \\sqrt{EX^2 EY^2} \\] <p>\u5bf9\u4e8e \\(\\forall t &gt; 0\\)\uff0c\u6709</p> \\[ \\begin{aligned} 0 &amp;\\leq E(|X| + t|Y|)^2 \\\\ &amp;= EX^2 + 2tE|XY| + t^2 EY^2 , \\forall t &gt; 0 \\end{aligned} \\] <p>\u5219 \\(EX^2 + 2tE|XY| + t^2 EY^2 \\geq 0\\)\uff0c\u6545</p> \\[ \\Delta = 4E^2|XY| - 4EX^2EY^2 \\leq 0 \\] <p>\u5373</p> \\[ E^2|XY| \\leq EX^2EY^2 \\Rightarrow E|XY| \\leq \\sqrt{EX^2EY^2} \\]"},{"location":"math/prob_theory/chapter3/#_14","title":"\u534f\u65b9\u5dee\u77e9\u9635","text":"<p>\u5047\u8bbe \\(X\\) \u548c \\(Y\\) \u7684\u65b9\u5dee\u5b58\u5728\uff0c\u4ee4</p> \\[ \\Sigma = \\begin{pmatrix}     VarX &amp; Cov(X, Y) \\\\     Cov(X, Y) &amp; VarY \\end{pmatrix} \\] <p>\u79f0\u4e3a \\(X\\) \u548c \\(Y\\) \u7684\u534f\u65b9\u5dee\u77e9\u9635\u3002</p>"},{"location":"math/prob_theory/chapter3/#_15","title":"\u534f\u65b9\u5dee\u77e9\u9635\u7684\u6027\u8d28","text":"<ol> <li> <p>\\(\\Sigma\\) \u975e\u8d1f\u5b9a\uff0c\u5bf9\u4e8e \\(\\forall x, y \\in \\mathbb{R}\\)\uff0c\u6709</p> \\[ (x, y) \\begin{pmatrix}     VarX &amp; Cov(X, Y) \\\\     Cov(X, Y) &amp; VarY \\end{pmatrix} \\begin{pmatrix}     x \\\\     y \\end{pmatrix} \\geq 0 \\] <p>\u8bc1\u660e</p> \\[ \\begin{aligned} (x, y) \\begin{pmatrix}     VarX &amp; Cov(X, Y) \\\\     Cov(X, Y) &amp; VarY \\end{pmatrix} \\begin{pmatrix}     x \\\\     y \\end{pmatrix} &amp;= x^2 VarX + 2xy Cov(X, Y) + y^2 VarY \\\\ &amp;= x^2 E(X - EX)^2 + 2xy E[(X - EX)(Y - EY)] + y^2 E(Y - EY)^2 \\\\ &amp;= E[x(X - EX) + y(Y - EY)]^2 \\\\ &amp;\\geq 0 \\end{aligned} \\] </li> <li> <p>\u5982\u679c \\(X,Y\\) \u72ec\u7acb\uff0c\u5219</p> \\[ Cov(X, Y) = 0 \\] <p>\u8bc1\u660e</p> \\[ \\begin{aligned} Cov(X, Y) &amp;= E[(X - EX)(Y - EY)] \\\\ &amp;= E(X - EX)E(Y - EY) \\\\ &amp;= 0 \\end{aligned} \\] </li> </ol> <p>\u5b9a\u4e49</p> <p>\u82e5</p> \\[ Cov(X, Y) = 0 \\] <p>\u5219\u79f0 \\(X\\) \u548c \\(Y\\) \u4e0d\u76f8\u5173\u3002</p> <p>\u5982\u679c \\(X\\) \u548c \\(Y\\) \u72ec\u7acb\uff0c\u5219 \\(X\\) \u548c \\(Y\\) \u4e0d\u76f8\u5173\uff0c\u4f46\u53cd\u4e4b\u4e0d\u6210\u7acb\u3002</p> <ol> <li> <p>\\(X,Y\\) \u4e0d\u76f8\u5173\u5e76\u4e0d\u610f\u5473\u7740 \\(X,Y\\) \u72ec\u7acb\u3002</p> <p>\u4f8b</p> <p>\u8bbe \\(\\theta \\sim U(0, 2\\pi)\\)\uff0c\\(X = \\cos \\theta\\)\uff0c\\(Y = \\sin \\theta\\)\uff0c\u5219</p> \\[ EX = EY = 0, VarX = VarY = \\frac{1}{2}, Cov(X, Y) = 0 \\] <p>\u4f46</p> \\[ X^2 + Y^2 \\equiv 1 \\] <p>\u56e0\u6b64 \\(X,Y\\) \u4e0d\u72ec\u7acb\u3002</p> </li> </ol> <p>\u4e8c\u5143\u8054\u5408\u6b63\u6001\u5206\u5e03</p> <p>\u8bbe \\((X,Y) \\sim N(\\mu_1, \\sigma_1^2, \\mu_2, \\sigma_2^2, \\rho)\\)\uff0c\u5219</p> \\[ Cov(X, Y) = \\rho \\sigma_1 \\sigma_2 \\]"},{"location":"math/prob_theory/chapter3/#_16","title":"\u7ebf\u6027\u53d8\u6362\u540e\u7684\u534f\u65b9\u5dee\u77e9\u9635","text":"<p>\u8bbe \\(N\\) \u7ef4\u968f\u673a\u5411\u91cf \\(\\mathbf{X} = (X_1, X_2, \\cdots, X_N)^T\\) \u670d\u4ece\u5747\u503c \\(E(\\mathbf{X}) = 0\\)\uff0c\u534f\u65b9\u5dee\u77e9\u9635\u4e3a \\(\\Sigma_{\\mathbf{X}}\\) \u7684\u6b63\u6001\u5206\u5e03\uff0c\u8bbe\u968f\u673a\u5411\u91cf</p> \\[ \\mathbf{Y} = \\mathbf{A} \\mathbf{X} \\] <p>\u5219\u968f\u673a\u5411\u91cf \\(\\mathbf{Y}\\) \u7684\u5747\u503c\u548c\u534f\u65b9\u5dee\u77e9\u9635\u6ee1\u8db3\uff1a</p> \\[ \\begin{aligned} E(\\mathbf{Y}) = \\mathbf{A} E(\\mathbf{X}) = 0 \\\\ \\Sigma_{\\mathbf{Y}} = \\mathbf{A} \\Sigma_{\\mathbf{X}} \\mathbf{A}^T \\end{aligned} \\] <p>\u8bc1\u660e</p> <p>\\(E(\\mathbf{Y}) = \\mathbf{A} E(\\mathbf{X}) = 0\\) \u663e\u7136\u3002</p> <p>\u8bbe \\(\\mathbf{A} = (a_{ij})_{N \\times N}\\)\uff0c\u5219\u5bf9\u4e8e \\(\\forall 1 \\leq i, j \\leq N\\)\uff0c\u6709</p> \\[ \\begin{aligned} Cov(Y_i, Y_j) &amp;= E((Y_i - EY_i)(Y_j - EY_j)) \\\\ &amp;= E(Y_i Y_j) \\\\ &amp;= E(\\sum_{k=1}^N a_{ik} X_k \\sum_{l=1}^N a_{jl} X_l) \\\\ &amp;= \\sum_{k=1}^N \\sum_{l=1}^N a_{ik} E(X_k X_l) a_{jl} \\end{aligned} \\] <p>\u53c8\u6709 \\(Cov(X_i, X_j) = E((X_i - EX_i)(X_j - EX_j)) = E(X_i X_j)\\)\uff0c\u56e0\u6b64</p> \\[ \\begin{aligned} Cov(Y_i, Y_j) &amp;= \\sum_{k=1}^N \\sum_{l=1}^N a_{ik} Cov(X_k, X_l) a_{jl} \\\\ &amp;= \\sum_{l=1}^N a_{jl} \\sum_{k=1}^N a_{ik} Cov(X_k, X_l) \\end{aligned} \\] <p>\u7531\u4e8e \\(\\Sigma_{\\mathbf{X}} = (Cov(X_i, X_j))_{N \\times N}, \\Sigma_{\\mathbf{Y}} = (Cov(Y_i, Y_j))_{N \\times N}\\)\uff0c\u56e0\u6b64\u53ef\u4ee5\u770b\u51fa</p> \\[ \\Sigma_{\\mathbf{Y}} = \\mathbf{A} \\Sigma_{\\mathbf{X}} \\mathbf{A}^T \\]"},{"location":"math/prob_theory/chapter3/#_17","title":"\u76f8\u5173\u7cfb\u6570","text":"<p>\u5b9a\u4e49</p> \\[ \\gamma = \\frac{Cov(X, Y)}{\\sqrt{VarX} \\sqrt{VarY}} \\] <p>\u79f0\u4e3a \\(X\\) \u548c \\(Y\\) \u7684\u76f8\u5173\u7cfb\u6570\uff0c\u53cd\u6620 \\(X\\) \u548c \\(Y\\) \u4e4b\u95f4\u7684\u76f8\u5173\u7a0b\u5ea6\u3002</p>"},{"location":"math/prob_theory/chapter3/#_18","title":"\u76f8\u5173\u7cfb\u6570\u7684\u6027\u8d28","text":"<ol> <li> <p>\u7531 Cauchy-Schwarz \u4e0d\u7b49\u5f0f\u53ef\u77e5</p> \\[ |\\gamma| \\leq 1 \\] </li> <li> <p>\u5f53 \\(\\gamma = 1\\) \u65f6\uff0c\u5b58\u5728 \\(t_0 = \\sqrt{\\dfrac{VarX}{VarY}}\\)\uff0c\u4f7f\u5f97</p> \\[ P(X = t_0(Y - EY) + EX) = 1 \\] <p>\u5373 \\(X\\) \u548c \\(Y\\) \u662f\u6b63\u7ebf\u6027\u76f8\u5173\u7684\u3002</p> <p>\u8bc1\u660e</p> <p>\u5373\u8bc1 \\(X - EX - t_0(Y - EY) = 0\\)\u3002</p> <p>\u7531 \\(\\gamma = 1\\) \u53ef\u77e5</p> \\[ Cov(X, Y) = \\sqrt{VarX} \\sqrt{VarY} \\] <p>\u53d6 \\(t_0 = \\sqrt{\\dfrac{VarX}{VarY}}\\)\uff0c\u6709</p> \\[ \\begin{aligned} E(X - EX - t_0(Y - EY))^2 &amp;= E(X - EX)^2 + t_0^2 E(Y - EY)^2 - 2t_0 E(X - EX)(Y - EY) \\\\ &amp;= VarX + t_0^2 VarY - 2t_0 Cov(X, Y) \\\\ &amp;= 2VarX - 2\\sqrt{\\frac{VarX}{VarY}} (\\sqrt{VarX} \\sqrt{VarY}) \\\\ &amp;= 0 \\end{aligned} \\] <p>\u56e0\u6b64</p> \\[ X - EX - t_0(Y - EY) = E(X - EX - t_0(Y - EY)) = 0 \\] <p>\u8bc1\u6bd5\u3002</p> <p>\u7c7b\u4f3c\uff0c\u5f53 \\(\\gamma = -1\\) \u65f6\uff0c\u5b58\u5728 \\(t_0 = -\\sqrt{\\dfrac{VarX}{VarY}}\\)\uff0c\u4f7f\u5f97</p> \\[ P(X = t_0(Y - EY) + EX) = 1 \\] <p>\u5373 \\(X\\) \u548c \\(Y\\) \u662f\u8d1f\u7ebf\u6027\u76f8\u5173\u7684\u3002</p> </li> <li> <p>\u6709</p> \\[ \\gamma = 0 \\Leftrightarrow \\text{\u4e0d\u76f8\u5173} \\] <p>\u201c\u4e0d\u76f8\u5173\u201d\u53ef\u4ee5\u89e3\u91ca\u4e3a\u201c\u4e0d\u7ebf\u6027\u76f8\u5173\u201d\u3002</p> </li> </ol>"},{"location":"math/prob_theory/chapter3/#_19","title":"\u6761\u4ef6\u671f\u671b\u4e0e\u5168\u671f\u671b\u516c\u5f0f","text":""},{"location":"math/prob_theory/chapter3/#_20","title":"\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\u7684\u6761\u4ef6\u671f\u671b","text":"<p>\u7ed9\u5b9a \\(Y = y_j\\)\uff0c\\(X\\) \u7684\u6761\u4ef6\u671f\u671b\u4e3a</p> \\[ E(X|Y = y_j) = \\sum_{i=1}^\\infty x_i P(X = x_i | Y = y_j) \\] <p>\u8981\u6c42</p> \\[ \\sum_{i=1}^\\infty |x_i| P(X = x_i | Y = y_j) &lt; \\infty \\] <p>\u5426\u5219\u6761\u4ef6\u671f\u671b\u4e0d\u5b58\u5728\u3002</p>"},{"location":"math/prob_theory/chapter3/#_21","title":"\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\u7684\u6761\u4ef6\u671f\u671b","text":"<p>\u7ed9\u5b9a \\(Y = y\\)\uff0c\\(X\\) \u7684\u6761\u4ef6\u671f\u671b\u4e3a</p> \\[ E(X|Y = y) = \\int_{-\\infty}^{\\infty} x P(X = x | Y = y) \\ \\mathrm{d}x \\] <p>\u8981\u6c42</p> \\[ \\int_{-\\infty}^{\\infty} |x| P(X = x | Y = y) \\ \\mathrm{d}x &lt; \\infty \\] <p>\u5426\u5219\u6761\u4ef6\u671f\u671b\u4e0d\u5b58\u5728\u3002</p> <p>\u4e8c\u5143\u8054\u5408\u6b63\u6001\u5206\u5e03\u7684\u6761\u4ef6\u671f\u671b</p> <p>\\((X, Y) \\sim N(\\mu_1, \\sigma_1^2, \\mu_2, \\sigma_2^2, \\rho)\\)\uff0c\u5219</p> <p>\u7ed9\u5b9a \\(Y = y\\)\uff0c\\(X\\) \u7684\u6761\u4ef6\u5206\u5e03\u4e3a</p> \\[ X \\sim N(\\mu_1 + \\rho \\frac{\\sigma_1}{\\sigma_2}(y - \\mu_2), \\sigma_1^2(1 - \\rho^2)) \\] <p>\u56e0\u6b64</p> \\[ E(X|Y = y) = \\mu_1 + \\rho \\frac{\\sigma_1}{\\sigma_2}(y - \\mu_2) \\] <p>\u4ee4 \\(g(y) = E(X|Y = y)\\)\uff0c\u5219</p> \\[ \\begin{aligned} Eg(Y) &amp;= E(\\mu_1 + \\rho \\frac{\\sigma_1}{\\sigma_2}(Y - \\mu_2)) \\\\ &amp;= \\mu_1 + \\rho \\frac{\\sigma_1}{\\sigma_2}(EY - \\mu_2) \\\\ &amp;= EX \\end{aligned} \\] <p>\u5373 \\(E_Y(E_X(X|Y)) = EX\\)\u3002</p>"},{"location":"math/prob_theory/chapter3/#_22","title":"\u5168\u671f\u671b\u516c\u5f0f","text":"<p>\u8bbe \\(X,Y\\) \u662f\u968f\u673a\u53d8\u91cf\uff0c\u4ee4</p> \\[ g(y) = E(X|Y = y) \\] <p>\u5373 \\(g(Y) = E(X|Y)\\)\uff0c\u5219</p> \\[ \\begin{aligned} Eg(Y) &amp;= \\sum_{j=1}^\\infty g(y_j) P(Y = y_j) \\\\ &amp;= \\sum_{j=1}^\\infty \\sum_{i=1}^\\infty x_i P(X = x_i | Y = y_j) P(Y = y_j) \\\\ &amp;= \\sum_{i=1}^\\infty x_i \\sum_{j=1}^\\infty P(X = x_i | Y = y_j) P(Y = y_j) \\\\ &amp;= \\sum_{i=1}^\\infty x_i P(X = x_i), \\qquad \\text{\u5168\u6982\u7387\u516c\u5f0f} \\\\ &amp;= EX \\end{aligned} \\] <p>\u7ed3\u8bba \\(E(E(X|Y)) = EX\\) \u79f0\u4e3a\u5168\u671f\u671b\u516c\u5f0f\u3002</p>"},{"location":"math/prob_theory/chapter3/#_23","title":"\u77e9","text":"<p>k \u9636\u77e9\uff08\u539f\u70b9\u77e9\uff09\uff1a\\(E(X^k)\\)</p> <p>k \u9636\u4e2d\u5fc3\u77e9\uff1a\\(E[(X - EX)^k]\\)</p> <p>\u968f\u673a\u53d8\u91cf\u7684\u5206\u5e03\u662f\u5426\u7531\u5176\u77e9\u552f\u4e00\u786e\u5b9a</p> <p>\u4e00\u822c\u60c5\u51b5\u4e0b\u4e0d\u80fd\u3002</p> <p>\u5b9a\u7406</p> <p>\u8bbe \\(X\\) \u548c \\(Y\\) \u662f\u4e24\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u5982\u679c\u5bf9\u4e8e \\(\\forall k \\geq 1\\)\uff0c\u6709</p> \\[ E(X^k) = E(Y^k) = m_k &lt; \\infty \\] <p>\u82e5\u4e0b\u5217\u4e09\u4e2a\u6761\u4ef6\u4e4b\u4e00\u6210\u7acb\uff1a</p> <ol> <li>\\(\\displaystyle\\sum_{k=1}^\\infty \\dfrac{m_{2k}t^{2k}}{(2k)!} &lt; \\infty, \\exists t &gt; 0\\)</li> <li>\\(\\displaystyle\\sum_{k=1}^\\infty m_{2k}^{-\\frac{1}{2k}} &lt; \\infty\\)</li> <li>\\(\\displaystyle\\lim_{k \\rightarrow \\infty} \\sup |m_k|^{\\frac{1}{k}} &lt; \\infty\\)</li> </ol> <p>\u5219 \\(X\\) \u548c \\(Y\\) \u7684\u5206\u5e03\u51fd\u6570\u76f8\u540c\u3002</p>"},{"location":"math/prob_theory/chapter3/#_24","title":"\u7279\u5f81\u51fd\u6570","text":"<p>\u8bbe \\(X \\sim F(x)\\)\uff0c\u5b9a\u4e49</p> \\[ \\varphi(t) = E(e^{itX}), t \\in \\mathbb{R} \\] <p>\u4e3a \\(X\\) \u7684\u7279\u5f81\u51fd\u6570\u3002\u5176\u4e2d \\(Ee^{itX} = E\\cos tX + iE\\sin tX\\) \u5b58\u5728\u4e14\u6709\u9650\u3002</p> <p>\u8ba1\u7b97\u516c\u5f0f\uff1a</p> \\[ \\begin{aligned} \\varphi(t) &amp;= E(e^{itX}) \\\\ &amp;= \\int_{-\\infty}^{\\infty} e^{itx} p(x) \\ \\mathrm{d}x \\\\ &amp;= \\int_{-\\infty}^{\\infty} e^{itx} \\ \\mathrm{d}F(x) \\end{aligned} \\]"},{"location":"math/prob_theory/chapter3/#_25","title":"\u7279\u5f81\u51fd\u6570\u7684\u6027\u8d28","text":"<ol> <li>\\(\\varphi(0) = 1\\)</li> <li> <p>\\(|\\varphi(t)| \\leq 1 = \\varphi(0)\\)</p> <p>\u8bc1\u660e</p> \\[ \\begin{aligned} |\\varphi(t)| &amp;= |E(e^{itX})| \\\\ &amp;= |\\int_{-\\infty}^{\\infty} e^{itx} \\ \\mathrm{d}F(x)| \\\\ &amp;\\leq \\int_{-\\infty}^{\\infty} |e^{itx}| \\ \\mathrm{d}F(x) \\\\ &amp;= 1 \\end{aligned} \\] </li> <li> <p>\\(\\varphi(-t) = \\overline{\\varphi(t)}\\)</p> </li> <li> <p>\\(\\varphi(t)\\) \u5728 \\(\\mathbb{R}\\) \u4e0a\u4e00\u81f4\u8fde\u7eed</p> <p>\u8bc1\u660e</p> <p>\u5373\u8bc1\uff0c\u5bf9\u4e8e \\(\\forall \\varepsilon &gt; 0\\)\uff0c\\(\\exists \\delta &gt; 0, \\forall h &lt; \\delta, \\forall t \\in \\mathbb{R}\\)\uff0c\u6709</p> \\[ |\\varphi(t + h) - \\varphi(t)| &lt; \\varepsilon \\] <p>\u7531 \\(\\varphi(t)\\) \u7684\u5b9a\u4e49\u53ef\u77e5</p> \\[ \\begin{aligned} |\\varphi(t + h) - \\varphi(t)| &amp;= |E(e^{i(t+h)X}) - E(e^{itX})| \\\\ &amp;= |E(e^{itX}(e^{ihX} - 1))| \\\\ &amp;\\leq E|e^{ihX} - 1| \\end{aligned} \\] <p>\u56fa\u5b9a \\(\\varepsilon &gt; 0\\)\uff0c\u8bbe \\(X \\sim F(x)\\)\uff0c\u5219 \\(\\exists M &gt; 0\\)\uff0c\u4f7f\u5f97</p> \\[ P(|X| &gt; M) = 1 - F(M) + F(-M) \\leq \\frac{\\varepsilon}{4} \\] <p>\u5219</p> \\[ \\begin{aligned} |\\varphi(t + h) - \\varphi(t)| &amp;\\leq E|e^{ihX} - 1| \\\\ &amp;= \\int_{-\\infty}^{\\infty} |e^{ihx} - 1| \\ \\mathrm{d}F(x) \\\\ &amp;= \\int_{|x| &gt; M} |e^{ihx} - 1| p(x) \\ \\mathrm{d}x + \\int_{|x| \\leq M} |e^{ihx} - 1| p(x) \\ \\mathrm{d}x \\\\ &amp;&lt; I_1 + I_2 \\end{aligned} \\] <p>\u5176\u4e2d \\(I_1 &lt; 2 \\cdot \\dfrac{\\varepsilon}{4} = \\dfrac{\\varepsilon}{2}\\)\uff0c\u5bf9\u4e8e \\(I_2\\)\uff1a</p> \\[ \\begin{aligned} |e^{ihx} - 1| &amp;= |e^{i\\frac{h}{2}x}||e^{i\\frac{h}{2}x} - e^{-i\\frac{h}{2}x}| \\\\ &amp;= 2|\\sin \\frac{hx}{2}| \\\\ &amp;\\leq 2|\\frac{hx}{2}| \\\\ &amp;= |hx| \\\\ &amp;\\leq hM \\end{aligned} \\] <p>\u56e0\u6b64</p> \\[ |\\varphi(t + h) - \\varphi(t)| &lt; I_1 + I_2 &lt; \\frac{\\varepsilon}{2} + hM \\] <p>\u53d6 \\(\\delta = \\dfrac{\\varepsilon}{2M}\\)\uff0c\u5219\u5f53 \\(h &lt; \\delta\\) \u65f6\uff0c\u6709</p> \\[ |\\varphi(t + h) - \\varphi(t)| &lt; \\frac{\\varepsilon}{2} + hM &lt; \\frac{\\varepsilon}{2} + \\frac{\\varepsilon}{2} = \\varepsilon \\] <p>\u8bc1\u6bd5\u3002</p> </li> <li> <p>Bochner \u975e\u8d1f\u5b9a\u6027</p> <p>\u5bf9\u4efb\u4f55\u5b9e\u6570 \\(t_1, t_2, \\cdots, t_n\\)\uff0c\u590d\u6570 \\(a_1, a_2, \\cdots, a_n\\)\uff0c\u6709</p> \\[ \\sum_{i=1}^n \\sum_{j=1}^n a_i \\overline{a_j} \\varphi(t_i - t_j) \\geq 0 \\] <p>\u8bc1\u660e</p> <p>\u4ee4 \\(X \\sim F(x)\\)\uff0c\u5219</p> \\[ \\begin{aligned} \\sum_{i=1}^n \\sum_{j=1}^n a_i \\overline{a_j} \\varphi(t_i - t_j) &amp;= \\sum_{i=1}^n \\sum_{j=1}^n a_i \\overline{a_j} E(e^{i(t_i - t_j)X}) \\\\ &amp;= E\\sum_{i=1}^n \\sum_{j=1}^n a_i \\overline{a_j} e^{it_iX} \\overline{e^{it_jX}} \\\\ &amp;= E|\\sum_{i=1}^n a_i e^{it_iX}|^2 \\\\ &amp;\\geq 0 \\end{aligned} \\] </li> <li> <p>\u53ef\u5fae\u6027</p> <p>\u8bbe \\(EX\\) \u5b58\u5728\u4e14 \\(EX = \\mu\\)\uff0c\u5219 \\(\\varphi(t)\\) \u53ef\u5fae</p> <p>\u5219 \\(\\varphi'(0) = i\\mu\\)</p> \\[ \\begin{aligned} \\varphi'(t) &amp;= \\frac{\\mathrm{d}}{\\mathrm{d}t} E(e^{itX}) \\\\ &amp;= \\int_{-\\infty}^{\\infty} \\frac{\\mathrm{d}}{\\mathrm{d}t} e^{itx} p(x) \\ \\mathrm{d}x \\\\ &amp;= i \\int_{-\\infty}^{\\infty} xe^{itx} \\ \\mathrm{d}F(x) \\end{aligned} \\] <p>\u7c7b\u4f3c\uff0c\u5982\u679c \\(E|X|^k &lt; \\infty\\)\uff0c\u5219</p> \\[ \\varphi^{(k)}(t) = i^k \\int_{-\\infty}^{\\infty} x^k e^{itx} \\ \\mathrm{d}F(x) \\] <p>\\(\\varphi(t)\\) \u5728 0 \u5904\u53ef\u4ee5\u8fdb\u884c k \u6b21\u5c55\u5f00\uff1a</p> \\[ \\begin{aligned} \\varphi(t) &amp;= \\varphi(0) + \\varphi'(0)t + \\frac{\\varphi''(0)}{2!}t^2 + \\cdots + \\frac{\\varphi^{(k)}(0)}{k!}t^k + o(t^k) \\\\ &amp;= 1 + iE(X)t - \\frac{1}{2}E(X^2)t^2 + \\cdots + i^k \\frac{E(X^k)}{k!}t^k + o(t^k) \\end{aligned} \\] </li> </ol>"},{"location":"math/prob_theory/chapter3/#_26","title":"\u7279\u5f81\u51fd\u6570\u7684\u8fd0\u7b97\u6027\u8d28","text":"<ol> <li> <p>\u4ee4 \\(X\\) \u7684\u7279\u5f81\u51fd\u6570\u4e3a \\(\\varphi_X(t)\\)\uff0c\u5219</p> \\[ \\varphi_{aX+c}(t) = E(e^{it(aX+c)}) = e^{itc}E(e^{i(at)X}) = e^{itc}\\varphi_X(at) \\] <p>Example</p> <p>\u8bbe \\(X \\sim N(0, 1), Y \\sim N(\\mu, \\sigma^2)\\)\uff0c\u5219</p> \\[ Y = \\sigma X + \\mu \\] <p>\u56e0\u6b64</p> \\[ \\varphi_Y(t) = e^{it\\mu} \\varphi_X(\\sigma t) = e^{it\\mu - \\frac{1}{2} \\sigma^2 t^2} \\] </li> <li> <p>\u4e58\u6cd5\u516c\u5f0f</p> <p>\u82e5 \\(X, Y\\) \u76f8\u4e92\u72ec\u7acb\uff0c\u5219 \\(Z = X + Y\\) \u7684\u7279\u5f81\u51fd\u6570\u4e3a</p> \\[ \\varphi_Z(t) = \\varphi_X(t) \\varphi_Y(t) \\] <p>\u63a8\u5e7f</p> <p>\u82e5 \\(X_1, X_2, \\cdots, X_n\\) \u76f8\u4e92\u72ec\u7acb\uff0c\u5219 \\(Z = \\sum_{i=1}^n X_i\\) \u7684\u7279\u5f81\u51fd\u6570\u4e3a</p> \\[ \\varphi_Z(t) = \\prod_{i=1}^n \\varphi_{X_i}(t) \\] </li> <li> <p>\u552f\u4e00\u6027\u95ee\u9898\uff1a\u5982\u679c \\(\\varphi_X(t) = \\varphi_Y(t)\\)\uff0c\u5219</p> \\[ X \\overset{d}{=} Y, \\qquad F_X \\equiv F_Y \\] <p>\u63a8\u8bba</p> <ol> <li> <p>\u8fde\u7eed\u6027\u60c5\u51b5</p> <p>\u82e5 \\(X\\) \u7684\u7279\u5f81\u51fd\u6570 \\(\\varphi(t)\\) \u7edd\u5bf9\u53ef\u79ef\uff0c\u5219 \\(X\\) \u5177\u6709\u5bc6\u5ea6\u51fd\u6570 \\(p(x)\\)\uff0c\u4e14</p> \\[ p(x) = \\frac{1}{2\\pi} \\int_{-\\infty}^{\\infty} e^{-itx} \\varphi(t) \\ \\mathrm{d}t \\] <p>\u5bf9\u5076\u516c\u5f0f</p> <p>\u5df2\u77e5 \\(X \\sim p(x)\\)\uff0c\u5219</p> \\[ \\varphi(t) = \\int_{-\\infty}^{\\infty} e^{itx} p(x) \\ \\mathrm{d}x \\] Example <p>\\(\\varphi(t) = e^{-|t|}\\) \u662f\u4e00\u4e2a\u7279\u5f81\u51fd\u6570\uff0c\u6c42\u5176\u5bf9\u5e94\u7684\u5bc6\u5ea6\u51fd\u6570\u3002</p> <p>\u89e3</p> <p>\\(\\varphi(t)\\) \u7edd\u5bf9\u53ef\u79ef\uff0c\u56e0\u6b64\u5b58\u5728\u5bc6\u5ea6\u51fd\u6570 \\(p(x)\\)\uff0c\u4e14</p> \\[ \\begin{aligned} p(x) &amp;= \\frac{1}{2\\pi} \\int_{-\\infty}^{\\infty} e^{-itx} e^{-|t|} \\ \\mathrm{d}t \\\\ &amp;= \\frac{1}{2\\pi} \\left[ \\int_{0}^{\\infty} e^{-itx} e^{-t} \\ \\mathrm{d}t + \\int_{-\\infty}^{0} e^{-itx} e^{t} \\ \\mathrm{d}t \\right] \\\\ &amp;= \\frac{1}{\\pi} \\cdot \\frac{1}{1 + x^2} \\end{aligned} \\] <p>\u6545 \\(X \\sim p(x) = \\dfrac{1}{\\pi} \\cdot \\dfrac{1}{1 + x^2}\\)\u3002</p> </li> <li> <p>\u79bb\u6563\u6027\u60c5\u51b5</p> <p>\u8bbe \\(\\varphi(t)\\) \u662f\u4e00\u4e2a\u7279\u5f81\u51fd\u6570\uff0c\u82e5</p> \\[ \\varphi(t) = \\sum_{k=-\\infty}^{\\infty} a_k e^{itk} \\] <p>\u4e14</p> \\[ a_k \\geq 0, \\qquad \\sum_{k=-\\infty}^{\\infty} a_k = 1 \\] <p>\u5219</p> \\[ P(X = k) = a_k \\] Example <p>\u8bbe \\(\\varphi(t) = \\cos t\\)\uff0c\u5219\u6709</p> \\[ \\varphi(t) = \\frac{1}{2} e^{it} + \\frac{1}{2} e^{-it} \\] <p>\u56e0\u6b64</p> \\[ P(X = 1) = \\frac{1}{2}, \\qquad P(X = -1) = \\frac{1}{2} \\] </li> </ol> <p>\u5229\u7528\u552f\u4e00\u6027\uff0c\u53ef\u4ee5\u5229\u7528\u5df2\u77e5\u7684\u5206\u5e03\u5224\u65ad\u968f\u673a\u53d8\u91cf\u7684\u5206\u5e03\u3002</p> <p>Example</p> <p>\u8bbe \\(X_k \\sim N(\\mu_k, \\sigma_k^2), k = 1, 2, \\cdots, n\\)\uff0c\u6c42</p> \\[ Z = \\sum_{k=1}^n X_k \\] <p>\u7684\u5206\u5e03\u3002</p> \u89e3 <ol> <li> <p>\u5148\u6c42 \\(Z\\) \u7684\u7279\u5f81\u51fd\u6570</p> \\[ \\begin{aligned} \\varphi_Z(t) &amp;= \\prod_{k=1}^n \\varphi_{X_k}(t) \\\\ &amp;= \\prod_{k=1}^n e^{it\\mu_k - \\frac{1}{2} \\sigma_k^2 t^2} \\\\ &amp;= e^{it\\sum_{k=1}^n \\mu_k - \\frac{1}{2} t^2 \\sum_{k=1}^n \\sigma_k^2} \\end{aligned} \\] </li> <li> <p>\u5c06\u5176\u4e0e\u6b63\u6001\u5206\u5e03\u7684\u7279\u5f81\u51fd\u6570\u6bd4\u8f83\uff0c\u53ef\u5f97</p> \\[ Z \\sim N(\\sum_{k=1}^n \\mu_k, \\sum_{k=1}^n \\sigma_k^2) \\] </li> </ol> </li> </ol>"},{"location":"math/prob_theory/chapter3/#_27","title":"\u4e8c\u5143\u968f\u673a\u5411\u91cf\u7684\u7279\u5f81\u51fd\u6570","text":"<p>\u8bbe \\((X, Y)\\) \u662f\u4e8c\u7ef4\u968f\u673a\u5411\u91cf\uff0c\u5176\u7279\u5f81\u51fd\u6570\u4e3a</p> \\[ \\varphi(t_1, t_2) = E(e^{i(t_1X + t_2Y)}) \\] <p>\u5f53 \\(X, Y\\) \u76f8\u4e92\u72ec\u7acb\u65f6\uff0c\u6709</p> \\[ \\varphi(t_1, t_2) = \\varphi_X(t_1) \\varphi_Y(t_2) \\] <p>Example</p> <p>\u8bbe \\((X, Y) \\sim N(\\mu_1, \\sigma_1^2, \\mu_2, \\sigma_2^2, \\rho)\\)\uff0c\u6c42 \\(\\varphi(t_1, t_2)\\)\u3002</p> <p>\u89e3</p> <p>\u5047\u8bbe \\((X, Y) \\sim N(0, 1, 0, 1, \\rho)\\)\uff0c\u4ee4</p> \\[ \\Sigma =  \\begin{pmatrix}     1 &amp; \\rho \\\\     \\rho &amp; 1 \\end{pmatrix} \\] <p>\u8bbe</p> \\[ \\begin{pmatrix}     U \\\\     V \\end{pmatrix} = \\Sigma^{-\\frac{1}{2}} \\begin{pmatrix}     X \\\\     Y \\end{pmatrix} \\] <p>\u6839\u636e 3.2.2 \u8282\u4e2d\u7684\u7ed3\u8bba\uff0c\u6709</p> \\[ \\begin{aligned} E(U, V)' &amp;= \\Sigma^{-\\frac{1}{2}} E(X, Y)' = 0 \\\\ \\Sigma_{UV} &amp;= \\Sigma^{-\\frac{1}{2}} \\Sigma (\\Sigma^{-\\frac{1}{2}})' = \\Sigma^{-\\frac{1}{2}} \\Sigma \\Sigma^{-\\frac{1}{2}} = I \\end{aligned} \\] <p>\u56e0\u6b64 \\(Cov(U, V) = 0 \\Rightarrow \\gamma_{UV} = 0\\)\uff0c\u5373 \\((U, V) \\sim N(0, 1, 0, 1, 0)\\)\uff0c\u5373 \\(U, V\\) \u76f8\u4e92\u72ec\u7acb\u3002\u5219</p> \\[ \\begin{aligned} \\varphi_{UV}(t_1, t_2) &amp;= \\varphi_U(t_1) \\varphi_V(t_2) \\\\ &amp;= e^{-\\frac{1}{2}(t_1^2 + t_2^2)} \\\\ &amp;= e^{-\\frac{1}{2}(t_1, t_2) (t_1, t_2)'} \\end{aligned} \\] <p>\u56e0\u6b64</p> \\[ \\begin{aligned} \\varphi(t_1, t_2) &amp;= E(e^{i(t_1X + t_2Y)}) \\\\ &amp;= E(e^{i(t_1, t_2)(X, Y)'}) \\\\ &amp;= E(e^{i(t_1, t_2)\\Sigma^{\\frac{1}{2}}(U, V)'}) \\\\ &amp;= \\varphi_{UV}((t_1, t_2)\\Sigma^{\\frac{1}{2}}) \\\\ &amp;= e^{-\\frac{1}{2}(t_1, t_2)\\Sigma^{\\frac{1}{2}} \\Sigma^{\\frac{1}{2}} (t_1, t_2)'} \\\\ &amp;= e^{-\\frac{1}{2}(t_1, t_2)\\Sigma (t_1, t_2)'} \\end{aligned} \\] <p>\u56de\u5230\u539f\u95ee\u9898\uff0c\u5df2\u7ecf\u5f97\u5230\u5f53 \\((\\xi, \\eta) \\sim N(0, 1, 0, 1, \\rho)\\) \u65f6\u7684\u7279\u5f81\u51fd\u6570\u4e3a</p> \\[ \\varphi_{\\xi \\eta}(t_1, t_2) = e^{-\\frac{1}{2}(t_1, t_2) \\begin{pmatrix}     1 &amp; \\rho \\\\     \\rho &amp; 1 \\end{pmatrix} (t_1, t_2)'} \\] <p>\u539f \\((X, Y) \\sim N(\\mu_1, \\sigma_1^2, \\mu_2, \\sigma_2^2, \\rho)\\)\uff0c\u6709</p> \\[ \\begin{pmatrix}     X \\\\     Y \\end{pmatrix} = \\begin{pmatrix}     \\sigma_1 \\xi + \\mu_1 \\\\     \\sigma_2 \\eta + \\mu_2 \\end{pmatrix} \\] <p>\u56e0\u6b64</p> \\[ \\begin{aligned} \\varphi(t_1, t_2) &amp;= E(e^{i(t_1X + t_2Y)}) \\\\ &amp;= E(e^{i(t_1(\\sigma_1 \\xi + \\mu_1) + t_2(\\sigma_2 \\eta + \\mu_2))}) \\\\ &amp;= e^{i(t_1 \\mu_1 + t_2 \\mu_2)} E(e^{i(t_1 \\sigma_1 \\xi + t_2 \\sigma_2 \\eta)}) \\\\ &amp;= e^{i(t_1 \\mu_1 + t_2 \\mu_2)} \\varphi_{\\xi \\eta}(t_1 \\sigma_1, t_2 \\sigma_2) \\\\ &amp;= e^{i(t_1 \\mu_1 + t_2 \\mu_2) - \\frac{1}{2}(t_1 \\sigma_1, t_2 \\sigma_2) \\Sigma (t_1 \\sigma_1, t_2 \\sigma_2)'} \\\\ \\end{aligned} \\]"},{"location":"math/prob_theory/chapter3/#_28","title":"\u5e38\u89c1\u968f\u673a\u53d8\u91cf\u7684\u671f\u671b\u3001\u65b9\u5dee","text":""},{"location":"math/prob_theory/chapter3/#_29","title":"\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf","text":"<p>\u9000\u5316\u5206\u5e03</p> \\[ X \\sim \\begin{pmatrix}     c \\\\     1 \\end{pmatrix} , P(X = c) = 1 \\] <ul> <li> <p>\u671f\u671b</p> \\[ E(X) = c \\] </li> <li> <p>\u65b9\u5dee</p> \\[ VarX = E(X^2) - (EX)^2 = c^2 - c^2 = 0 \\] </li> <li> <p>\u7279\u5f81\u51fd\u6570</p> \\[ \\varphi(t) = E(e^{itX}) = e^{itc} \\] </li> </ul> <p>\u4e8c\u9879 Bernoulli \u5206\u5e03</p> \\[ X \\sim B(n, p), P(X = k) = \\binom{n}{k} p^k (1-p)^{n-k} \\] <ul> <li> <p>\u671f\u671b</p> \\[ E(X) = \\sum_{k=0}^n k \\binom{n}{k} p^k (1-p)^{n-k} = np \\] </li> <li> <p>\u65b9\u5dee</p> \\[ \\begin{aligned} VarX &amp;= E(X^2) - (EX)^2 \\\\ &amp;= n(n-1)p^2 + np - n^2p^2 \\\\ &amp;= np(1-p) \\end{aligned} \\] \u8fc7\u7a0b \\[ \\begin{aligned} E(X^2) &amp;= \\sum_{k=0}^n k^2 \\binom{n}{k} p^k (1-p)^{n-k} \\\\ &amp;= \\sum_{k=1}^n k(k-1) \\binom{n}{k} p^k (1-p)^{n-k} + \\sum_{k=1}^n k \\binom{n}{k} p^k (1-p)^{n-k} \\\\ &amp;= \\sum_{k=2}^n \\frac{n!}{(k - 2)! (n - k)!} p^k (1-p)^{n-k} + np \\\\ &amp;= n(n-1)p^2\\sum_{k=2}^n \\binom{n-2}{k-2} p^{k-2} (1-p)^{(n-2)-(k-2)} + np \\\\ &amp;= n(n-1)p^2 + np \\\\ \\end{aligned} \\] <p>\u4f7f\u7528\u65b9\u5dee\u7684\u6027\u8d28</p> <p>\u4ee4 \\(X_i\\) \u8868\u793a\u7b2c \\(i\\) \u6b21\u8bd5\u9a8c\u4e2d\u6210\u529f\u7684\u6b21\u6570\u3002</p> \\[ X_i = \\begin{cases}     1, &amp; p \\\\     0, &amp; 1 - p \\end{cases} \\] <p>\u5219</p> \\[ VarX = \\sum_{i=1}^n VarX_i = np(1-p) \\] </li> <li> <p>\u7279\u5f81\u51fd\u6570</p> \\[ \\begin{aligned} \\varphi(t) &amp;= E(e^{itX}) \\\\ &amp;= \\sum_{k=0}^n e^{itk} \\binom{n}{k} p^k (1-p)^{n-k} \\\\ &amp;= \\sum_{k=0}^n \\binom{n}{k} (pe^{it})^k (1-p)^{n-k} \\\\ &amp;= (pe^{it} + 1 - p)^n \\end{aligned} \\] <p>\u4f7f\u7528\u6bcf\u6b21\u8bd5\u9a8c\u7684\u72ec\u7acb\u6027</p> \\[ \\begin{aligned} \\varphi(t) &amp;= E(e^{itX}) \\\\ &amp;= E(e^{it(X_1 + X_2 + \\cdots + X_n)}) \\\\ &amp;= E(\\prod_{i=1}^n e^{itX_i}) \\\\ &amp;= \\prod_{i=1}^n E(e^{itX_i}) \\\\ &amp;= \\prod_{i=1}^n (pe^{it} + 1 - p) \\\\ &amp;= (pe^{it} + 1 - p)^n \\end{aligned} \\] </li> </ul> <p>Poisson \u5206\u5e03</p> \\[ X \\sim P(\\lambda), P(X = k) = \\frac{\\lambda^k}{k!} e^{-\\lambda} \\] <ul> <li> <p>\u671f\u671b</p> \\[ \\begin{aligned} E(X) &amp;= \\sum_{k=0}^\\infty k \\frac{\\lambda^k}{k!} e^{-\\lambda} \\\\ &amp;= \\lambda e^{-\\lambda} \\sum_{k=0}^\\infty \\frac{\\lambda^k}{k!} \\\\ &amp;= \\lambda e^{-\\lambda} e^\\lambda \\\\ &amp;= \\lambda \\end{aligned} \\] </li> <li> <p>\u65b9\u5dee</p> \\[ \\begin{aligned} VarX &amp;= E(X^2) - (EX)^2 \\\\ &amp;= \\lambda^2 + \\lambda - \\lambda^2 \\\\ &amp;= \\lambda \\end{aligned} \\] \u8fc7\u7a0b \\[ \\begin{aligned} E(X^2) &amp;= \\sum_{k=0}^\\infty k^2 \\frac{\\lambda^k}{k!} e^{-\\lambda} \\\\ &amp;= \\sum_{k=1}^\\infty k(k-1) \\frac{\\lambda^k}{k!} e^{-\\lambda} + \\sum_{k=1}^\\infty k \\frac{\\lambda^k}{k!} e^{-\\lambda} \\\\ &amp;= \\sum_{k=2}^\\infty \\frac{\\lambda^k}{(k-2)!} e^{-\\lambda} + \\lambda \\\\ &amp;= \\lambda^2 + \\lambda \\end{aligned} \\] </li> <li> <p>\u77e9</p> \\[ EX(X-1)\\cdots(X-k+1) = \\lambda^k, k \\geq 1 \\] <p>\u8bc1\u660e</p> \\[ \\begin{aligned} EX(X-1)\\cdots(X-k+1) &amp;= \\sum_{x=0}^\\infty x(x-1)\\cdots(x-k+1) \\frac{\\lambda^x}{x!} e^{-\\lambda} \\\\ &amp;= \\sum_{x=k}^\\infty \\frac{x!}{(x-k)!} \\frac{\\lambda^x}{x!} e^{-\\lambda} \\\\ &amp;= \\sum_{x=k}^\\infty \\frac{\\lambda^x}{(x-k)!} e^{-\\lambda} \\\\ &amp;= \\lambda^k \\sum_{x=k}^\\infty \\frac{\\lambda^{x-k}}{(x-k)!} e^{-\\lambda} \\\\ &amp;= \\lambda^k \\end{aligned} \\] <p>\u5219</p> \\[ \\begin{aligned} E(X^2) &amp;= EX(X-1) + EX = \\lambda^2 + \\lambda \\\\ E(X^3) &amp;= EX(X-1)(X-2) + 3EX(X-1) + EX = \\lambda^3 + 3\\lambda^2 + \\lambda \\\\ E(X^4) &amp;= EX(X-1)(X-2)(X-3) + 6EX(X-1)(X-2) + 7EX(X-1) + EX = \\lambda^4 + 6\\lambda^3 + 7\\lambda^2 + \\lambda \\\\ \\cdots \\end{aligned} \\] </li> <li> <p>\u7279\u5f81\u51fd\u6570</p> \\[ \\begin{aligned} \\varphi(t) &amp;= E(e^{itX}) \\\\ &amp;= \\sum_{k=0}^\\infty e^{itk} \\frac{\\lambda^k}{k!} e^{-\\lambda} \\\\ &amp;= e^{-\\lambda} \\sum_{k=0}^\\infty \\frac{(\\lambda e^{it})^k}{k!} \\\\ &amp;= e^{-\\lambda} e^{\\lambda e^{it}} \\\\ &amp;= e^{\\lambda(e^{it} - 1)} \\end{aligned} \\] </li> </ul> <p>\u51e0\u4f55\u5206\u5e03</p> \\[ X \\sim G(p), P(X = k) = (1-p)^{k-1} p \\] \\[ E(X) = \\sum_{k=1}^\\infty k (1-p)^{k-1} p = \\frac{1}{p} \\] <p>\u8d85\u51e0\u4f55\u5206\u5e03</p> \\[ X \\sim H(N, M, n), P(X = k) = \\frac{C_M^k C_{N-M}^{n-k}}{C_N^n} \\] <ul> <li> <p>\u671f\u671b</p> <p>\u4ee4 \\(X_i\\) \u8868\u793a\u7b2c \\(i\\) \u6b21\u62bd\u68c0\u65f6\u7684\u6b21\u54c1\u4e2a\u6570\u3002</p> \\[ X_i = \\begin{cases}     1, &amp; p = \\frac{M}{N} \\\\     0, &amp; 1 - p = \\frac{N-M}{N} \\end{cases} \\] <p>\u5f97\u5230 \\(E(X_i) = \\dfrac{M}{N}\\)\uff0c\u56e0\u6b64</p> \\[ E(X) = \\sum_{k=0}^n E(X_i) = n \\frac{M}{N} \\] \u4e0d\u653e\u56de\u62bd\u6837\u6bcf\u6b21\u62bd\u6837\u540c\u5206\u5e03\u4e0d\u72ec\u7acb <p>\u8bbe \\(A_i\\) \u8868\u793a\u7b2c \\(i\\) \u6b21\u62bd\u68c0\u65f6\u62bd\u5230\u6b21\u54c1\u3002</p> \\[ \\begin{aligned} p(A_2) &amp;= p(A_1) p(A_2 | A_1) + p(\\overline{A_1}) p(A_2 | \\overline{A_1}) \\\\ &amp;= \\frac{M}{N} \\times \\frac{M-1}{N-1} + \\frac{N-M}{N} \\times \\frac{M}{N-1} \\\\ &amp;= \\frac{M^2 - M + NM - M^2}{N(N-1)} \\\\ &amp;= \\frac{M}{N} \\end{aligned} \\] <p>\u7531\u6570\u5b66\u5f52\u7eb3\u6cd5\u53ef\u77e5\uff0c\\(p(A_i) = \\dfrac{M}{N}\\)\u3002</p> </li> </ul>"},{"location":"math/prob_theory/chapter3/#_30","title":"\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf","text":"<p>\u5747\u5300\u5206\u5e03</p> \\[ X \\sim U(a, b), p(x) = \\frac{1}{b-a} \\] <ul> <li> <p>\u671f\u671b</p> \\[ EX = \\int_a^b \\frac{x}{b-a} \\ \\mathrm{d}x = \\frac{a+b}{2} \\] </li> <li> <p>\u65b9\u5dee</p> \\[ \\begin{aligned} VarX &amp;= E(X^2) - (EX)^2 \\\\ &amp;= \\int_a^b \\frac{x^2}{b-a} \\ \\mathrm{d}x - \\left(\\frac{a+b}{2}\\right)^2 \\\\ &amp;= \\frac{b^3 - a^3}{3(b-a)} - \\left(\\frac{a+b}{2}\\right)^2 \\\\ &amp;= \\frac{(b-a)^2}{12} \\end{aligned} \\] </li> <li> <p>\u7279\u5f81\u51fd\u6570</p> \\[ \\begin{aligned} \\varphi(t) &amp;= E(e^{itX}) \\\\ &amp;= \\int_a^b \\frac{e^{itx}}{b-a} \\ \\mathrm{d}x \\\\ &amp;= \\frac{e^{itb} - e^{ita}}{it(b-a)} \\end{aligned} \\] </li> </ul> <p>\u6307\u6570\u5206\u5e03</p> \\[ X \\sim E(\\lambda), p(x) = \\lambda e^{-\\lambda x}, x &gt; 0 \\] <ul> <li> <p>\u671f\u671b</p> \\[ \\begin{aligned} EX &amp;= \\int_0^\\infty \\lambda x e^{-\\lambda x} \\ \\mathrm{d}x \\\\ &amp;= -\\int_0^\\infty x \\ \\mathrm{d}e^{-\\lambda x} \\\\ &amp;= \\left. -x e^{-\\lambda x} \\right|_0^\\infty + \\int_0^\\infty e^{-\\lambda x} \\ \\mathrm{d}x \\\\ &amp;= \\frac{1}{\\lambda} \\\\ \\end{aligned} \\] </li> <li> <p>\u65b9\u5dee</p> \\[ \\begin{aligned} VarX &amp;= E(X^2) - (EX)^2 \\\\ &amp;= \\frac{2}{\\lambda^2} - \\frac{1}{\\lambda^2} \\\\ &amp;= \\frac{1}{\\lambda^2} \\end{aligned} \\] \u8fc7\u7a0b \\[ \\begin{aligned} E(X^2) &amp;= \\int_0^\\infty \\lambda x^2 e^{-\\lambda x} \\ \\mathrm{d}x \\\\ &amp;= -\\int_0^\\infty x^2 \\ \\mathrm{d}e^{-\\lambda x} \\\\ &amp;= \\left. -x^2 e^{-\\lambda x} \\right|_0^\\infty + \\int_0^\\infty 2x e^{-\\lambda x} \\ \\mathrm{d}x \\\\ &amp;= \\frac{2}{\\lambda^2} \\end{aligned} \\] </li> <li> <p>\u7279\u5f81\u51fd\u6570</p> \\[ \\begin{aligned} \\varphi(t) &amp;= E(e^{itX}) \\\\ &amp;= \\int_0^\\infty \\lambda e^{-\\lambda x} e^{itx} \\ \\mathrm{d}x \\\\ &amp;= \\int_0^\\infty \\lambda e^{-(\\lambda - it)x} \\ \\mathrm{d}x \\\\ &amp;= -\\lambda \\left. \\frac{e^{-(\\lambda - it)x}}{\\lambda - it} \\right|_0^\\infty \\\\ &amp;= \\frac{\\lambda}{\\lambda - it} \\end{aligned} \\] </li> </ul> <p>\u6b63\u6001\u5206\u5e03</p> \\[ X \\sim N(\\mu, \\sigma^2), p(x) = \\frac{1}{\\sqrt{2\\pi}\\sigma} e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}} \\] <ul> <li> <p>\u671f\u671b</p> \\[ EX = \\int_{-\\infty}^{\\infty} \\frac{x}{\\sqrt{2\\pi}\\sigma} e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}} \\ \\mathrm{d}x = \\mu \\] </li> <li> <p>\u65b9\u5dee</p> \\[ \\begin{aligned} VarX &amp;= E(X^2) - (EX)^2 \\\\ &amp;= \\sigma^2 + \\mu^2 - \\mu^2 \\\\ &amp;= \\sigma^2 \\end{aligned} \\] \u8fc7\u7a0b \\[ \\begin{aligned} E(X^2) &amp;= \\int_{-\\infty}^{\\infty} \\frac{x^2}{\\sqrt{2\\pi}\\sigma} e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}} \\ \\mathrm{d}x \\\\ &amp;= \\int_{-\\infty}^{\\infty} \\frac{(x-\\mu+\\mu)^2}{\\sqrt{2\\pi}\\sigma} e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}} \\ \\mathrm{d}x \\\\ &amp;= \\int_{-\\infty}^{\\infty} \\frac{(x-\\mu)^2}{\\sqrt{2\\pi}\\sigma} e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}} \\ \\mathrm{d}x + \\int_{-\\infty}^{\\infty} \\frac{2\\mu(x-\\mu)}{\\sqrt{2\\pi}\\sigma} e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}} \\ \\mathrm{d}x + \\int_{-\\infty}^{\\infty} \\frac{\\mu^2}{\\sqrt{2\\pi}\\sigma} e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}} \\ \\mathrm{d}x \\\\ &amp;= \\sigma^2 + 0 + \\mu^2 \\\\ &amp;= \\sigma^2 + \\mu^2 \\end{aligned} \\] </li> <li> <p>\u77e9</p> <p>\u8bbe \\(X \\sim N(0, \\sigma^2)\\)\uff0c\u5219</p> \\[ E(X^{2k+1}) = 0, E(X^{2k}) = (2k-1)!! \\sigma^{2k} \\] <p>\u8bc1\u660e</p> \\[ \\begin{aligned} E(X^{2k}) &amp;= \\int_{-\\infty}^{\\infty} \\frac{x^{2k}}{\\sqrt{2\\pi}\\sigma} e^{-\\frac{x^2}{2\\sigma^2}} \\ \\mathrm{d}x \\\\ &amp;= -\\int_{-\\infty}^{\\infty} \\frac{x^{2k-1}\\sigma}{\\sqrt{2\\pi}} \\ \\mathrm{d}e^{-\\frac{x^2}{2\\sigma^2}} \\\\ &amp;= -\\left. \\frac{x^{2k-1}\\sigma}{\\sqrt{2\\pi}} e^{-\\frac{x^2}{2\\sigma^2}} \\right|_{-\\infty}^{\\infty} + \\int_{-\\infty}^{\\infty} \\frac{(2k-1)x^{2k-2}\\sigma^2}{\\sqrt{2\\pi}\\sigma} e^{-\\frac{x^2}{2\\sigma^2}} \\ \\mathrm{d}x \\\\ &amp;= (2k-1)\\sigma^2 E(X^{2k-2}) \\\\ &amp;= (2k-1)!! \\sigma^{2k} \\end{aligned} \\] <p>\u5bf9\u4e8e \\(X^{2k+1}\\)\uff0c\u7531\u4e8e \\(X\\) \u662f\u5076\u51fd\u6570\uff0c\u56e0\u6b64</p> \\[ E(X^{2k+1}) = 0 \\] </li> <li> <p>\u7279\u5f81\u51fd\u6570</p> <p>Info</p> <p>\u5bf9\u4e8e \\(X \\sim N(0, 1)\\)\uff0c\u6709</p> \\[ \\int_{-\\infty}^\\infty \\frac{1}{\\sqrt{2\\pi}} e^{-\\frac{x^2}{2}} \\ \\mathrm{d}x = 1 \\] <p>\u5f97\u5230</p> \\[ \\int_{-\\infty}^\\infty e^{-\\frac{x^2}{2}} \\ \\mathrm{d}x = \\sqrt{2\\pi} \\] <p>\u5bf9\u4e8e \\(X \\sim N(\\mu, \\sigma^2)\\)\uff0c\u6709</p> \\[ \\begin{aligned} \\varphi(t) &amp;= E(e^{itX}) \\\\ &amp;= \\int_{-\\infty}^\\infty \\frac{1}{\\sqrt{2\\pi}\\sigma} e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}} e^{itx} \\ \\mathrm{d}x \\\\ &amp;= \\int_{-\\infty}^\\infty \\frac{1}{\\sqrt{2\\pi}\\sigma} e^{-\\frac{(x-\\mu)^2 - 2i\\sigma^2tx}{2\\sigma^2}} \\ \\mathrm{d}x \\\\ &amp;= \\frac{1}{\\sqrt{2\\pi}\\sigma} \\int_{-\\infty}^\\infty e^{-\\frac{(x-\\mu - i\\sigma^2t)^2 + \\sigma^4t^2 - 2\\mu i\\sigma^2t}{2\\sigma^2}} \\ \\mathrm{d}x \\\\ &amp;= \\frac{1}{\\sqrt{2\\pi}} e^{\\mu it - \\frac{1}{2}\\sigma^2t^2} \\int_{-\\infty}^\\infty e^{-\\frac{1}{2}(\\frac{x-\\mu - i\\sigma^2t}{\\sigma})^2} \\ \\mathrm{d}\\frac{x-\\mu - i\\sigma^2t}{\\sigma} \\\\ &amp;= e^{\\mu it - \\frac{1}{2}\\sigma^2t^2} \\end{aligned} \\] <p>\u5f97\u5230</p> \\[ \\varphi(t) = e^{\\mu it - \\frac{1}{2}\\sigma^2t^2} \\] <p>\u5bf9\u4e8e\u6807\u51c6\u6b63\u6001\u5206\u5e03\uff0c\u6709 \\(\\varphi(t) = e^{-\\frac{1}{2}t^2}\\)\u3002</p> </li> </ul>"},{"location":"math/prob_theory/chapter4/","title":"\u6982\u7387\u6781\u9650\u5b9a\u7406","text":""},{"location":"math/prob_theory/chapter4/#_2","title":"\u7ecf\u5178\u6982\u7387\u6781\u9650\u5b9a\u7406","text":"<p>\u4e0b\u9762\u4e09\u4e2a\u5b9a\u7406\u53ea\u6d89\u53ca Bernoulli \u8bd5\u9a8c\uff0c\\(X \\sim B(n, p)\\)\u3002</p> \\[ \\begin{aligned} P(X = k) &amp;= \\binom{n}{k} p^k (1 - p)^{n - k} \\\\ E(X) &amp;= np \\\\ Var(X) &amp;= np(1 - p) \\end{aligned} \\]"},{"location":"math/prob_theory/chapter4/#bernoulli","title":"Bernoulli \u5927\u6570\u5b9a\u5f8b","text":"<p>\u4f9d\u6982\u7387\u6536\u655b</p> <p>\u8bbe \\(X_n, n \\geq 1\\) \u662f\u4e00\u5217\u968f\u673a\u53d8\u91cf\uff0c\\(X\\) \u662f\u53e6\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u5982\u679c\u5bf9\u4e8e\u4efb\u610f\u7684 \\(\\varepsilon &gt; 0\\)\uff0c\u6709</p> \\[ P(\\omega: \\left| X_n(\\omega) - X(\\omega) \\right| &gt; \\varepsilon) \\rightarrow 0, \\quad n \\rightarrow \\infty \\] <p>\u5219\u79f0 \\(X_n\\) \u4f9d\u6982\u7387\u6536\u655b\u5230 \\(X\\)\uff0c\u8bb0\u4f5c \\(X_n \\xrightarrow{P} X\\)\u3002</p> <p>\u8bbe \\(0 &lt; p &lt; 1\\)\uff0c\\(S_n \\sim B(n, p)\\)\uff0c\u5219</p> \\[ P(\\omega: \\left| \\frac{S_n(\\omega)}{n} - p \\right| &gt; \\varepsilon) \\rightarrow 0, \\quad n \\rightarrow \\infty \\] <p>\u5373 \u9891\u7387\u63a5\u8fd1\u6982\u7387\u771f\u503c \u7684\u6570\u5b66\u89e3\u91ca\u3002\u5373 \\(\\dfrac{S_n}{n}\\) \u4f9d\u6982\u7387\u6536\u655b\u5230 \\(p\\)\u3002</p> \\[ \\frac{S_n}{n} \\xrightarrow{P} p, \\quad n \\rightarrow \\infty \\] <p>Info</p> <p>\u4e0d\u80fd\u4f7f\u7528 \\(\\varepsilon - N\\) \u8bed\u8a00\u6765\u63cf\u8ff0\uff0c\u56e0\u4e3a\u968f\u673a\u53d8\u91cf\u53d6\u503c\u8303\u56f4\u548c \\(n\\) \u65e0\u5173\u3002</p> \\[ P(\\omega: \\left| \\frac{S_n(\\omega)}{n} - p \\right| &gt; \\varepsilon) = \\sum_{k: \\left| \\frac{k}{n} - p \\right| &gt; \\varepsilon} \\binom{n}{k} p^k (1 - p)^{n - k} &gt; 0 \\] <p>\u5373\u603b\u4f1a\u53d1\u751f \\(\\left| \\frac{S_n}{n} - p \\right| &gt; \\varepsilon\\)\u3002</p>"},{"location":"math/prob_theory/chapter4/#de-moivre-laplace","title":"de Moivre-Laplace \u4e2d\u5fc3\u6781\u9650\u5b9a\u7406","text":"<p>\u4f9d\u5206\u5e03\u6536\u655b</p> <p>\u8bbe \\(X_n, n \\geq 1\\) \u662f\u4e00\u5217\u968f\u673a\u53d8\u91cf\uff0c\u76f8\u5e94\u5206\u5e03\u51fd\u6570\u4e3a \\(F_n(x)\\)\uff0c\\(X\\) \u662f\u53e6\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u5206\u5e03\u51fd\u6570\u4e3a \\(F(x)\\)\uff0c\u5982\u679c\u5bf9\u4e8e\u4efb\u610f\u7684 \\(F(x)\\) \u7684\u8fde\u7eed\u70b9 \\(x\\)\uff0c\u6709</p> \\[ F_n(x) \\rightarrow F(x), \\quad n \\rightarrow \\infty \\] <p>\u5219\u79f0 \\(X_n\\) \u4f9d\u5206\u5e03\u6536\u655b\u5230 \\(X\\)\uff0c\u8bb0\u4f5c \\(X_n \\xrightarrow{D} X\\) \u6216 \\(F_n \\xrightarrow{D} F\\)\u3002</p> <p>\u5047\u8bbe \\(S_n \\sim B(n, p)\\)\uff0c\u5219</p> \\[ P(\\frac{S_n - np}{\\sqrt{np(1 - p)}} \\leq x) \\asymp \\int^x_{-\\infty} \\frac{1}{\\sqrt{2\\pi}} e^{-\\frac{t^2}{2}} \\ \\mathrm{d} t, \\quad n \\rightarrow \\infty \\] \\(\\asymp\\) \u610f\u4e3a\u6e10\u8fdb\u76f8\u7b49 <p>\u5373 \\(f \\asymp g \\Leftrightarrow \\exists C, D &gt; 0\\)\uff0c\u4f7f\u5f97 \\(C|g| \\leq |f| \\leq D|g|\\)\u3002</p> <p>\u5176\u4e2d \\(\\dfrac{S_n - np}{\\sqrt{np(1 - p)}}\\) \u79f0\u4e3a \u89c4\u8303\u5316\u968f\u673a\u53d8\u91cf\uff0c\u8bb0\u4f5c \\(Z_n\\)\uff0c\u6ee1\u8db3 \\(EZ_n = 0, VarZ_n = 1\\)\uff1b\u7b49\u5f0f\u53f3\u4fa7\u4e3a \u6807\u51c6\u6b63\u6001\u5206\u5e03 \u7684\u5206\u5e03\u51fd\u6570 \\(\\Phi(x)\\)\u3002\u5373</p> \\[ F_{Z_n}(x) \\xrightarrow{D} \\Phi(x), \\quad n \\rightarrow \\infty \\] <p>\u5373\u6ee1\u8db3 Bernoulli \u4e8c\u9879\u5206\u5e03\u7684\u89c4\u8303\u5316\u968f\u673a\u53d8\u91cf\u5206\u5e03\u6e10\u8fdb\u4e8e\u6807\u51c6\u6b63\u6001\u5206\u5e03\u3002</p> <p>\u5e94\u7528</p> \\[ \\begin{aligned} P(a \\leq S_n \\leq b) &amp;= P(\\frac{a - np}{\\sqrt{np(1 - p)}} \\leq \\frac{S_n - np}{\\sqrt{np(1 - p)}} \\leq \\frac{b - np}{\\sqrt{np(1 - p)}}) \\\\ &amp;\\asymp \\Phi(\\frac{b - np}{\\sqrt{np(1 - p)}}) - \\Phi(\\frac{a - np}{\\sqrt{np(1 - p)}}) \\end{aligned} \\] \u8bc1\u660e\uff08\\(p=1/2\\) \u7684\u60c5\u51b5\uff09 <p>\u51fa\u53d1\u70b9</p> \\[ P(a \\leq \\frac{S_n - np}{\\sqrt{np(1 - p)}} \\leq b) = \\sum_{k: a \\leq \\frac{k - np}{\\sqrt{np(1 - p)}} \\leq b} \\binom{n}{k} p^k (1 - p)^{n - k} \\] <p>:TODO:</p> <p>\uff08szg\uff1a\u611f\u5174\u8da3\u7684\u4e86\u89e3\uff09</p>"},{"location":"math/prob_theory/chapter4/#poisson","title":"Poisson \u6781\u9650\u5b9a\u7406","text":"<p>\u8bbe \\(S_n \\sim B(n, p_n)\\)\uff0c\u82e5 \\(np_n \\rightarrow \\lambda\\)\uff0c\u5219</p> \\[ P(S_n = k) \\rightarrow \\frac{\\lambda^k}{k!} e^{-\\lambda}, \\quad n \\rightarrow \\infty \\] <p>\u8bc1\u660e</p> <p>\u7531 \\(np_n \\rightarrow \\lambda\\)\uff0c\u53ef\u77e5 \\(p_n = \\frac{\\lambda}{n} + o(\\frac{1}{n})\\)\u3002</p> \\[ \\begin{align} P(S_n = k) =&amp; {n \\choose k}p_n^k(1-p_n)^{n-k} \\\\ =&amp; \\frac{1}{k!} \\cdot n(n-1)\\cdots(n-k+1)\\cdot \\frac{1}{n^k}\\cdot (np_k)^k \\cdot (1 - \\frac{\\lambda}{n} + o(\\frac{1}{n}))^{n-k} \\\\ =&amp; \\left[(1-\\frac{1}{n})(1-\\frac{2}{n})\\cdots(1-\\frac{k-1}{n})\\right] \\left[\\frac{\\lambda^k}{k!}\\right] \\left[(1-\\frac{\\lambda}{n})^{n-k}\\right] \\\\ \\to &amp; \\frac{\\lambda^k}{k!} e^{-\\lambda}, \\quad n\\to \\infty \\end{align} \\]"},{"location":"math/prob_theory/chapter4/#_3","title":"\u7ecf\u5178\u6781\u9650\u5b9a\u7406\u7684\u63a8\u5e7f","text":""},{"location":"math/prob_theory/chapter4/#bernoulli_1","title":"Bernoulli \u5927\u6570\u5b9a\u7406\u7684\u63a8\u5e7f","text":""},{"location":"math/prob_theory/chapter4/#chebyshev","title":"Chebyshev \u5927\u6570\u5b9a\u5f8b","text":"<p>Chebyshev \u4e0d\u7b49\u5f0f</p> <p>\u8bbe \\(X\\) \u662f\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u5219\u5bf9\u4e8e\u4efb\u610f\u7684 \\(\\varepsilon &gt; 0\\)\uff0c\u6709</p> \\[ P(\\left|X - EX \\right| &gt; \\epsilon) \\leq \\frac{VarX}{\\varepsilon^2} \\] \u8bc1\u660e Bernoulli \u5927\u6570\u5b9a\u7406 \\[ \\begin{aligned} P(\\left| \\frac{S_n}{n} - p \\right| &gt; \\varepsilon) &amp;= P(\\left| S_n - np \\right| &gt; n\\varepsilon) \\\\ &amp;\\leq \\frac{np(1 - p)}{n^2\\varepsilon^2} \\\\ &amp;= \\frac{p(1 - p)}{n\\varepsilon^2} \\\\ &amp;\\rightarrow 0, \\quad n \\rightarrow \\infty \\end{aligned} \\] <p>\u5047\u8bbe \\(X_k, k \\geq 1\\) \u662f\u4e00\u5217\u968f\u673a\u53d8\u91cf\uff0c\u4e14 \\(EX_k = \\mu_k\\)\uff0c\u8bbe \\(S_n = \\sum_{k=1}^nX_k\\)\uff0c\u82e5</p> \\[ \\frac{VarS_n}{n^2} \\rightarrow 0, \\quad n \\rightarrow \\infty  \\] <p>\u5219</p> \\[ \\frac{S_n}{n} - \\frac{\\sum_{k=1}^n\\mu_k}{n} \\xrightarrow{P} 0, \\quad n \\rightarrow \\infty \\] <p>\u7279\u522b\u7684\uff0c\u82e5 \\(EX_k = \\mu\\)\uff0c\u5219</p> \\[ \\frac{S_n}{n} \\xrightarrow{P} \\mu, \\quad n \\rightarrow \\infty \\] <p>\u8bc1\u660e</p> <p>\u9996\u5148\u6709</p> \\[ ES_n = E\\sum_{k=1}^nX_k = \\sum_{k=1}^nEX_k = \\sum_{k=1}^n\\mu_k \\] <p>\u5bf9\u4e8e \\(\\forall \\varepsilon &gt; 0\\)\uff0c\u6709</p> \\[ \\begin{aligned} P(\\left| \\frac{S_n}{n} - \\frac{\\sum_{k=1}^n\\mu_k}{n} \\right| &gt; \\varepsilon) &amp;= P(\\left| S_n - ES_n \\right| &gt; n\\varepsilon) \\\\ &amp;\\leq \\frac{VarS_n}{n^2\\varepsilon^2}, \\quad \\text{Chebyshev \u4e0d\u7b49\u5f0f} \\\\ &amp;\\rightarrow 0, \\quad n \\rightarrow \\infty, \\quad \\text{\u524d\u63d0\u6761\u4ef6} \\end{aligned} \\] <p>\u63ed\u793a\u4e86 \u6837\u672c\u7684\u5747\u503c\u6e10\u8fd1\u4e8e\u603b\u4f53\u7684\u5747\u503c\uff0c\u4e14\u6ca1\u6709\u72ec\u7acb\u6027\u8981\u6c42\u3002</p> <p>\u7f3a\u70b9\uff1a\u8981\u6c42\u65b9\u5dee\u5b58\u5728\u3002</p> <p>\u5e94\u7528</p> <p>\u8bbe \\(\\xi_k, k \\geq 1\\) \u662f\u4e00\u5217\u72ec\u7acb\u7684\u968f\u673a\u53d8\u91cf\uff0c\u6709 \\(\\xi_1 \\equiv 0\\)\uff0c\u4e14\u5f53 \\(k \\geq 2\\) \u6709</p> \\[ \\begin{aligned} P(\\xi_k = k) = P(\\xi_k = -k) &amp;= \\frac{1}{2k \\log k} \\\\ P(\\xi_k = 0) &amp;= 1 - \\frac{1}{k \\log k} \\end{aligned} \\] <p>\u8bb0 \\(S_n = \\sum_{k=1}^n\\xi_k\\)\uff0c\u8bc1\u660e</p> \\[ \\frac{S_n}{n} \\xrightarrow{P} 0, \\quad n \\rightarrow \\infty \\] \u8bc1\u660e <p>\u7531\u4e8e \\(\\xi_k\\) \u4e0d\u662f\u540c\u5206\u5e03\uff0c\u6545\u4f7f\u7528 Chebyshev \u5927\u6570\u5b9a\u5f8b\u3002</p> <p>\u6709 \\(E\\xi_k = 0\\)\uff0c\\(Var\\xi_k = \\frac{k}{\\log k}\\)\uff0c\u6545</p> \\[ \\frac{VarS_n}{n^2} = \\frac{1}{n^2} \\sum_{k=1}^n\\frac{k}{\\log k} \\sim \\frac{1}{n^2} \\frac{n^2}{\\log n} \\rightarrow 0, \\quad n \\rightarrow \\infty \\] <p>\u6545</p> \\[ \\frac{S_n}{n} \\xrightarrow{P} 0, \\quad n \\rightarrow \\infty \\]"},{"location":"math/prob_theory/chapter4/#khintchine","title":"Khintchine \u5927\u6570\u5b9a\u5f8b","text":"<p>\u5047\u8bbe \\(X_k, k \\geq 1\\) \u662f\u4e00\u5217\u72ec\u7acb\u540c\u5206\u5e03\u7684\u968f\u673a\u53d8\u91cf\uff0c\\(EX_k = \\mu\\)\uff0c\u8bbe \\(S_n = \\sum_{k=1}^nX_k\\)\uff0c\u5219</p> \\[ \\frac{S_n}{n} \\xrightarrow{P} \\mu, \\quad n \\rightarrow \\infty \\]"},{"location":"math/prob_theory/chapter4/#de-moivre-laplace_1","title":"de Moivre-Laplace \u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\u7684\u63a8\u5e7f","text":""},{"location":"math/prob_theory/chapter4/#levy-feller","title":"Levy-Feller \u4e2d\u5fc3\u6781\u9650\u5b9a\u7406","text":"<p>\u8bbe \\(X_k, k \\geq 1\\) \u662f\u4e00\u5217\u72ec\u7acb\u540c\u5206\u5e03\u7684\u968f\u673a\u53d8\u91cf\uff0c\\(EX_k = \\mu, VarX_k = \\sigma^2\\)\uff0c\u8bbe \\(S_n = \\sum_{k=1}^nX_k\\)\uff0c\u5219</p> \\[ P(\\frac{S_n - n\\mu}{\\sigma\\sqrt{n}} \\leq x) \\rightarrow \\Phi(x), \\quad \\forall x, n \\rightarrow \\infty \\] <p>\u5373</p> \\[ \\frac{S_n - n\\mu}{\\sigma\\sqrt{n}} \\xrightarrow{D} N(0, 1), \\quad n \\rightarrow \\infty \\] <p>\u8bf4\u660e\u6d4b\u91cf\u8bef\u5dee\u53ef\u4ee5\u7528\u6b63\u6001\u5206\u5e03\u63cf\u8ff0\u3002</p>"},{"location":"math/prob_theory/chapter4/#lyapunov","title":"Lyapunov \u4e2d\u5fc3\u6781\u9650\u5b9a\u7406","text":"<p>\u8bbe \\(X_k, k \\geq 1\\) \u662f\u4e00\u5217\u72ec\u7acb\u968f\u673a\u53d8\u91cf\uff0c\\(EX_k = \\mu_k, VarX_k = \\sigma_k^2\\)\uff0c\u8bbe</p> \\[ S_n = \\sum_{k=1}^nX_k, B_n = \\sum_{k=1}^n\\sigma_k^2 \\] <p>\u82e5</p> \\[ \\begin{aligned} B_n &amp;\\rightarrow \\infty, \\\\ E|X_k|^3 &amp;&lt; \\infty, \\quad \\forall k \\\\ \\frac{\\sum_{k=1}^nE|X_k|^3}{B_n^{3/2}} &amp;\\rightarrow 0, \\quad n \\rightarrow \\infty \\end{aligned} \\] <p>\u5219</p> \\[ P(\\frac{\\sum_{k=1}^n(\\xi_k - \\mu_k)}{\\sqrt{B_n}} \\leq x) \\rightarrow \\Phi(x), \\quad \\forall x, n \\rightarrow \\infty \\] <p>\u5373</p> \\[ \\frac{\\sum_{k=1}^n(\\xi_k - \\mu_k)}{\\sqrt{B_n}} \\xrightarrow{D} N(0, 1), \\quad n \\rightarrow \\infty \\] <p>Example</p> <p>\u5047\u8bbe \\(\\xi_k, k \\geq 1\\) \u662f\u4e00\u5217\u72ec\u7acb\u968f\u673a\u53d8\u91cf\uff0c\u4e14</p> \\[ P(\\xi_k = 1) = p_k, \\quad P(\\xi_k = 0) = 1 - p_k, \\quad 0 &lt; p_k &lt; 1 \\] <p>\u82e5</p> \\[ B_n = \\sum_{k=1}^n p_k(1 - p_k) \\rightarrow 0, \\quad n \\rightarrow \\infty \\] <p>\u5219</p> \\[ \\frac{\\sum_{k=1}^n(\\xi_k - p_k)}{\\sqrt{\\sum_{k=1}^n p_k(1 - p_k)}} \\xrightarrow{D} N(0, 1), \\quad n \\rightarrow \\infty \\]"},{"location":"math/prob_theory/chapter4/#_4","title":"\u4f9d\u6982\u7387\u6536\u655b","text":"<p>\u8bbe \\(X_n, n \\geq 1\\) \u662f\u4e00\u5217\u968f\u673a\u53d8\u91cf\uff0c\\(X\\) \u662f\u53e6\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u5982\u679c\u5bf9\u4e8e\u4efb\u610f\u7684 \\(\\varepsilon &gt; 0\\)\uff0c\u6709</p> \\[ P(\\omega: \\left| X_n(\\omega) - X(\\omega) \\right| &gt; \\varepsilon) \\rightarrow 0, \\quad n \\rightarrow \\infty \\] <p>\u5219\u79f0 \\(X_n\\) \u4f9d\u6982\u7387\u6536\u655b\u5230 \\(X\\)\uff0c\u8bb0\u4f5c \\(X_n \\xrightarrow{P} X\\)\u3002\uff08\\(X\\) \u53ef\u4ee5\u662f\u5e38\u6570\uff09</p>"},{"location":"math/prob_theory/chapter4/#_5","title":"\u5224\u522b\u6cd5\u5219","text":"<p>\u82e5\u5b58\u5728 \\(r &gt; 0\\)\uff0c\u4f7f\u5f97</p> \\[ E|X_n - X|^r \\rightarrow 0, \\quad n \\rightarrow \\infty \\] <p>\u5219 \\(X_n \\xrightarrow{P} X\\)\u3002</p>"},{"location":"math/prob_theory/chapter4/#_6","title":"\u57fa\u672c\u6027\u8d28","text":"<ol> <li> <p>\u552f\u4e00\u6027</p> <p>\u82e5 \\(X_n \\xrightarrow{P} X\\)\uff0c\\(X_n \\xrightarrow{P} Y\\)\uff0c\u5219 \\(X = Y\\)\u3002</p> </li> <li> <p>\u8fd0\u7b97\u6027\u8d28\uff1a\u82e5 \\(X_n \\xrightarrow{P} X\\)\uff0c\\(Y_n \\xrightarrow{P} Y\\)\uff0c\u5219</p> <ul> <li>\\(X_n + Y_n \\xrightarrow{P} X + Y\\)</li> <li>\\(X_nY_n \\xrightarrow{P} XY\\)</li> <li>\u82e5 \\(Y \\neq 0\\)\uff0c\u5219 \\(\\dfrac{X_n}{Y_n} \\xrightarrow{P} \\dfrac{X}{Y}\\)</li> <li>\u82e5 \\(g\\) \u8fde\u7eed\uff0c\u5219 \\(g(X_n) \\xrightarrow{P} g(X)\\)</li> </ul> </li> </ol>"},{"location":"math/prob_theory/chapter4/#_7","title":"\u4f9d\u5206\u5e03\u6536\u655b","text":"<p>\u8bbe \\(X_n, n \\geq 1\\) \u662f\u4e00\u5217\u968f\u673a\u53d8\u91cf\uff0c\u76f8\u5e94\u5206\u5e03\u51fd\u6570\u4e3a \\(F_n(x)\\)\uff0c\\(X\\) \u662f\u53e6\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u5206\u5e03\u51fd\u6570\u4e3a \\(F(x)\\)\uff0c\u5982\u679c\u5bf9\u4e8e\u4efb\u610f\u7684 \\(F(x)\\) \u7684\u8fde\u7eed\u70b9 \\(x\\)\uff0c\u6709</p> \\[ F_n(x) \\rightarrow F(x), \\quad n \\rightarrow \\infty \\] <p>\u5219\u79f0 \\(X_n\\) \u4f9d\u5206\u5e03\u6536\u655b\u5230 \\(X\\)\uff0c\u8bb0\u4f5c \\(X_n \\xrightarrow{D} X\\) \u6216 \\(F_n \\xrightarrow{D} F\\)\u3002</p>"},{"location":"math/prob_theory/chapter4/#_8","title":"\u5224\u522b\u6cd5\u5219","text":"<p>Levy \u8fde\u7eed\u6027\u5b9a\u7406\uff1a\u8bbe \\(X_n, n \\geq 1\\) \u662f\u4e00\u5217\u968f\u673a\u53d8\u91cf\uff0c\u5177\u6709\u76f8\u5e94\u7279\u5f81\u51fd\u6570 \\(\\varphi_n(t)\\)\uff0c\\(X\\) \u662f\u53e6\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u7279\u5f81\u51fd\u6570\u4e3a \\(\\varphi(t)\\)\uff0c\u5219</p> \\[ X_n \\xrightarrow{D} X \\Leftrightarrow \\varphi_n(t) \\rightarrow \\varphi(t), \\quad t \\in \\mathbb{R}, n \\rightarrow \\infty \\] <p>Levy \u8fde\u7eed\u6027\u5b9a\u7406\u7684\u53e6\u4e00\u79cd\u5f62\u5f0f</p> <p>\u82e5 \\(X_n, n \\geq 1\\) \u662f\u4e00\u5217\u968f\u673a\u53d8\u91cf\uff0c\u5177\u6709\u76f8\u5e94\u5bc6\u5ea6\u51fd\u6570 \\(\\varphi_n(t)\\)\uff0c\u82e5</p> \\[ \\varphi_n(t) \\rightarrow \\varphi(t), \\quad t \\in \\mathbb{R}, n \\rightarrow \\infty \\] <p>\u4e14 \\(\\varphi(t)\\) \u5728 \\(0\\) \u5904\u8fde\u7eed\uff0c\u5219 \\(\\varphi(t)\\) \u4e00\u5b9a\u662f\u7279\u5f81\u51fd\u6570\uff0c\u5bf9\u5e94\u7684\u968f\u673a\u53d8\u91cf \\(X\\) \u6ee1\u8db3</p> \\[ X_n \\xrightarrow{D} X, \\quad n \\rightarrow \\infty \\]"},{"location":"math/prob_theory/chapter4/#_9","title":"\u57fa\u672c\u6027\u8d28","text":"<ol> <li> <p>\u4f9d\u6982\u7387\u6536\u655b\u610f\u5473\u7740\u4f9d\u5206\u5e03\u6536\u655b</p> <p>\u82e5 \\(X_n \\xrightarrow{P} X\\)\uff0c\u5219 \\(X_n \\xrightarrow{D} X\\)\u3002</p> </li> <li> <p>\u4f9d\u5206\u5e03\u6536\u655b\u4e0d\u610f\u5473\u7740\u4f9d\u6982\u7387\u6536\u655b</p> <p>\u7279\u6b8a\u60c5\u51b5</p> \\[ X_n \\xrightarrow{D} c \\Rightarrow X_n \\xrightarrow{P} c \\] </li> <li> <p>\u8fd0\u7b97\u6027\u8d28</p> <ol> <li> <p>\u7ebf\u6027\u8fd0\u7b97</p> <ul> <li>\u8bbe \\(X_n \\xrightarrow{D} X\\)\uff0c\\(b_n \\rightarrow b\\)\uff0c\u5219 \\(X_n + b_n \\xrightarrow{D} X + b\\)</li> <li>\u8bbe \\(X_n \\xrightarrow{D} X\\)\uff0c\\(a_n \\rightarrow a\\)\uff0c\u5219 \\(a_nX_n \\xrightarrow{D} aX\\)</li> </ul> </li> <li> <p>\u8bbe \\(X_n \\xrightarrow{D} X\\)\uff0c\\(Y_n \\xrightarrow{D} c\\)\uff0c\u5219 \\(X_nY_n \\xrightarrow{D} cX\\)</p> </li> <li>\u82e5 \\(g\\) \u8fde\u7eed\uff0c\u5219 \\(g(X_n) \\xrightarrow{D} g(X)\\)</li> </ol> </li> </ol>"},{"location":"others/","title":"\u5176\u4ed6\u8bfe\u7a0b","text":"<ul> <li>\u89c6\u5531\u7ec3\u8033</li> <li>\u6253\u5f00\u827a\u672f\u4e4b\u95e8\u2014\u2014\u94a2\u7434</li> </ul>"},{"location":"others/piano/","title":"\u6253\u5f00\u827a\u672f\u4e4b\u95e8\u2014\u2014\u94a2\u7434","text":""},{"location":"others/piano/#_2","title":"\u770b\u8c31\u8bc6\u66f2","text":"<p>\u8981\u70b9</p> <ul> <li>\u4e50\u8c31\u521d\u59cb\u6807\u8bb0\uff1a\u901f\u5ea6\u3001\u62cd\u53f7\u3001\u8c03\u53f7\u3002</li> <li>\u4e34\u65f6\u53d8\u97f3\u8bb0\u53f7\u3002</li> <li>\u8fd0\u97f3\u6cd5\u8bb0\u53f7\uff1a\u8fde\u97f3\u3001\u98a4\u97f3\u3001\u6ed1\u97f3\u3002</li> <li>\u88c5\u9970\u97f3\u8bb0\u53f7\u3002</li> <li>\u8e0f\u677f\u6807\u8bb0\u3002</li> <li>\u7ec7\u4f53\uff1a\u4f34\u594f\u4e0e\u65cb\u5f8b\u3002</li> </ul>"},{"location":"others/piano/#_3","title":"\u83ab\u624e\u7279","text":"<ul> <li>\u7ec7\u4f53\u7cbe\u7b80\u6e05\u6670\uff0c\u4f34\u594f\u901a\u5e38\u4e3a\u963f\u5c14\u8d1d\u8482\u4f4e\u97f3\u53ca\u5176\u53d8\u4f53\uff0c\u65cb\u5f8b\u5e38\u4e3a\u7c7b\u4f3c\u97f3\u9636\u7684\u7ea7\u8fdb\u8fdb\u884c\u3002     </li> <li>\u4e34\u65f6\u53d8\u97f3\u8bb0\u53f7\u5076\u5c14\u51fa\u73b0\u3002</li> <li>\u591a\u8fde\u97f3\u7ebf\uff0c\u77ed\u8df3\u97f3\u3002     </li> <li>\u88c5\u9970\u97f3\u8f83\u5e38\u89c1\uff0c\u5305\u62ec trill\uff08\u98a4\u97f3\uff09\u3001\u501a\u97f3\u3001\u77ed\u7436\u97f3\u7b49\u3002     </li> <li>\u901a\u5e38\u6ca1\u6709\u8e0f\u677f\u6807\u8bb0\u3002</li> </ul>"},{"location":"others/piano/#_4","title":"\u8d1d\u591a\u82ac","text":"<ul> <li>\u7ec7\u4f53\u4e30\u5bcc\uff0c\u4f34\u594f\u4e30\u5bcc\uff0c\u963f\u5c14\u8d1d\u8482\u4f4e\u97f3\u5c11\u89c1\uff0c\u8fde\u7eed\u53cc\u97f3\u548c\u5f26\u3001\u516b\u5ea6\u3001\u516b\u5ea6\u7436\u97f3\u8f83\u591a\uff0c\u65cb\u5f8b\u4e2d\u7436\u97f3\u8fdb\u884c\u5e38\u89c1\u3002      </li> <li>\u4e34\u65f6\u53d8\u97f3\u8bb0\u53f7\u51fa\u73b0\u8f83\u83ab\u624e\u7279\u591a\u3002</li> <li>\u8fd0\u97f3\u6cd5\u8bb0\u53f7\u4e30\u5bcc\uff0c\u77ed\u8df3\u97f3\u8f83\u5c11\uff0c\u5e38\u4e3a\u8fde\u97f3\u7ebf\u3001\u8df3\u97f3\u3002</li> <li>\u5f3a\u5f31\u53d8\u5316\u4e30\u5bcc\uff0c\u7a81\u5f3a\uff08sf\uff09\u5e38\u51fa\u73b0\u4e14\u653e\u7f6e\u5728\u5f31\u62cd\u3002     </li> <li>\u901a\u5e38\u6ca1\u6709\u8e0f\u677f\u6807\u8bb0\u3002</li> </ul>"},{"location":"others/piano/#_5","title":"\u8212\u4f2f\u7279","text":"<ul> <li>\u7ec7\u4f53\u6e05\u6670\uff0c\u4e50\u8c31\u7ed3\u6784\u5de5\u6574\uff0c\u4f34\u594f\u901a\u5e38\u4e3a\u5206\u89e3\u548c\u5f26\uff0c\u8282\u594f \u91cd\u590d\u6027\u9ad8\uff0c\u5e38\u7ef4\u6301\u591a\u4e2a\u5c0f\u8282\u3002     </li> <li>\u65cb\u5f8b\u5e38\u51fa\u73b0\u5728\u53f3\u624b\uff0c\u5177\u6709\u6b4c\u5531\u6027\uff0c\u8fde\u97f3\u7ebf\u8f83\u5e38\u89c1\u3002</li> </ul>"},{"location":"others/piano/#_6","title":"\u8096\u90a6","text":"<ul> <li>\u7ec7\u4f53\u6e05\u6670\uff0c\u53e5\u5f0f\u7ed3\u6784\u4f20\u7edf\uff0c\u4f34\u594f\u5e38\u4e3a\u5206\u89e3\u548c\u5f26\u3001\u7436\u97f3\uff0c\u97f3\u7a0b\u8de8\u5ea6\u5927\uff0c\u4f34\u594f\u58f0\u90e8\u5e38\u9690\u85cf\u5185\u58f0\u90e8\u3002     </li> <li>\u65cb\u5f8b\u5e38\u89c1\u53f3\u624b\uff0c\u65cb\u5f8b\u7ebf\u6761\u5177\u6709\u6b4c\u5531\u6027\uff0c\u88c5\u9970\u97f3\u8f83\u4e3a\u5e38\u89c1\u3002</li> <li>\u534a\u97f3\u4f7f\u7528\u8f83\u591a\uff08\u91cd\u5347\u3001\u91cd\u964d\u8bb0\u53f7 \u4f7f\u7528\u9891\u7e41\uff09\u3002     </li> </ul>"},{"location":"others/piano/#_7","title":"\u674e\u65af\u7279","text":"<ul> <li>\u901a\u5e38\u5305\u542b\u6709\u89c4\u5f8b\u7684\u6280\u5de7\u6027\u7247\u6bb5\uff08\u5982\u91cd\u590d\u7436\u97f3\u7b49\uff09</li> <li>\u6280\u5de7\u79cd\u7c7b\u4e30\u5bcc\uff0c\u901f\u5ea6\u6781\u5feb\u3002     </li> <li>\u65cb\u5f8b\u5e38\u4f7f\u7528\u53cc\u97f3\u51fa\u73b0\uff0c\u516b\u5ea6\u8fdb\u884c\u5e38\u89c1\u3002</li> <li>\u5e38\u6709\u9707\u97f3\u7b49\u6280\u5de7\u3002</li> <li>\u60c5\u611f\u4e30\u5bcc\uff0c\u5bf9\u6bd4\u5f3a\u70c8\u3002</li> </ul>"},{"location":"others/piano/#_8","title":"\u5fb7\u5f6a\u897f","text":"<ul> <li>\u7ec7\u4f53\u590d\u6742\uff0c\u540c\u97f3\u5e38\u88ab\u5206\u914d\u5230\u4e0d\u540c\u58f0\u90e8\u3002</li> <li>\u5e38\u4f7f\u7528\u4e09\u884c\u8c31\u8868\u3002</li> <li>\u5e38\u4f7f\u7528 pp\u3002</li> <li>\u53d8\u5316\u97f3\u591a\uff0c\u5347\u964d\u8bb0\u53f7\u591a\uff0c\u548c\u58f0\u4e30\u5bcc\u3002</li> <li>\u5e38\u89c1\u6807\u8bb0 Cedez \u6216 rit. \u3001au mouvt \u7b49\u3002     </li> </ul>"},{"location":"others/piano/#_9","title":"\u62c9\u5a01\u5c14","text":"<ul> <li>\u7ec7\u4f53\u4e0e\u5fb7\u5f6a\u897f\u76f8\u4f3c\uff0c\u6280\u5de7\u66f4\u590d\u6742\u3002</li> <li>\u53cd\u5dee\u66f4\u660e\u663e\uff0cpp \u548c ff \u7684\u5bf9\u6bd4\u5f3a\u70c8\u3002</li> <li>\u65cb\u5f8b\u5e38\u88ab\u5b8c\u6574\u91cd\u590d\u3002      </li> </ul>"},{"location":"others/piano/#_10","title":"\u62c9\u8d6b\u739b\u5c3c\u8bfa\u592b","text":"<ul> <li>\u7ec7\u4f53\u4e30\u5bcc\uff0c\u65cb\u5f8b\u901a\u5e38\u5728\u516b\u5ea6\u57fa\u7840\u4e0a\u52a0\u5165\u548c\u58f0\u5185\u58f0\u90e8\u3002</li> <li>\u67f1\u5f0f\u548c\u5f26\u5e38\u89c1\u3002     </li> <li>\u5f3a\u5f31\u53d8\u5316\u4e30\u5bcc\uff0c\u51fa\u73b0 sffff \u7b49\u6807\u8bb0\u3002     </li> <li>\u4f34\u594f\u5e38\u4f7f\u7528\u5305\u542b\u5341\u516d\u5206\u97f3\u7b26\u7684\u5927\u8de8\u5ea6\u7436\u97f3\u3002     </li> <li>\u6280\u5de7\u8270\u6df1\u590d\u6742\u3002</li> </ul>"},{"location":"others/sight_singing/","title":"\u89c6\u5531\u7ec3\u8033","text":""},{"location":"others/sight_singing/#_2","title":"\u4e94\u5ea6\u5708","text":"<p>\u4e94\u5ea6\u5708\u89c4\u5f8b\uff1a</p> \u4f4d\u7f6e 10 \u70b9 11 \u70b9 12 \u70b9 1 \u70b9 2 \u70b9 \u5927\u8c03\u4e3b\u97f3 \u964d B F C G D \u5c0f\u8c03\u4e3b\u97f3 G D A E B \u8c03\u53f7\u4e2a\u6570 2 \u964d\u53f7 1 \u964d\u53f7 0 1 \u5347\u53f7 2 \u5347\u53f7 <ul> <li>\u6839\u636e\u4e3b\u97f3\u5224\u65ad\u5927\u8c03\u8fd8\u662f\u5c0f\u8c03\u3002</li> <li>\u5982\u679c\u662f\u5c0f\u8c03\uff1a<ul> <li>\u5982\u679c\u6ca1\u6709\u5347\u53f7\uff0c\u662f\u81ea\u7136\u5c0f\u8c03\u3002     </li> <li>\u5982\u679c\u4e00\u4e2a\u5347\u53f7\u5728\u4e03\u7ea7\u97f3\uff0c\u662f\u548c\u58f0\u5c0f\u8c03\u3002     </li> <li>\u5982\u679c\u4e24\u4e2a\u5347\u53f7\u5206\u522b\u5728\u516d\u4e03\u7ea7\u97f3\uff0c\u662f\u65cb\u5f8b\u5c0f\u8c03\u3002     </li> </ul> </li> </ul> <p>\u79fb\u8c03\uff1a</p> <ol> <li>\u66ff\u6362\u8c03\u53f7\u3002</li> <li>\u627e\u5230\u4e3b\u97f3\u97f3\u7a0b\u5dee\u8ddd\u3002</li> <li>\u6240\u6709\u97f3\u7a0b\u90fd\u6309\u7167\u5dee\u8ddd\u79fb\u52a8\u3002</li> </ol>"},{"location":"others/sight_singing/#_3","title":"\u97f3\u7a0b\u8ba1\u7b97","text":"<ul> <li>\u51cf&lt;\u5c0f&lt;\u5927&lt;\u589e\uff1a\u4e8c\u5ea6\u3001\u4e09\u5ea6\u3001\u516d\u5ea6\u3001\u4e03\u5ea6\u3002</li> <li>\u51cf&lt;\u7eaf&lt;\u589e\uff1a\u56db\u5ea6\u3001\u4e94\u5ea6\u3002</li> </ul> <p>\u8f6c\u4f4d\uff1a</p> <ul> <li>\u51cf\u97f3\u7a0b\u7684\u8f6c\u4f4d\u662f\u589e\u97f3\u7a0b\uff0c\u5c0f\u97f3\u7a0b\u7684\u8f6c\u4f4d\u662f\u5927\u97f3\u7a0b\uff0c\u7eaf\u97f3\u7a0b\u7684\u8f6c\u4f4d\u662f\u7eaf\u97f3\u7a0b\u3002</li> <li>\u4e8c\u5ea6\u7684\u8f6c\u4f4d\u662f\u4e03\u5ea6\uff0c\u4e09\u5ea6\u7684\u8f6c\u4f4d\u662f\u516d\u5ea6\uff0c\u56db\u5ea6\u7684\u8f6c\u4f4d\u662f\u4e94\u5ea6\u3002</li> </ul> <p>\u4e09\u5168\u97f3\uff1a\u589e\u56db\u5ea6\u3001\u51cf\u4e94\u5ea6\u3002\uff08<code>F-B</code>\uff09</p> <p>\u5224\u65ad\u97f3\u7a0b\uff1a</p> <ol> <li>\u5ffd\u7565\u5347\u964d\u53f7\uff0c\u5224\u65ad\u662f\u51e0\u5ea6\u3002</li> <li>\u6839\u636e\u5347\u964d\u53f7\u5224\u65ad\u662f\u51cf\u3001\u5c0f\u3001\u5927\u3001\u589e\u3002</li> <li>\u6709\u65f6\u5019\u53ef\u4ee5\u8f6c\u4f4d\u4e4b\u540e\u5224\u65ad\u3002</li> </ol> <p>\u4f8b\u5b50</p> <p></p> \u7b54\u6848 <p></p>"},{"location":"others/sight_singing/#_4","title":"\u4e09\u548c\u5f26","text":"<p>\u7531\u4e09\u4e2a\u4e0d\u540c\u97f3\u9ad8\u53e0\u52a0\u800c\u6210\uff0c\u76f8\u90bb\u4e09\u4e2a\u97f3\u5206\u522b \u6784\u6210\u4e09\u5ea6 \u3002</p>"},{"location":"others/sight_singing/#_5","title":"\u4e09\u548c\u5f26\u7684\u5206\u7c7b","text":"<ul> <li>\u5927\u4e09\u548c\u5f26\uff1a\u5927\u4e09\u5ea6 + \u5c0f\u4e09\u5ea6\u3002</li> <li>\u5c0f\u4e09\u548c\u5f26\uff1a\u5c0f\u4e09\u5ea6 + \u5927\u4e09\u5ea6\u3002</li> <li>\u51cf\u4e09\u548c\u5f26\uff1a\u5c0f\u4e09\u5ea6 + \u5c0f\u4e09\u5ea6\u3002</li> </ul> <p>\u4e09\u548c\u5f26\u8868\u793a\u6cd5\uff1a</p> <p>\u4e00\u3001\u56db\u3001\u4e94\u7ea7\u4e09\u548c\u5f26\u4e3a\u5927\u4e09\u548c\u5f26\uff0c\u4e8c\u3001\u4e09\u3001\u516d\u7ea7\u4e09\u548c\u5f26\u4e3a\u5c0f\u4e09\u548c\u5f26\u3001\u4e03\u7ea7\u4e09\u548c\u5f26\u4e3a\u51cf\u4e09\u548c\u5f26\u3002</p> <ul> <li>\u53e4\u5178\u8868\u793a\u6cd5\uff1a\u5927\u5199\u7f57\u9a6c\u6570\u5b57\u8868\u793a\u5927\u4e09\u548c\u5f26\uff0c\u5c0f\u5199\u7f57\u9a6c\u6570\u5b57\u8868\u793a\u5c0f\u4e09\u548c\u5f26\uff0c\\(\\text{vii}^{\\circ}\\) \u8868\u793a\u51cf\u4e09\u548c\u5f26\u3002</li> <li>\u6d41\u884c\u8868\u793a\u6cd5\uff1a\u7528\u6839\u97f3\u7684\u97f3\u540d\u8868\u793a\uff0c<code>C</code> \u8868\u793a\u5927\u4e09\u548c\u5f26\uff0c<code>Dm</code> \u8868\u793a\u5c0f\u4e09\u548c\u5f26\uff0c<code>Bdim</code> \u8868\u793a\u51cf\u4e09\u548c\u5f26\u3002</li> </ul>"},{"location":"others/sight_singing/#_6","title":"\u4e09\u548c\u5f26\u7684\u8f6c\u4f4d","text":"<ul> <li>\u7b2c\u4e00\u8f6c\u4f4d\uff1a\u5c06\u6839\u97f3\u5411\u4e0a\u8f6c\u4f4d\u4e00\u4e2a\u516b\u5ea6\uff0c\u6b64\u65f6\u6700\u5927\u97f3\u7a0b\u4e3a\u516d\u5ea6\u3002</li> <li>\u7b2c\u4e8c\u8f6c\u4f4d\uff1a\u5c06\u6839\u97f3\u5411\u4e0a\u8f6c\u4f4d\u4e00\u4e2a\u516b\u5ea6\uff0c\u4e09\u97f3\u5411\u4e0a\u8f6c\u4f4d\u4e00\u4e2a\u516b\u5ea6\uff0c\u6b64\u65f6\u6700\u5927\u97f3\u7a0b\u4e3a\u516d\u5ea6\uff0c\u6b21\u5927\u97f3\u7a0b\u4e3a\u56db\u5ea6\u3002</li> </ul> <p>\u8868\u793a\u6cd5\uff1a</p> <ul> <li>\u53e4\u5178\u8868\u793a\u6cd5\uff1a\u6839\u636e\u6839\u97f3\u5224\u65ad\u51e0\u7ea7\u97f3\uff0c\u7b2c\u4e00\u8f6c\u4f4d\u5728\u53f3\u4e0a\u89d2\u6807 <code>6</code>\uff0c\u7b2c\u4e8c\u8f6c\u4f4d\u518d\u5728\u53f3\u4e0b\u89d2\u52a0 <code>4</code>\u3002</li> <li>\u6d41\u884c\u8868\u793a\u6cd5\uff1a\u6839\u636e\u6839\u97f3\u5199\u51fa\u97f3\u540d\uff0c\u8f6c\u4f4d\u5728\u540e\u9762\u52a0 <code>/</code> \u548c\u6700\u4f4e\u97f3\u97f3\u540d\u3002</li> </ul> <p>\u4f8b\u5b50</p> <p></p> <p>\u53e4\u5178\u8868\u793a\u6cd5\u5206\u522b\u4e3a\uff1a\\(\\text{ii}, \\text{iii}^6, \\text{V}, \\text{i}\\)\u3002</p> <p>\u4e03\u548c\u5f26</p> <p></p> <p>\u540c\u65f6\u5305\u542b\u4e24\u4e2a\u4e09\u548c\u5f26\u3002</p> <p>\u5c5e\u4e03\u548c\u5f26\uff08\u5927\u5c0f\u4e03\u548c\u5f26\uff09\uff1a\u7531\u6839\u97f3\u4e0a\u65b9\u5927\u4e09\u548c\u5f26+\u6839\u97f3\u4e0a\u65b9\u5c0f\u4e03\u5ea6\u6784\u6210\u3002</p> <p></p>"},{"location":"others/sight_singing/#_7","title":"\u56db\u90e8\u548c\u58f0","text":"<ul> <li>\u7b80\u5316\uff1a\u4ece\u4f4e\u5230\u9ad8\u627e\u5230\u6240\u6709\u4e0d\u91cd\u590d\u7684\u97f3\u3002</li> <li>\u5224\u65ad\uff1a\u6839\u636e\u6839\u97f3\u548c\u6700\u4f4e\u97f3\u5224\u65ad\u548c\u5f26\u3002</li> </ul> <p>\u4f8b\u5b50</p> <p></p>"}]}